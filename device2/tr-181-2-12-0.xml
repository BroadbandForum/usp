<?xml version="1.0" encoding="UTF-8"?>
<!--
  STRAW BALLOT
  
  TR-069 Device:2.12 Root Object definition

  Notice:
    The Broadband Forum is a non-profit corporation organized to create
    guidelines for broadband network system development and deployment.
    This Broadband Forum Document has been approved by members of the
    Forum. This Broadband Forum Document is not binding on the Broadband
    Forum, any of its members, or any developer or service provider.
    This Broadband Forum Document is subject to change, but only with
    approval of members of the Forum. This Document is copyrighted by
    the Broadband Forum, and all rights are reserved. Portions of this
    Document may be copyrighted by Broadband Forum members.

    THIS SPECIFICATION IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER,
    AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT IS EXPRESSLY
    DISCLAIMED. ANY USE OF THIS SPECIFICATION SHALL BE MADE ENTIRELY AT
    THE IMPLEMENTER'S OWN RISK, AND NEITHER the Forum, NOR ANY OF ITS
    MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY
    IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF ANY NATURE WHATSOEVER,
    DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS SPECIFICATION.

    Broadband Forum Documents may be copied, downloaded, stored on a
    server or otherwise re-distributed in their entirety only, and may
    not be modified without the advance written permission of the
    Broadband Forum.

    The text of this notice must be included in all copies of this
    Broadband Forum Document.

  Summary:
    TR-069 Device:2.12 Root Object definition.

  Revision History:
    * June 2016: Rev-00: initial draft of USP updates for Device:2
      
  Editors:
    * John Blackford, ARRIS

  Broadband User Service Work Area Directors:
    * Jason Walls, QA Cafe
    * John Blackford, ARRIS

  Issue History (Filename: Approval Date: Publication Date: Changes):
    * tr-181-2-0-0.xml: May 2010:
      - corresponds to TR-181 Issue 2.
    * tr-181-2-1-0.xml: November 2010:
      - corresponds to TR-181 Issue 2 Amendment 1.
    * tr-181-2-2-0.xml: March 2011:
      - corresponds to TR-181 Issue 2 Amendment 2.
    * tr-181-2-3-0.xml: September 2011:
      - corresponds to TR-181 Issue 2 Amendment 3.
    * tr-181-2-4-0.xml: November 2011:
      - corresponds to TR-181 Issue 2 Amendment 4.
    * tr-181-2-5-0.xml: May 2012:
      - corresponds to TR-181 Issue 2 Amendment 5.
    * tr-181-2-6-0.xml: November 2012:
      - corresponds to TR-181 Issue 2 Amendment 6.
    * tr-181-2-7-0.xml: November 2013: January 17, 2014
      - corresponds to TR-181 Issue 2 Amendment 7.
    * tr-181-2-8-0.xml: 8 September 2014: 17 September 2014:
      - corresponds to TR-181 Issue 2 Amendment 8.
    * tr-181-2-9-0.xml:  1 December 2014:  4 February 2015:
      - Added WiFi MAC Address Filtering
      - Added Traceroute fixes
      - Added IEEE 1905 data model
      - Incorporated TR-143a1
    * tr-181-2-10-0.xml: 9 November 2015: 13 November 2015:
      - corresponds to TR-181 Issue 2 Amendment 10.
    * tr-181-2-11-0.xml: TBD: TBD
      - Added LED status model
      - Added layer 2 tunnel support to IP diagnostics model
      - Added DSL G.fast model
      - Added Management Frame Protection support to WiFi model
      - Added WPS 2.0 support to WiFi model
      - Added user interface toggle
      - Added user interface messaging model
      - Added ConnectionRequest HTTP service toggle
      - Resolved lack of DNS fallback support for XMPP connections
    * tr-181-2-12-0.xml: TBD: TBD
      - Added Components for USP (LocalAgent, Controller, Subscription,
         ProxiedDevice, and Thing)
    
-->
<dm:document xmlns:dm="urn:broadband-forum-org:cwmp:datamodel-1-5"
             xmlns:dmr="urn:broadband-forum-org:cwmp:datamodel-report-0-1"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="urn:broadband-forum-org:cwmp:datamodel-1-5
                           http://www.broadband-forum.org/cwmp/cwmp-datamodel-1-5.xsd
                        urn:broadband-forum-org:cwmp:datamodel-report-0-1
                           http://www.broadband-forum.org/cwmp/cwmp-datamodel-report.xsd"
             spec="urn:broadband-forum-org:tr-181-2-12-0" file="tr-181-2-12-0.xml">

  <description>
    {{docname|Device Data Model for TR-069}}
    {{appdate|TBD}}
    {{trname|TR-181i2a12}}
    * Added USP Components: LocalAgent, Controller, Subscription, ProxiedDevice, and Thing
  </description>

  <import file="tr-069-1-5-biblio.xml" spec="urn:broadband-forum-org:tr-069-1-5"/>
  
  <import file="tr-106-1-0-types.xml" spec="urn:broadband-forum-org:tr-106-1-0">
    <dataType name="IPAddress"/>
  </import>

  <!-- import previous version of data model -->
  <import file="tr-181-2-11.xml" spec="urn:broadband-forum-org:tr-181-2-11">
    <model name="Device:2.11"/>
  </import>
  
  <component name="LocalAgent">
    <object name="LocalAgent." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        This object contains general information about the USP Agent itself.  For information related to the Device that hosts the Agent, please reference the {{object|.DeviceInfo}} object.
        NOTE: The Supported Data Model table ({{object|.DeviceInfo.SupportedDataModel}}) and Vendor Log File table ({{object|.DeviceInfo.VendorLogFile}}) details are located on the {{object|.DeviceInfo}} object.
      </description>
      
      <parameter name="EndpointID" access="readOnly">
        <description>
          The unique USP identifier for this USP Agent.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="SoftwareVersion" access="readOnly">
        <description>
          The current USP Agent software version; not the version of the overall CPE  firmware, which is located in {{param|.DeviceInfo.SoftwareVersion}}.
          To allow version comparisons, this element SHOULD be in the form of dot-delimited integers, where each successive integer represents  a more minor category of variation.  For example, ''3.0.21'' where the components mean: ''Major.Minor.Build''.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="UpTime" access="readOnly" activeNotify="canDeny">
        <description>
          Time in {{units}} since the USP Agent was last restarted (either via a reset of the software or reboot of the underlying device).
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="SupportedProtocols" access="readOnly">
        <description>
          USP Message Transfer Protocols supported by this USP Agent.  The USP Agent MUST support at least one Protocol.
          {{issue|Should we have an EnabledProtocol parameter that the Controller can configure}}
        </description>
        <syntax>
          <list minItems="1"/>
          <string>
            <enumeration value="CoAP"></enumeration>
            <enumeration value="HTTP"></enumeration>
            <enumeration value="STOMP"></enumeration>
          </string>
        </syntax>
      </parameter>
    </object>
  </component>

  <component name="Controllers">
    <parameter name="ControllerNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>
    
    <object name="Controller.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="ControllerNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a USP Controller that has access to this USP Agent.
      </description>
      <uniqueKey functional="true">
        <parameter ref="EndpointID"/>
      </uniqueKey>
      
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this particular USP Controller.
          A disabled USP Controller will not receive any Notifications from this USP Agent (even if Subscriptions exist).  Also, a disabled USP Controller will only have default Access Control permissions (even if specific Access Control permissions have been granted).
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="EndpointID" access="readWrite">
        <description>
          The unique USP identifier for this USP Controller.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="PeriodicNotifInterval" access="readWrite">
        <description>
          If a Periodic Notification {{object|#.Subscription.}} instance (one where the NotificationType parameter is set to Periodic) is associated with this USP Controller, then this is the duration in {{units}} of the interval for which the USP Agent MUST attempt to issue a Periodic Notification to the USP Controller.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="PeriodicNotifTime" access="readWrite">
        <description>
          If a Periodic Notification {{object|#.Subscription.}} instance (one where the NotificationType parameter is set to Periodic) is associated with this USP Controller, then this is an absolute time reference in UTC to determine when the USP Agent will issue a Periodic Notification. Each Periodic Notification MUST occur at this reference time plus or minus an integer multiple of the {{param|PeriodicNotifInterval}}.
          {{param}} is used only to set the ''phase'' of the Periodic Notifications.  The actual value of {{param}} can be arbitrarily far into the  past or future.
          For example, if {{param|PeriodicNotifInterval}} is 86400 (a day) and if {{param}} is set to UTC midnight on some day (in the past,  present, or future) then Periodic Notifications will be sent every day at UTC midnight.  These MUST begin on the very next midnight, even if {{param}} refers to a day in the future.
          The Unknown Time value defined in {{bibref|TR-106a2|section 3.2}} indicates that no particular time reference is specified.  That is, the USP Agent MAY locally choose the time reference, and needs only to adhere to the specified {{param|PeriodicNotifInterval}}.
          If absolute time is not available to the USP Agent, its Periodic Notification behavior MUST be the same as if the {{param}} parameter was set to the Unknown Time value.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="DefaultNotificationThrottle" access="readWrite">
        <description>
          This parameter is used to control throttling of Notifications sent by the USP Agent to the USP Controller.  It defines the  minimum number of {{units}} that the USP Agent MUST wait since the attempted delivery of the previous Notification before attempting to deliver a new notification.
          In other words, if the USP Agent needs to send a Notification to the USP Controller to deliver a notification, it  MUST delay sending such a Notification as needed to ensure that the minimum time since the last attempted delivery has been met.
          The time of the last attempted Notification delivery does not need to be tracked across reboots.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="USPRetryMinimumWaitInterval" access="readWrite">
        <description>
          Configures the first retry wait interval, in {{units}}, as specified in {{bibref|TR-369|section Z.Z.Z}}.
          A value of 5 corresponds to the default behavior that is described in {{bibref|TR-369}}.
          The USP Agent MUST use a random value between {{param}}  and ({{param}} * {{param|USPRetryIntervalMultiplier}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1" maxInclusive="65535"/>
            <units value="seconds"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="USPRetryIntervalMultiplier" access="readWrite">
        <description>
          Configures the retry interval multiplier as specified in {{bibref|TR-369|section Z.Z.Z}}.
          This value is expressed in units of 0.001.  Hence the values of the multiplier range between 1.000 and 65.535.
          A value of 2000 corresponds to the default behavior that is described in {{bibref|TR-369}}.
          The USP Agent MUST use a random value between {{param|USPRetryMinimumWaitInterval}}  and ({{param|USPRetryMinimumWaitInterval}} *  {{param}} / 1000) as the first retry wait interval.  Other values in the retry pattern MUST be calculated using this value as a  starting point.
        </description>
        <syntax>
          <unsignedInt>
            <range minInclusive="1000" maxInclusive="65535"/>
          </unsignedInt>
        </syntax>
      </parameter>
      <parameter name="BootParameterNumberOfEntries" access="readOnly">
        <description>
          {{numentries}}
        </description>
        <syntax>
          <unsignedInt/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.AutonomousTransferCompletePolicy." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        This object allows configuration of a USP Agent for issuing a USP Notification Message with a Notification Type of TransferComplete when the file transfer was initiated outside of USP.
        The policy defined in this object determines the conditions under which the USP Agent notifies a USP Controller, that has a Subscription with a Notification Type of TransferComplete, of the completion of file transfers that were not specifically requested by a USP Controller.
      </description>
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/disable USP Agent USP Notification Messages for file transfers that were initiated outside of USP.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="TransferTypeFilter" access="readWrite">
        <description>
          Indicates the transfer types that MUST be included when the USP Agent notifies a USP Controller of file transfers that were initiated outside of USP.   Transfer types not indicated by this filter MUST NOT be included when the USP Agent notifies a USP Controller. {{enum}}
          Note that this includes any backup or restore operations that were not specifically requested by a USP Controller.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Upload"/>
            <enumeration value="Download"/>
            <enumeration value="Both">
              <description>
                Upload and Download
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultTypeFilter" access="readWrite">
        <description>
          Indicates the transfer results that MUST be included when the USP Agent notifies a USP Controller of file transfers that were initiated outside of USP.  Transfer results omitted from this list MUST NOT be included when the USP Agent notifies a USP Controller.
          Note that this includes any backup or restore operations that were not specifically requested by a USP Controller.  A backup is regarded as an Upload and a restore is regarded as a Download.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous file transfer completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous file transfer did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                Success and Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="FileTypeFilter" access="readWrite">
        <description>
          Indicates the file types that MUST be included when the USP Agent notifies a USP Controller of file transfers that were initiated outside of USP.  File types omitted from this list MUST NOT be included when the USP Agent notifies a USP Controller.
          Note that {{empty}} indicates that all file types are excluded from this filter, effectively disabling USP Agent notifications for file transfers that were initiated outside of USP.
        </description>
        <syntax>
          <list maxItems="16"/>
          <string/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.DUStateChangeComplPolicy." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        This object allows configuration of CPE policy for notification of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events defined in {{bibref|TR-069a3}}.  
        The CPE policy determines the conditions under which the CPE notifies the ACS of the completion of Deployment Unit state changes that were not specifically requested via CWMP.
        {{issue|Does the TransferComplete Notification really apply here?  Do we want to send notifications when a DU's state has changed outside of USP?}}
      </description>
      <parameter name="Enable" access="readWrite">
        <description>
          Enables/Disables CPE notification of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events to the ACS.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="OperationTypeFilter" access="readWrite">
        <description>
          Indicates the Deployment Unit operations that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.  
          Operation types not indicated by this list MUST NOT be included when the CPE notifies the ACS.  {{empty}} is essentially the same as setting {{param|Enable}} to {{false}}.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="Install"/>
            <enumeration value="Update"/>
            <enumeration value="Uninstall"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ResultTypeFilter" access="readWrite">
        <description>
          Indicates the Deployment Unit state change results that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.  State change results omitted from this filter MUST NOT be included when the CPE notifies the ACS.
        </description>
        <syntax>
          <string>
            <enumeration value="Success">
              <description>
                The autonomous state change completed successfully; i.e., the FaultCode was zero
              </description>
            </enumeration>
            <enumeration value="Failure">
              <description>
                The autonomous state change did not complete successfully; i.e., the FaultCode was non-zero
              </description>
            </enumeration>
            <enumeration value="Both">
              <description>
                All result types independent of Success or Failure
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="FaultCodeFilter" access="readWrite">
        <description>
          Indicates the Deployment Unit state change fault codes that MUST be included when the CPE notifies the ACS of "12 AUTONOMOUS DU STATE CHANGE COMPLETE" events.  State change fault codes omitted from this filter MUST NOT be included when the CPE notifies the ACS.
          This filter has no effect on the notification of a successful autonomous state change. This filter only applies when {{param|ResultTypeFilter}} is set to either {{enum|Failure|ResultTypeFilter}} or {{enum|Both|ResultTypeFilter}}.  {{empty}} means that failed autonomous state changes will not be sent to the ACS.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="9001"/>
            <enumeration value="9003"/>
            <enumeration value="9012"/>
            <enumeration value="9013"/>
            <enumeration value="9015"/>
            <enumeration value="9016"/>
            <enumeration value="9017"/>
            <enumeration value="9018"/>
            <enumeration value="9022"/>
            <enumeration value="9023"/>
            <enumeration value="9024"/>
            <enumeration value="9025"/>
            <enumeration value="9026"/>
            <enumeration value="9027"/>
            <enumeration value="9028"/>
            <enumeration value="9029"/>
            <enumeration value="9030"/>
            <enumeration value="9031"/>
            <enumeration value="9032"/>
          </string>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.StandbyPolicy." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        Parameters related to CPE behavior when waking up from standby. If this object is supported then the CPE MUST support the requirements of {{bibref|TR-069a5|Annex L}}.
        NOTE: "CR", as used in the names and descriptions of the parameters defined in this object, refers to the Connection Request concept defined in TR-069.
        {{issue|How much of this is really relevant to USP?  Connection Request - no, but perhaps that's just network aware; Periodics - yes; Scheduled - yes, but that is now Timer}} 
      </description>
      <parameter name="CRUnawarenessMaxDuration" access="readWrite">
        <description>
          When waking up from a non CR-Aware Standby that lasted more than this parameter's value (in {{units}}), the CPE MUST issue a WAKEUP Event.
          If the value is -1, the CPE MUST NOT ever issue WAKEUP Events for having been non CR-aware.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
            <units value="seconds"/>
          </int>
          <default type="factory" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="MaxMissedPeriodic" access="readWrite">
        <description>
          When waking up from a non fully Timer-Aware Standby that made it miss more than this parameter's value Periodic Contacts, the CPE MUST issue a WAKEUP Event.
          If the value is -1, the CPE MUST NOT ever issue WAKEUP Events for exceeding that limit.
        </description>
        <syntax>
          <int>
            <range minInclusive="-1"/>
          </int>
          <default type="factory" value="-1"/>
        </syntax>
      </parameter>
      <parameter name="NotifyMissedScheduled" access="readWrite">
        <description>
          When waking up from a non fully Timer-Aware Standby that made it miss at least one Scheduled Contact, the CPE MUST issue a WAKEUP Event if this parameter is {{true}}.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="NetworkAwarenessCapable" access="readOnly">
        <description>
          Indicates that the CPE is capable of CR-Aware Standby.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="SelfTimerCapable" access="readOnly">
        <description>
          Indicates that the CPE is capable of Timer-Aware Standby.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
      <parameter name="CRAwarenessRequested" access="readWrite">
        <description>
          If {{param|NetworkAwarenessCapable}} and this parameter are both {{true}}, the CPE MUST NOT go into a non CR-Aware Standby state.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="PeriodicAwarenessRequested" access="readWrite">
        <description>
          If {{param|SelfTimerCapable}} and this parameter are both {{true}}, the CPE MUST NOT go into a standby state that prevents it from honoring Periodic Contacts.
        </description>
        <syntax>
          <boolean/>
          <default type="factory" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ScheduledAwarenessRequested" access="readWrite">
        <description>
          If this parameter is true, the CPE MUST NOT go into a standby state that prevents it from honoring Scheduled Contacts. This means that, whenever the ACS has requested a Scheduled Contact:
          *if {{param|SelfTimerCapable}} is {{true}} and the CPE chooses to go into Standby before the Scheduled Contact has been honored, it MUST use a Timer-Aware Standby;
          *if {{param|SelfTimerCapable}} is {{false}}, the CPE MUST NOT go into Standby before the Scheduled Contact has been honored.
        </description>
        <syntax>
          <boolean/>
        </syntax>
      </parameter>
    </object>

    <object name="Controller.{i}.BootParameter.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="BootParameterNumberOfEntries" enableParameter="Enable">
      <description>
        This table provides the Controller with the ability to dictate the Parameters that are delivered by the Boot Notification.
        Any Parameter (identified by {{param|ParameterName}}) contained in this table MUST be included within the param_map element of the Boot Notification. 
      </description>
      <uniqueKey>
        <parameter ref="ParameterName"/>
      </uniqueKey>
      
      <parameter name="Enable" access="readWrite">
        <description>
          Enables or disables this {{object}}.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="ParameterName" access="readWrite">
        <description>
          A pattern that describes the Parameter(s) to be included in the param_map element of the Boot Notification.  Specifically, patterns with wildcards (an "*" character) in place of Instance Identifiers are allowed.  
          If the pattern does not match any existing Parameters at the time that the Agent is creating the Boot Notification, then this {{object|#.BootParameter}} instance is not included in the param_map of the Boot Notification.
        </description>
        <syntax>
          <string>
            <size maxLength="256"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
    </object>
  </component>
  
    <component name="MTPs">
    <parameter name="MTPNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>
    
    <object name="MTP.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="MTPNumberOfEntries" enableParameter="Enable">
      <description>
        Each instance of this table represents a MTP used by a USP Endpoint.
      </description>
      <uniqueKey functional="true">
        <parameter ref="Name"/>
      </uniqueKey>
      
      <parameter name="Enable" access="readWrite">
        <description>
          Enable/Disable this particular MTP.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"></default>
        </syntax>
      </parameter>
      <parameter name="Name" access="readWrite">
        <description>
          The Name Message Transport Protocol (MTP) instance to be used for communications by a USP Endpoint.
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="Protocol" access="readWrite">
        <description>
          The Message Transport Protocol (MTP) to be used for communications by a USP Endpoint.
        </description>
        <syntax>
          <string>
            <enumeration value="CoAP"></enumeration>
            <enumeration value="HTTP"></enumeration>
            <enumeration value="STOMP"></enumeration>
          </string>
          <default type="object" value="HTTP"></default>
        </syntax>
      </parameter>
    </object>
    
    <object name="MTP.{i}.CoAP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the CoAP Message Transport Protocol (MTP), then this object contains CoAP specific configuration parameters. 
      </description>
      <parameter name="URL" access="readWrite">
        <description>
          The URL for the USP Endpoint's CoAP server.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
    </object>

    <object name="MTP.{i}.HTTP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the HTTP Message Transport Protocol (MTP), then this object contains HTTP specific configuration parameters. 
      </description>
      
      <parameter name="URL" access="readWrite">
        <description>
          The URL for the USP Endpoint's HHTP server.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="CompressionSupported" access="readOnly">
        <description>
          Indicates the HTTP Compression mechanism(s) supported by this CPE.  Requirements for the use of HTTP Compression for CWMP can be found in {{bibref|TR-069a5|Section 3.4.7}}. {{enum}}
          Vendors can extend the enumerated values with vendor specific extensions, in which case the rules outlined in {{bibref|TR-106a7|Section 3.3}} MUST be adhered to.
        </description>
        <syntax>
          <list/>
          <string>
            <enumeration value="GZIP">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Compress">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
            <enumeration value="Deflate">
              <description>
                As defined in {{bibref|RFC2616|Section 3.5}}
              </description>
            </enumeration>
          </string>
        </syntax>
      </parameter>
      <parameter name="Compression" access="readWrite">
        <description>
          The value of this parameter represents the HTTP Compression mechanism to be used by the CPE when communicating with the ACS.
        </description>
        <syntax>
          <string>
            <enumerationRef targetParam="CompressionSupported" nullValue="Disabled"/>
          </string>
          <default type="factory" value="Disabled"/>
        </syntax>
      </parameter>
    </object>

    <object name="MTP.{i}.STOMP." access="readOnly" minEntries="1" maxEntries="1">
      <description>
        If the USP Endpoint uses the STOMP Message Transport Protocol (MTP), then this object contains STOMP specific configuration parameters to which the USP Endpoint would attach. 
      </description>
      
      <parameter name="Host" access="readWrite">
        <description>
          The host name or IP address of the STOMP Server that the USP Controller is connected to.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Port" access="readWrite">
        <description>
          The port number of the STOMP Server that the USP Controller is connected to.
        </description>
        <syntax>
          <unsignedInt/>
          <default type="object" value="61613"></default>
        </syntax>
      </parameter>
      <parameter name="Username" access="readWrite">
        <description>
          The value to use in the 'login' header when connecting to the STOMP Server.
        </description>
        <syntax>
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
      <parameter name="Password" access="readWrite">
        <description>
          The value to use in the 'passcode' header when connecting to the STOMP Server.
        </description>
        <syntax hidden="true">
          <string/>
          <default type="object" value=""></default>
        </syntax>
      </parameter>
    </object>
  </component>
  
  <component name="Subscriptions">
    <parameter name="SubscriptionNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>
    
    <object name="Subscription.{i}." access="readWrite" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="SubscriptionNumberOfEntries" enableParameter="Enable">
      <description>
        A Subscription dictates how a USP Agent issues USP Notification Messages to a USP Controller.
      </description>
      <uniqueKey functional="false">
        <parameter ref="SubscriptionID"/>
        <parameter ref="Recipient"/>
      </uniqueKey>
      
      <parameter name="Enable" access="readWrite">
        <description>
          Enables/disables this {{object}}.  A disabled entry MUST NOT be processed by the USP Agent.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="SubscriptionID" access="readWrite">
        <description>
          Unique identifier of the {{object}} itself, which is specific to the USP Controller that creates the instance of the {{object}}.
          This value is also populated in the subscription_id element of every Notification message sent from a USP Agent to a USP Controller.
        </description>
        <syntax>
          <string>
            <size maxLength="64"/>
          </string>
          <default type="object" value=""/>
        </syntax>
      </parameter>
      <parameter name="Recipient" access="readOnly">
        <description>
          A reference to the {{object|#.Controller.{i}.}} instance that will receive the Notification associated with this {{object}}.
          The value of this parameter is automatically populated by the USP Agent upon {{object}} creation using the reference to the USP Controller that created the instance.
        </description>
        <syntax>
          <string>
            <pathRef refType="strong" targetParent="#.Controller." targetType="row"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="CreationDate" access="readOnly">
        <description>
          The date and time when this instance of {{object}} was created. This is internally used by the {{param|TimeToLive}} parameter to determine the expiration of this {{object}} instance.
          The value of this parameter is automatically populated by the USP Agent upon {{object}} creation.
        </description>
        <syntax>
          <dateTime/>
        </syntax>
      </parameter>
      <parameter name="NotificationType" access="readWrite">
        <description>
          Type of Notification message that will be sent to the USP Controller specified by {{param|Recipient}} when this {{object}} is triggered.
        </description>
        <syntax>
          <string>
            <enumeration value="Boot"/>
            <enumeration value="ValueChange"/>
            <enumeration value="ObjectCreation"/>
            <enumeration value="ObjectDeletion"/>
            <enumeration value="Periodic"/>
            <enumeration value="OperationComplete"/>
            <enumeration value="Wakeup"/>
            <enumeration value="Timer"/>
            <enumeration value="TransferComplete"/>
            <enumeration value="OnBoardRequest"/>
            <enumeration value="PassiveValueChange"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="ReferenceList" access="readWrite">
        <description>
          Each entry in the list is a parameter path that determines the element of the data model that the {{object}} is applicable to.
          Different values of the {{param|NotificationType}} parameter will cause the {{object}} to interact with {{param}} differently.  For example, an instance of {{object}} with {{enum|ValueChange|NotificationType}} will utilize the value of this parameter differently than an instance with {{enum|Boot|NotificationType}}.
          Expressions are allowed in the list items, but in some cases could cause a dynamic set of instances to be monitored in order to fulfill the Subscription's requirements.
          {{issue|There is a real concern about expressions causing some issues for the Agent due to the dynamic set of instances that could constantly change}}
        </description>
        <syntax>
          <list/>
          <string>
            <size maxLength="256"/>
          </string>
        </syntax>
      </parameter>
      <parameter name="Persistent" access="readWrite">
        <description>
          Determines whether or not this {{object}} remains after the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          If {{true}}, this {{object}} stays in existence until either a Delete message removes it or the {{param|TimeToLive}} parameter expires.
          If {{false}}, this {{object}} is automatically removed by the USP Agent whenever it is restarted.
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="TimeToLive" access="readWrite">
        <description>
          Specifies the duration of time (in {{units}}) that this {{object}} remains in existence.  After {{param}} has expired, this {{object}} instance is automatically removed by the USP Agent.
          If the value of {{param}} is 0, then this parameter is ignored and this {{object}} stays in existence until either a Delete message removes it or the {{param|Persistent}} parameter determines that it should be removed.
          If the value of {{param}} is greater than 0, then this parameter determines the length of time (from {{object}} creation) until it will be automatically removed by the USP Agent (unless the {{param|Persistent}} parameter is {{false}} and the USP Agent is restarted, in which case it will be removed before the {{param}} expiration).  NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to.
          If the USP Agent is incapable of maintaining absolute time then {{param}} will automatically expire if the USP Agent is restarted (either via a reset of the software or reboot of the underlying device) before {{param}} expiration.
        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"/>
        </syntax>
      </parameter>
      <parameter name="NotificationRetry" access="readWrite">
        <description>
          Specifies whether or not the USP Agent attempts to re-deliver the Notification in the event that it could not be delivered to the USP Controller.
          When {{param}} is {{true}}, the USP Agent MUST retry the delivery of the Notification.  This implies that the Notification MUST be generated with the "send_resp" flag set to {{true}} such that they USP Agent knows when the Notification has been successfully delivered.
          When {{param}} is {{false}}, the USP Agent MUST NOT retry the delivery of the Notification, and SHOULD generate the notification with "send_resp" flag set to {{false}}.
          {{issue|Need to extend this description to talk about the retry algorithm}}
        </description>
        <syntax>
          <boolean/>
          <default type="object" value="false"/>
        </syntax>
      </parameter>
      <parameter name="NotificationExpiration" access="readWrite">
        <description>
          Specifies the duration of time (in {{units}}) that the Notification associated with this {{object}} will continue to be retried.  After {{param}} has expired, if the Notification has still not been successfully delivered then the USP Agent MUST stop attempting to re-deliver the Notification.
          If {{param|NotificationRetry}} is set to {{false}} then this parameter is ignored.
          If {{param|NotificationRetry}} is set to {{true}} and the value of {{param}} is 0, then the USP Agent will attempt to re-deliver the Notification until it has been successfully delivered or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          If {{param|NotificationRetry}} is set to {{true}} and the value of {{param}} is greater than 0, then the USP Agent will attempt to re-deliver the Notification until either it has been successfully delivered, until the length of time (from the time tha the Notification was initially attempted to be delivered) specified in this parameter expires, or until the USP Agent is restarted (either via a reset of the software or reboot of the underlying device).
          NOTE: This paramater does not count down as time moves forward; it will always read back with the same value that it was last set to.        </description>
        <syntax>
          <unsignedInt>
            <units value="seconds"/>
          </unsignedInt>
          <default type="object" value="0"></default>
        </syntax>
      </parameter>
    </object>
  </component>
  
  <component name="AccessControl"></component>
  
  <component name="Requests">
    <parameter name="RequestNumberOfEntries" access="readOnly">
      <description>{{numentries}}</description>
      <syntax>
        <unsignedInt/>
      </syntax>
    </parameter>
    
    <object name="Request.{i}." access="readOnly" minEntries="0" maxEntries="unbounded"
            numEntriesParameter="RequestNumberOfEntries">
      <description>
        {{object}} instances are created using USP ''Operate'' messages. Only ''Operate'' messages with ''async''=''true'' will create a {{object}} instance in the data model.
        An ''Operate'' message is associated with a command; commands are declared using the DM ''command'' element (a legacy CWMPv1 command parameter is a parameterless USP command).
        {{issue|Need to describe the life cycle of a Request instance}}
        {{issue|Need to add the Cancel() command}}
      </description>
      
      <uniqueKey functional="true">
        <parameter ref="Command"/>
        <parameter ref="CommandKey"/>
      </uniqueKey>
      
      <parameter name="Command" access="readOnly">
        <description>
          {{issue|Need description here}}
        </description>
        <syntax>
          <string/>
        </syntax>
      </parameter>
      <parameter name="CommandKey" access="readOnly">
        <description>
          The command key from the USP ''Operate'' message.
        </description>
        <syntax><string/></syntax>
      </parameter>
      <parameter name="Status" access="readOnly">
        <description>
          {{issue|Need description here}}
        </description>
        <syntax>
          <string>
            <enumeration value="Requested"/>
            <enumeration value="Active"/>
            <enumeration value="Canceling"/>
            <enumeration value="Canceled"/>
            <enumeration value="Success"/>
            <enumeration value="Error"/>
          </string>
        </syntax>
      </parameter>
    </object>
  </component>
  
  <component name="ProxiedDevices"></component>
  
  <component name="InternetOfThings"></component>
  
  
  <model name="Device:2.12" base="Device:2.11">
    <component path="Device." ref="LocalAgent"/>
    <component path="Device.LocalAgent." ref="MTPs"/>
    <component path="Device.LocalAgent." ref="Controllers"/>
    <component path="Device.LocalAgent.Controller.{i}." ref="MTPs"/>
    <component path="Device.LocalAgent." ref="Subscriptions"/>
    <component path="Device.LocalAgent." ref="Requests"/>
    <component path="Device." ref="AccessControl"/>
    <component path="Device." ref="ProxiedDevices"/>
    <component path="Device." ref="InternetOfThings"/>
  </model>
</dm:document>
