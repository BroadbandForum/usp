module: Device
   +--rw Device
      +--ro RootDataModelVersion?   string
      +--ro Services
      +--rw DeviceInfo
      |  +--ro DeviceCategory?              string
      |  +--ro Manufacturer?                string
      |  +--ro ManufacturerOUI?             string
      |  +--ro ModelName?                   string
      |  +--ro ModelNumber?                 string
      |  +--ro Description?                 string
      |  +--ro ProductClass?                string
      |  +--ro SerialNumber?                string
      |  +--ro HardwareVersion?             string
      |  +--ro SoftwareVersion?             string
      |  +--ro AdditionalHardwareVersion?   string
      |  +--ro AdditionalSoftwareVersion?   string
      |  +--rw ProvisioningCode?            string
      |  +--ro UpTime?                      uint32
      |  +--ro FirstUseDate?                yang:date-and-time
      |  +--ro VendorConfigFile* [Name]
      |  |  +--ro Name                   string
      |  |  +--ro Version?               string
      |  |  +--ro Date?                  yang:date-and-time
      |  |  +--ro Description?           string
      |  |  +--ro UseForBackupRestore?   boolean
      |  +--ro SupportedDataModel* [URL]
      |  |  +--ro URL         string
      |  |  +--ro UUID?       yang:uuid
      |  |  +--ro URN?        string
      |  |  +--ro Features?   string
      |  +--ro MemoryStatus
      |  |  +--ro Total?   uint32
      |  |  +--ro Free?    uint32
      |  +--ro ProcessStatus
      |  |  +--ro CPUUsage?   uint32
      |  |  +--ro Process* [PID]
      |  |     +--ro PID         uint32
      |  |     +--ro Command?    string
      |  |     +--ro Size?       uint32
      |  |     +--ro Priority?   uint32
      |  |     +--ro CPUTime?    uint32
      |  |     +--ro State?      enumeration
      |  +--rw TemperatureStatus
      |  |  +--rw TemperatureSensor* [Name]
      |  |     +--rw Enable?            boolean
      |  |     +--ro Status?            enumeration
      |  |     +--rw Reset?             boolean
      |  |     +--ro ResetTime?         yang:date-and-time
      |  |     +--ro Name               string
      |  |     +--ro Value?             int32
      |  |     +--ro LastUpdate?        yang:date-and-time
      |  |     +--ro MinValue?          int32
      |  |     +--ro MinTime?           yang:date-and-time
      |  |     +--ro MaxValue?          int32
      |  |     +--ro MaxTime?           yang:date-and-time
      |  |     +--rw LowAlarmValue?     int32
      |  |     +--ro LowAlarmTime?      yang:date-and-time
      |  |     +--rw HighAlarmValue?    int32
      |  |     +--rw PollingInterval?   uint32
      |  |     +--ro HighAlarmTime?     yang:date-and-time
      |  +--ro NetworkProperties
      |  |  +--ro MaxTCPWindowSize?    uint32
      |  |  +--ro TCPImplementation?   enumeration
      |  +--ro Processor* [Alias]
      |  |  +--ro Architecture?   enumeration
      |  +--ro VendorLogFile* [Alias]
      |  |  +--ro Name?          string
      |  |  +--ro MaximumSize?   uint32
      |  |  +--ro Persistent?    boolean
      |  +--ro ProxierInfo
      |  |  +--ro ManufacturerOUI?   string
      |  |  +--ro ProductClass?      string
      |  |  +--ro SerialNumber?      string
      |  |  +--ro ProxyProtocol?     enumeration
      |  +--rw Location* [Source ExternalSource]
      |     +--ro Source              enumeration
      |     +--ro AcquiredTime?       yang:date-and-time
      |     +--ro ExternalSource      string
      |     +--ro ExternalProtocol?   enumeration
      |     +--rw DataObject?         string
      +--rw ManagementServer
      |  +--rw EnableCWMP?                                  boolean
      |  +--rw URL?                                         string
      |  +--rw Username?                                    string
      |  +--rw Password?                                    string
      |  +--rw ScheduleReboot?                              yang:date-and-time
      |  +--rw DelayReboot?                                 int32
      |  +--rw PeriodicInformEnable?                        boolean
      |  +--rw PeriodicInformInterval?                      uint32
      |  +--rw PeriodicInformTime?                          yang:date-and-time
      |  +--ro ParameterKey?                                string
      |  +--ro ConnectionRequestURL?                        string
      |  +--rw ConnectionRequestUsername?                   string
      |  +--rw ConnectionRequestPassword?                   string
      |  +--rw UpgradesManaged?                             boolean
      |  +--ro KickURL?                                     string
      |  +--ro DownloadProgressURL?                         string
      |  +--rw DefaultActiveNotificationThrottle?           uint32
      |  +--rw CWMPRetryMinimumWaitInterval?                uint32
      |  +--rw CWMPRetryIntervalMultiplier?                 uint32
      |  +--ro UDPConnectionRequestAddress?                 string
      |  +--rw STUNEnable?                                  boolean
      |  +--rw STUNServerAddress?                           string
      |  +--rw STUNServerPort?                              uint32
      |  +--rw STUNUsername?                                string
      |  +--rw STUNPassword?                                string
      |  +--rw STUNMaximumKeepAlivePeriod?                  int32
      |  +--rw STUNMinimumKeepAlivePeriod?                  uint32
      |  +--ro NATDetected?                                 boolean
      |  +--ro AliasBasedAddressing?                        boolean
      |  +--rw InstanceMode?                                enumeration
      |  +--rw AutoCreateInstances?                         boolean
      |  +--rw ManageableDeviceNotificationLimit?           uint32
      |  +--ro SupportedConnReqMethods?                     enumeration
      |  +--rw ConnReqXMPPConnection?                       string
      |  +--rw ConnReqAllowedJabberIDs?                     string
      |  +--ro ConnReqJabberID?                             string
      |  +--ro HTTPCompressionSupported?                    enumeration
      |  +--rw HTTPCompression?                             string
      |  +--ro LightweightNotificationProtocolsSupported?   enumeration
      |  +--rw LightweightNotificationProtocolsUsed?        string
      |  +--rw UDPLightweightNotificationHost?              string
      |  +--rw UDPLightweightNotificationPort?              uint32
      |  +--ro ManageableDevice* [ManufacturerOUI SerialNumber ProductClass]
      |  |  +--ro ManufacturerOUI    string
      |  |  +--ro SerialNumber       string
      |  |  +--ro ProductClass       string
      |  |  +--ro Host?              string
      |  +--rw AutonomousTransferCompletePolicy
      |  |  +--rw Enable?               boolean
      |  |  +--rw TransferTypeFilter?   enumeration
      |  |  +--rw ResultTypeFilter?     enumeration
      |  |  +--rw FileTypeFilter?       string
      |  +--rw DownloadAvailability
      |  |  +--rw Announcement
      |  |  |  +--rw Enable?   boolean
      |  |  |  +--ro Status?   enumeration
      |  |  |  +--rw Group* [URL]
      |  |  |     +--rw Enable?   boolean
      |  |  |     +--ro Status?   enumeration
      |  |  |     +--rw URL       string
      |  |  +--rw Query
      |  |     +--rw Enable?   boolean
      |  |     +--ro Status?   enumeration
      |  |     +--rw URL?      string
      |  +--rw DUStateChangeComplPolicy
      |  |  +--rw Enable?                boolean
      |  |  +--rw OperationTypeFilter?   enumeration
      |  |  +--rw ResultTypeFilter?      enumeration
      |  |  +--rw FaultCodeFilter?       enumeration
      |  +--ro EmbeddedDevice* [ControllerID ProxiedDeviceID]
      |  |  +--ro ControllerID                  string
      |  |  +--ro ProxiedDeviceID               string
      |  |  +--ro Reference?                    string
      |  |  +--ro SupportedDataModel?           string
      |  |  +--ro Host?                         string
      |  |  +--ro ProxyProtocol?                enumeration
      |  |  +--ro ProxyProtocolReference?       string
      |  |  +--ro DiscoveryProtocol?            enumeration
      |  |  +--ro DiscoveryProtocolReference?   string
      |  |  +--ro CommandProcessed?             enumeration
      |  |  +--ro CommandProcessingErrMsg?      string
      |  |  +--ro LastSyncTime?                 yang:date-and-time
      |  +--ro VirtualDevice* [ManufacturerOUI ProductClass SerialNumber]
      |  |  +--ro ManufacturerOUI               string
      |  |  +--ro ProductClass                  string
      |  |  +--ro SerialNumber                  string
      |  |  +--ro Host?                         string
      |  |  +--ro ProxyProtocol?                enumeration
      |  |  +--ro ProxyProtocolReference?       string
      |  |  +--ro DiscoveryProtocol?            enumeration
      |  |  +--ro DiscoveryProtocolReference?   string
      |  +--rw StandbyPolicy
      |  |  +--rw CRUnawarenessMaxDuration?      int32
      |  |  +--rw MaxMissedPeriodic?             int32
      |  |  +--rw NotifyMissedScheduled?         boolean
      |  |  +--ro NetworkAwarenessCapable?       boolean
      |  |  +--ro SelfTimerCapable?              boolean
      |  |  +--rw CRAwarenessRequested?          boolean
      |  |  +--rw PeriodicAwarenessRequested?    boolean
      |  |  +--rw ScheduledAwarenessRequested?   boolean
      |  +--rw InformParameter* [ParameterName]
      |     +--rw Enable?          boolean
      |     +--rw ParameterName    string
      |     +--rw EventList?       string
      +--ro GatewayInfo
      |  +--ro ManufacturerOUI?   string
      |  +--ro ProductClass?      string
      |  +--ro SerialNumber?      string
      +--rw Time
      |  +--rw Enable?             boolean
      |  +--ro Status?             enumeration
      |  +--rw NTPServer1?         string
      |  +--rw NTPServer2?         string
      |  +--rw NTPServer3?         string
      |  +--rw NTPServer4?         string
      |  +--rw NTPServer5?         string
      |  +--ro CurrentLocalTime?   yang:date-and-time
      |  +--rw LocalTimeZone?      string
      +--rw UserInterface
      |  +--rw PasswordRequired?         boolean
      |  +--rw PasswordUserSelectable?   boolean
      |  +--rw PasswordReset?            boolean
      |  +--rw UpgradeAvailable?         boolean
      |  +--rw WarrantyDate?             yang:date-and-time
      |  +--rw ISPName?                  string
      |  +--rw ISPHelpDesk?              string
      |  +--rw ISPHomePage?              string
      |  +--rw ISPHelpPage?              string
      |  +--rw ISPLogo?                  binary
      |  +--rw ISPLogoSize?              uint32
      |  +--rw ISPMailServer?            string
      |  +--rw ISPNewsServer?            string
      |  +--rw TextColor?                yang:hex-string
      |  +--rw BackgroundColor?          yang:hex-string
      |  +--rw ButtonColor?              yang:hex-string
      |  +--rw ButtonTextColor?          yang:hex-string
      |  +--rw AutoUpdateServer?         string
      |  +--rw UserUpdateServer?         string
      |  +--ro AvailableLanguages?       string
      |  +--rw CurrentLanguage?          string
      |  +--rw RemoteAccess
      |  |  +--rw Enable?               boolean
      |  |  +--rw Port?                 uint32
      |  |  +--ro SupportedProtocols?   enumeration
      |  |  +--rw Protocol?             string
      |  +--rw LocalDisplay
      |     +--rw Movable?         boolean
      |     +--rw Resizable?       boolean
      |     +--rw PosX?            int32
      |     +--rw PosY?            int32
      |     +--rw Width?           uint32
      |     +--rw Height?          uint32
      |     +--ro DisplayWidth?    uint32
      |     +--ro DisplayHeight?   uint32
      +--ro InterfaceStack* [HigherLayer LowerLayer]
      |  +--ro HigherLayer    string
      |  +--ro LowerLayer     string
      |  +--ro HigherAlias?   string
      |  +--ro LowerAlias?    string
      +--rw DSL
      |  +--rw Line* [Alias]
      |  |  +--rw Enable?                           boolean
      |  |  +--rw EnableDataGathering?              boolean
      |  |  +--ro Status?                           enumeration
      |  |  +--ro Name?                             string
      |  |  +--ro LastChange?                       uint32
      |  |  +--rw LowerLayers?                      string
      |  |  +--ro Upstream?                         boolean
      |  |  +--ro FirmwareVersion?                  string
      |  |  +--ro LinkStatus?                       enumeration
      |  |  x--ro StandardsSupported?               enumeration
      |  |  +--ro XTSE?                             yang:hex-string
      |  |  x--ro StandardUsed?                     string
      |  |  +--ro XTSUsed?                          yang:hex-string
      |  |  +--ro LineEncoding?                     enumeration
      |  |  +--ro AllowedProfiles?                  enumeration
      |  |  +--ro CurrentProfile?                   string
      |  |  +--ro PowerManagementState?             enumeration
      |  |  +--ro SuccessFailureCause?              uint32
      |  |  +--ro UPBOKLER?                         uint32
      |  |  +--ro UPBOKLEPb?                        uint32
      |  |  +--ro UPBOKLERPb?                       uint32
      |  |  +--ro RXTHRSHds?                        int32
      |  |  +--ro ACTRAMODEds?                      uint32
      |  |  +--ro ACTRAMODEus?                      uint32
      |  |  +--ro ACTINPROCds?                      uint32
      |  |  +--ro ACTINPROCus?                      uint32
      |  |  +--ro SNRMROCds?                        uint32
      |  |  +--ro SNRMROCus?                        uint32
      |  |  +--ro LastStateTransmittedDownstream?   uint32
      |  |  +--ro LastStateTransmittedUpstream?     uint32
      |  |  +--ro UPBOKLE?                          uint32
      |  |  +--ro MREFPSDds?                        binary
      |  |  +--ro MREFPSDus?                        binary
      |  |  +--ro LIMITMASK?                        uint32
      |  |  +--ro US0MASK?                          uint32
      |  |  +--ro TRELLISds?                        int32
      |  |  +--ro TRELLISus?                        int32
      |  |  +--ro ACTSNRMODEds?                     uint32
      |  |  +--ro ACTSNRMODEus?                     uint32
      |  |  +--ro VirtualNoisePSDds?                binary
      |  |  +--ro VirtualNoisePSDus?                binary
      |  |  +--ro ACTUALCE?                         uint32
      |  |  +--ro LineNumber?                       int32
      |  |  +--ro UpstreamMaxBitRate?               uint32
      |  |  +--ro DownstreamMaxBitRate?             uint32
      |  |  +--ro UpstreamNoiseMargin?              int32
      |  |  +--ro DownstreamNoiseMargin?            int32
      |  |  +--ro SNRMpbus?                         string
      |  |  +--ro SNRMpbds?                         string
      |  |  +--ro INMIATOds?                        uint32
      |  |  +--ro INMIATSds?                        uint32
      |  |  +--ro INMCCds?                          uint32
      |  |  +--ro INMINPEQMODEds?                   uint32
      |  |  +--ro UpstreamAttenuation?              int32
      |  |  +--ro DownstreamAttenuation?            int32
      |  |  +--ro UpstreamPower?                    int32
      |  |  +--ro DownstreamPower?                  int32
      |  |  +--ro XTURVendor?                       yang:hex-string
      |  |  +--ro XTURCountry?                      yang:hex-string
      |  |  +--ro XTURANSIStd?                      uint32
      |  |  +--ro XTURANSIRev?                      uint32
      |  |  +--ro XTUCVendor?                       yang:hex-string
      |  |  +--ro XTUCCountry?                      yang:hex-string
      |  |  +--ro XTUCANSIStd?                      uint32
      |  |  +--ro XTUCANSIRev?                      uint32
      |  |  +--ro DataGathering
      |  |  |  +--ro LoggingDepthR?               uint32
      |  |  |  +--ro ActLoggingDepthReportingR?   uint32
      |  |  |  +--ro EventTraceBufferR?           string
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                uint64
      |  |  |  +--ro BytesReceived?            uint64
      |  |  |  +--ro PacketsSent?              uint64
      |  |  |  +--ro PacketsReceived?          uint64
      |  |  |  +--ro ErrorsSent?               uint32
      |  |  |  +--ro ErrorsReceived?           uint32
      |  |  |  +--ro DiscardPacketsSent?       uint32
      |  |  |  +--ro DiscardPacketsReceived?   uint32
      |  |  |  +--ro TotalStart?               uint32
      |  |  |  +--ro ShowtimeStart?            uint32
      |  |  |  +--ro LastShowtimeStart?        uint32
      |  |  |  +--ro CurrentDayStart?          uint32
      |  |  |  +--ro QuarterHourStart?         uint32
      |  |  |  +--ro Total
      |  |  |  |  +--ro ErroredSecs?           uint32
      |  |  |  |  +--ro SeverelyErroredSecs?   uint32
      |  |  |  +--ro Showtime
      |  |  |  |  +--ro ErroredSecs?           uint32
      |  |  |  |  +--ro SeverelyErroredSecs?   uint32
      |  |  |  +--ro LastShowtime
      |  |  |  |  +--ro ErroredSecs?           uint32
      |  |  |  |  +--ro SeverelyErroredSecs?   uint32
      |  |  |  +--ro CurrentDay
      |  |  |  |  +--ro ErroredSecs?           uint32
      |  |  |  |  +--ro SeverelyErroredSecs?   uint32
      |  |  |  +--ro QuarterHour
      |  |  |     +--ro ErroredSecs?           uint32
      |  |  |     +--ro SeverelyErroredSecs?   uint32
      |  |  +--ro TestParams
      |  |     +--ro HLOGGds?    uint32
      |  |     +--ro HLOGGus?    uint32
      |  |     +--ro HLOGpsds?   string
      |  |     +--ro HLOGpsus?   string
      |  |     +--ro HLOGMTds?   uint32
      |  |     +--ro HLOGMTus?   uint32
      |  |     +--ro QLNGds?     uint32
      |  |     +--ro QLNGus?     uint32
      |  |     +--ro QLNpsds?    int32
      |  |     +--ro QLNpsus?    string
      |  |     +--ro QLNMTds?    uint32
      |  |     +--ro QLNMTus?    uint32
      |  |     +--ro SNRGds?     uint32
      |  |     +--ro SNRGus?     uint32
      |  |     +--ro SNRpsds?    int32
      |  |     +--ro SNRpsus?    string
      |  |     +--ro SNRMTds?    uint32
      |  |     +--ro SNRMTus?    uint32
      |  |     +--ro LATNds?     string
      |  |     +--ro LATNus?     string
      |  |     +--ro SATNds?     string
      |  |     +--ro SATNus?     string
      |  +--rw Channel* [Alias]
      |  |  +--rw Enable?                       boolean
      |  |  +--ro Status?                       enumeration
      |  |  +--ro Name?                         string
      |  |  +--ro LastChange?                   uint32
      |  |  +--ro LowerLayers?                  string
      |  |  +--ro LinkEncapsulationSupported?   enumeration
      |  |  +--ro LinkEncapsulationUsed?        enumeration
      |  |  +--ro LPATH?                        uint32
      |  |  +--ro INTLVDEPTH?                   uint32
      |  |  +--ro INTLVBLOCK?                   int32
      |  |  +--ro ActualInterleavingDelay?      uint32
      |  |  +--ro ACTINP?                       int32
      |  |  +--ro INPREPORT?                    boolean
      |  |  +--ro NFEC?                         int32
      |  |  +--ro RFEC?                         int32
      |  |  +--ro LSYMB?                        int32
      |  |  +--ro UpstreamCurrRate?             uint32
      |  |  +--ro DownstreamCurrRate?           uint32
      |  |  +--ro ACTNDR?                       uint32
      |  |  +--ro ACTINPREIN?                   uint32
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                uint64
      |  |     +--ro BytesReceived?            uint64
      |  |     +--ro PacketsSent?              uint64
      |  |     +--ro PacketsReceived?          uint64
      |  |     +--ro ErrorsSent?               uint32
      |  |     +--ro ErrorsReceived?           uint32
      |  |     +--ro DiscardPacketsSent?       uint32
      |  |     +--ro DiscardPacketsReceived?   uint32
      |  |     +--ro TotalStart?               uint32
      |  |     +--ro ShowtimeStart?            uint32
      |  |     +--ro LastShowtimeStart?        uint32
      |  |     +--ro CurrentDayStart?          uint32
      |  |     +--ro QuarterHourStart?         uint32
      |  |     +--ro Total
      |  |     |  +--ro XTURFECErrors?   uint32
      |  |     |  +--ro XTUCFECErrors?   uint32
      |  |     |  +--ro XTURHECErrors?   uint32
      |  |     |  +--ro XTUCHECErrors?   uint32
      |  |     |  +--ro XTURCRCErrors?   uint32
      |  |     |  +--ro XTUCCRCErrors?   uint32
      |  |     +--ro Showtime
      |  |     |  +--ro XTURFECErrors?   uint32
      |  |     |  +--ro XTUCFECErrors?   uint32
      |  |     |  +--ro XTURHECErrors?   uint32
      |  |     |  +--ro XTUCHECErrors?   uint32
      |  |     |  +--ro XTURCRCErrors?   uint32
      |  |     |  +--ro XTUCCRCErrors?   uint32
      |  |     +--ro LastShowtime
      |  |     |  +--ro XTURFECErrors?   uint32
      |  |     |  +--ro XTUCFECErrors?   uint32
      |  |     |  +--ro XTURHECErrors?   uint32
      |  |     |  +--ro XTUCHECErrors?   uint32
      |  |     |  +--ro XTURCRCErrors?   uint32
      |  |     |  +--ro XTUCCRCErrors?   uint32
      |  |     +--ro CurrentDay
      |  |     |  +--ro XTURFECErrors?   uint32
      |  |     |  +--ro XTUCFECErrors?   uint32
      |  |     |  +--ro XTURHECErrors?   uint32
      |  |     |  +--ro XTUCHECErrors?   uint32
      |  |     |  +--ro XTURCRCErrors?   uint32
      |  |     |  +--ro XTUCCRCErrors?   uint32
      |  |     +--ro QuarterHour
      |  |        +--ro XTURFECErrors?   uint32
      |  |        +--ro XTUCFECErrors?   uint32
      |  |        +--ro XTURHECErrors?   uint32
      |  |        +--ro XTUCHECErrors?   uint32
      |  |        +--ro XTURCRCErrors?   uint32
      |  |        +--ro XTUCCRCErrors?   uint32
      |  +--rw BondingGroup* [GroupID]
      |  |  +--rw Enable?                                 boolean
      |  |  +--ro Status?                                 enumeration
      |  |  +--ro Name?                                   string
      |  |  +--ro LastChange?                             uint32
      |  |  +--ro LowerLayers?                            string
      |  |  +--ro GroupStatus?                            enumeration
      |  |  +--ro GroupID                                 uint32
      |  |  +--ro BondSchemesSupported?                   enumeration
      |  |  +--ro BondScheme?                             string
      |  |  +--ro GroupCapacity?                          uint32
      |  |  +--ro RunningTime?                            uint32
      |  |  +--ro TargetUpRate?                           uint32
      |  |  +--ro TargetDownRate?                         uint32
      |  |  +--ro ThreshLowUpRate?                        uint32
      |  |  +--ro ThreshLowDownRate?                      uint32
      |  |  +--ro UpstreamDifferentialDelayTolerance?     uint32
      |  |  +--ro DownstreamDifferentialDelayTolerance?   uint32
      |  |  +--ro BondedChannel* [Channel]
      |  |  |  +--ro Channel     string
      |  |  |  +--ro Ethernet
      |  |  |     +--ro Stats
      |  |  |        +--ro UnderflowErrorsSent?       uint32
      |  |  |        +--ro CRCErrorsReceived?         uint32
      |  |  |        +--ro AlignmentErrorsReceived?   uint32
      |  |  |        +--ro ShortPacketsReceived?      uint32
      |  |  |        +--ro LongPacketsReceived?       uint32
      |  |  |        +--ro OverflowErrorsReceived?    uint32
      |  |  |        +--ro PauseFramesReceived?       uint32
      |  |  |        +--ro FramesDropped?             uint32
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                     uint64
      |  |  |  +--ro BytesReceived?                 uint64
      |  |  |  +--ro PacketsSent?                   uint64
      |  |  |  +--ro PacketsReceived?               uint64
      |  |  |  +--ro ErrorsSent?                    uint32
      |  |  |  +--ro ErrorsReceived?                uint32
      |  |  |  +--ro UnicastPacketsSent?            uint64
      |  |  |  +--ro UnicastPacketsReceived?        uint64
      |  |  |  +--ro DiscardPacketsSent?            uint32
      |  |  |  +--ro DiscardPacketsReceived?        uint32
      |  |  |  +--ro MulticastPacketsSent?          uint64
      |  |  |  +--ro MulticastPacketsReceived?      uint64
      |  |  |  +--ro BroadcastPacketsSent?          uint64
      |  |  |  +--ro BroadcastPacketsReceived?      uint64
      |  |  |  +--ro UnknownProtoPacketsReceived?   uint32
      |  |  |  +--ro TotalStart?                    uint32
      |  |  |  +--ro CurrentDayStart?               uint32
      |  |  |  +--ro QuarterHourStart?              uint32
      |  |  |  +--ro Total
      |  |  |  |  +--ro FailureReasons?                enumeration
      |  |  |  |  +--ro UpstreamRate?                  uint32
      |  |  |  |  +--ro DownstreamRate?                uint32
      |  |  |  |  +--ro UpstreamPacketLoss?            uint32
      |  |  |  |  +--ro DownstreamPacketLoss?          uint32
      |  |  |  |  +--ro UpstreamDifferentialDelay?     uint32
      |  |  |  |  +--ro DownstreamDifferentialDelay?   uint32
      |  |  |  |  +--ro FailureCount?                  uint32
      |  |  |  |  +--ro ErroredSeconds?                uint32
      |  |  |  |  +--ro SeverelyErroredSeconds?        uint32
      |  |  |  |  +--ro UnavailableSeconds?            uint32
      |  |  |  +--ro CurrentDay
      |  |  |  |  +--ro FailureReasons?                enumeration
      |  |  |  |  +--ro UpstreamRate?                  uint32
      |  |  |  |  +--ro DownstreamRate?                uint32
      |  |  |  |  +--ro UpstreamPacketLoss?            uint32
      |  |  |  |  +--ro DownstreamPacketLoss?          uint32
      |  |  |  |  +--ro UpstreamDifferentialDelay?     uint32
      |  |  |  |  +--ro DownstreamDifferentialDelay?   uint32
      |  |  |  |  +--ro FailureCount?                  uint32
      |  |  |  |  +--ro ErroredSeconds?                uint32
      |  |  |  |  +--ro SeverelyErroredSeconds?        uint32
      |  |  |  |  +--ro UnavailableSeconds?            uint32
      |  |  |  +--ro QuarterHour
      |  |  |     +--ro FailureReasons?                enumeration
      |  |  |     +--ro UpstreamRate?                  uint32
      |  |  |     +--ro DownstreamRate?                uint32
      |  |  |     +--ro UpstreamPacketLoss?            uint32
      |  |  |     +--ro DownstreamPacketLoss?          uint32
      |  |  |     +--ro UpstreamDifferentialDelay?     uint32
      |  |  |     +--ro DownstreamDifferentialDelay?   uint32
      |  |  |     +--ro FailureCount?                  uint32
      |  |  |     +--ro ErroredSeconds?                uint32
      |  |  |     +--ro SeverelyErroredSeconds?        uint32
      |  |  |     +--ro UnavailableSeconds?            uint32
      |  |  +--ro Ethernet
      |  |     +--ro Stats
      |  |        +--ro PAFErrors?                 uint32
      |  |        +--ro PAFSmallFragments?         uint32
      |  |        +--ro PAFLargeFragments?         uint32
      |  |        +--ro PAFBadFragments?           uint32
      |  |        +--ro PAFLostFragments?          uint32
      |  |        +--ro PAFLateFragments?          uint32
      |  |        +--ro PAFLostStarts?             uint32
      |  |        +--ro PAFLostEnds?               uint32
      |  |        +--ro PAFOverflows?              uint32
      |  |        +--ro PauseFramesSent?           uint32
      |  |        +--ro CRCErrorsReceived?         uint32
      |  |        +--ro AlignmentErrorsReceived?   uint32
      |  |        +--ro ShortPacketsReceived?      uint32
      |  |        +--ro LongPacketsReceived?       uint32
      |  |        +--ro OverflowErrorsReceived?    uint32
      |  |        +--ro FramesDropped?             uint32
      |  +--rw Diagnostics
      |     +--rw ADSLLineTest
      |        +--rw DiagnosticsState?   enumeration
      |        +--rw Interface?          string
      |        +--ro ACTPSDds?           int32
      |        +--ro ACTPSDus?           int32
      |        +--ro ACTATPds?           int32
      |        +--ro ACTATPus?           int32
      |        +--ro HLINSCds?           int32
      |        +--ro HLINSCus?           int32
      |        +--ro HLINGds?            uint32
      |        +--ro HLINGus?            uint32
      |        +--ro HLOGGds?            uint32
      |        +--ro HLOGGus?            uint32
      |        +--ro HLOGpsds?           string
      |        +--ro HLOGpsus?           string
      |        +--ro HLOGMTds?           uint32
      |        +--ro HLOGMTus?           uint32
      |        +--ro LATNpbds?           string
      |        +--ro LATNpbus?           string
      |        +--ro SATNds?             string
      |        +--ro SATNus?             string
      |        +--ro HLINpsds?           int32
      |        +--ro HLINpsus?           string
      |        +--ro QLNGds?             uint32
      |        +--ro QLNGus?             uint32
      |        +--ro QLNpsds?            int32
      |        +--ro QLNpsus?            string
      |        +--ro QLNMTds?            uint32
      |        +--ro QLNMTus?            uint32
      |        +--ro SNRGds?             uint32
      |        +--ro SNRGus?             uint32
      |        +--ro SNRpsds?            int32
      |        +--ro SNRpsus?            string
      |        +--ro SNRMTds?            uint32
      |        +--ro SNRMTus?            uint32
      |        +--ro BITSpsds?           int32
      |        +--ro BITSpsus?           string
      +--rw Optical
      |  +--rw Interface* [Alias]
      |     +--rw Enable?                        boolean
      |     +--ro Status?                        enumeration
      |     +--ro Name?                          string
      |     +--ro LastChange?                    uint32
      |     +--rw LowerLayers?                   string
      |     +--ro Upstream?                      boolean
      |     +--ro OpticalSignalLevel?            types:Dbm1000
      |     +--ro LowerOpticalThreshold?         types:Dbm1000
      |     +--ro UpperOpticalThreshold?         types:Dbm1000
      |     +--ro TransmitOpticalLevel?          types:Dbm1000
      |     +--ro LowerTransmitPowerThreshold?   types:Dbm1000
      |     +--ro UpperTransmitPowerThreshold?   types:Dbm1000
      |     +--ro Stats
      |        +--ro BytesSent?                uint64
      |        +--ro BytesReceived?            uint64
      |        +--ro PacketsSent?              uint64
      |        +--ro PacketsReceived?          uint64
      |        +--ro ErrorsSent?               uint32
      |        +--ro ErrorsReceived?           uint32
      |        +--ro DiscardPacketsSent?       uint32
      |        +--ro DiscardPacketsReceived?   uint32
      +--rw Cellular
      |  +--rw RoamingEnabled?   boolean
      |  +--ro RoamingStatus?    enumeration
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?                        boolean
      |  |  +--ro Status?                        enumeration
      |  |  +--ro Name?                          string
      |  |  +--ro LastChange?                    uint32
      |  |  +--rw LowerLayers?                   string
      |  |  +--ro Upstream?                      boolean
      |  |  +--ro IMEI?                          string
      |  |  +--ro SupportedAccessTechnologies?   enumeration
      |  |  +--rw PreferredAccessTechnology?     string
      |  |  +--ro CurrentAccessTechnology?       string
      |  |  +--ro AvailableNetworks?             string
      |  |  +--rw NetworkRequested?              string
      |  |  +--ro NetworkInUse?                  string
      |  |  +--ro RSSI?                          int32
      |  |  +--ro UpstreamMaxBitRate?            uint32
      |  |  +--ro DownstreamMaxBitRate?          uint32
      |  |  +--rw USIM
      |  |  |  +--ro Status?     enumeration
      |  |  |  +--ro IMSI?       string
      |  |  |  +--ro ICCID?      string
      |  |  |  +--ro MSISDN?     string
      |  |  |  +--rw PINCheck?   enumeration
      |  |  |  +--rw PIN?        string
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     types:StatsCounter64
      |  |     +--ro BytesReceived?                 types:StatsCounter64
      |  |     +--ro PacketsSent?                   types:StatsCounter64
      |  |     +--ro PacketsReceived?               types:StatsCounter64
      |  |     +--ro ErrorsSent?                    types:StatsCounter64
      |  |     +--ro ErrorsReceived?                types:StatsCounter64
      |  |     +--ro UnicastPacketsSent?            types:StatsCounter64
      |  |     +--ro UnicastPacketsReceived?        types:StatsCounter64
      |  |     +--ro DiscardPacketsSent?            types:StatsCounter64
      |  |     +--ro DiscardPacketsReceived?        types:StatsCounter64
      |  |     +--ro MulticastPacketsSent?          types:StatsCounter64
      |  |     +--ro MulticastPacketsReceived?      types:StatsCounter64
      |  |     +--ro BroadcastPacketsSent?          types:StatsCounter64
      |  |     +--ro BroadcastPacketsReceived?      types:StatsCounter64
      |  |     +--ro UnknownProtoPacketsReceived?   types:StatsCounter64
      |  +--rw AccessPoint* [APN]
      |     +--rw Enable?      boolean
      |     +--rw APN          string
      |     +--rw Username?    string
      |     +--rw Password?    string
      |     +--rw Proxy?       types:IPAddress
      |     +--rw ProxyPort?   uint32
      |     +--rw Interface?   string
      +--rw ATM
      |  +--rw Link* [Alias]
      |  |  +--rw Enable?               boolean
      |  |  +--ro Status?               enumeration
      |  |  +--ro Name?                 string
      |  |  +--ro LastChange?           uint32
      |  |  +--rw LowerLayers?          string
      |  |  +--rw LinkType?             enumeration
      |  |  +--ro AutoConfig?           boolean
      |  |  +--rw DestinationAddress?   string
      |  |  +--rw Encapsulation?        enumeration
      |  |  +--rw FCSPreserved?         boolean
      |  |  +--rw VCSearchList?         string
      |  |  +--ro AAL?                  enumeration
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                     uint64
      |  |  |  +--ro BytesReceived?                 uint64
      |  |  |  +--ro PacketsSent?                   uint64
      |  |  |  +--ro PacketsReceived?               uint64
      |  |  |  +--ro ErrorsSent?                    uint32
      |  |  |  +--ro ErrorsReceived?                uint32
      |  |  |  +--ro UnicastPacketsSent?            uint64
      |  |  |  +--ro UnicastPacketsReceived?        uint64
      |  |  |  +--ro DiscardPacketsSent?            uint32
      |  |  |  +--ro DiscardPacketsReceived?        uint32
      |  |  |  +--ro MulticastPacketsSent?          uint64
      |  |  |  +--ro MulticastPacketsReceived?      uint64
      |  |  |  +--ro BroadcastPacketsSent?          uint64
      |  |  |  +--ro BroadcastPacketsReceived?      uint64
      |  |  |  +--ro UnknownProtoPacketsReceived?   uint32
      |  |  |  +--ro TransmittedBlocks?             uint32
      |  |  |  +--ro ReceivedBlocks?                uint32
      |  |  |  +--ro CRCErrors?                     uint32
      |  |  |  +--ro HECErrors?                     uint32
      |  |  +--rw QoS
      |  |     +--rw QoSClass?              enumeration
      |  |     +--rw PeakCellRate?          uint32
      |  |     +--rw MaximumBurstSize?      uint32
      |  |     +--rw SustainableCellRate?   uint32
      |  +--rw Diagnostics
      |     +--rw F5Loopback
      |        +--rw DiagnosticsState?      enumeration
      |        +--rw Interface?             string
      |        +--rw NumberOfRepetitions?   uint32
      |        +--rw Timeout?               uint32
      |        +--ro SuccessCount?          uint32
      |        +--ro FailureCount?          uint32
      |        +--ro AverageResponseTime?   uint32
      |        +--ro MinimumResponseTime?   uint32
      |        +--ro MaximumResponseTime?   uint32
      +--rw PTM
      |  +--rw Link* [Alias]
      |     +--rw Enable?        boolean
      |     +--ro Status?        enumeration
      |     +--ro Name?          string
      |     +--ro LastChange?    uint32
      |     +--rw LowerLayers?   string
      |     +--ro MACAddress?    types:MACAddress
      |     +--ro Stats
      |        +--ro BytesSent?                     uint64
      |        +--ro BytesReceived?                 uint64
      |        +--ro PacketsSent?                   uint64
      |        +--ro PacketsReceived?               uint64
      |        +--ro ErrorsSent?                    uint32
      |        +--ro ErrorsReceived?                uint32
      |        +--ro UnicastPacketsSent?            uint64
      |        +--ro UnicastPacketsReceived?        uint64
      |        +--ro DiscardPacketsSent?            uint32
      |        +--ro DiscardPacketsReceived?        uint32
      |        +--ro MulticastPacketsSent?          uint64
      |        +--ro MulticastPacketsReceived?      uint64
      |        +--ro BroadcastPacketsSent?          uint64
      |        +--ro BroadcastPacketsReceived?      uint64
      |        +--ro UnknownProtoPacketsReceived?   uint32
      +--rw Ethernet
      |  +--rw RMONStats* [Interface VLANID Queue]
      |  |  +--rw Enable?                   boolean
      |  |  +--ro Status?                   enumeration
      |  |  +--ro Name?                     string
      |  |  +--rw Interface                 string
      |  |  +--rw VLANID                    uint32
      |  |  +--rw Queue                     string
      |  |  +--rw AllQueues?                boolean
      |  |  +--ro DropEvents?               uint32
      |  |  +--ro Bytes?                    uint64
      |  |  +--ro Packets?                  uint64
      |  |  +--ro BroadcastPackets?         uint64
      |  |  +--ro MulticastPackets?         uint64
      |  |  +--ro CRCErroredPackets?        uint32
      |  |  +--ro UndersizePackets?         uint32
      |  |  +--ro OversizePackets?          uint32
      |  |  +--ro Packets64Bytes?           uint64
      |  |  +--ro Packets65to127Bytes?      uint64
      |  |  +--ro Packets128to255Bytes?     uint64
      |  |  +--ro Packets256to511Bytes?     uint64
      |  |  +--ro Packets512to1023Bytes?    uint64
      |  |  +--ro Packets1024to1518Bytes?   uint64
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?           boolean
      |  |  +--ro Status?           enumeration
      |  |  +--ro Name?             string
      |  |  +--ro LastChange?       uint32
      |  |  +--rw LowerLayers?      string
      |  |  +--ro Upstream?         boolean
      |  |  +--ro MACAddress?       types:MACAddress
      |  |  +--rw MaxBitRate?       int32
      |  |  +--ro CurrentBitRate?   uint32
      |  |  +--rw DuplexMode?       enumeration
      |  |  +--ro EEECapability?    boolean
      |  |  +--rw EEEEnable?        boolean
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     uint64
      |  |     +--ro BytesReceived?                 uint64
      |  |     +--ro PacketsSent?                   uint64
      |  |     +--ro PacketsReceived?               uint64
      |  |     +--ro ErrorsSent?                    uint32
      |  |     +--ro ErrorsReceived?                uint32
      |  |     +--ro UnicastPacketsSent?            uint64
      |  |     +--ro UnicastPacketsReceived?        uint64
      |  |     +--ro DiscardPacketsSent?            uint32
      |  |     +--ro DiscardPacketsReceived?        uint32
      |  |     +--ro MulticastPacketsSent?          uint64
      |  |     +--ro MulticastPacketsReceived?      uint64
      |  |     +--ro BroadcastPacketsSent?          uint64
      |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  +--rw Link* [MACAddress]
      |  |  +--rw Enable?            boolean
      |  |  +--ro Status?            enumeration
      |  |  +--ro Name?              string
      |  |  +--ro LastChange?        uint32
      |  |  +--rw LowerLayers?       string
      |  |  +--ro MACAddress         types:MACAddress
      |  |  +--rw PriorityTagging?   boolean
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     uint64
      |  |     +--ro BytesReceived?                 uint64
      |  |     +--ro PacketsSent?                   uint64
      |  |     +--ro PacketsReceived?               uint64
      |  |     +--ro ErrorsSent?                    uint32
      |  |     +--ro ErrorsReceived?                uint32
      |  |     +--ro UnicastPacketsSent?            uint64
      |  |     +--ro UnicastPacketsReceived?        uint64
      |  |     +--ro DiscardPacketsSent?            uint32
      |  |     +--ro DiscardPacketsReceived?        uint32
      |  |     +--ro MulticastPacketsSent?          uint64
      |  |     +--ro MulticastPacketsReceived?      uint64
      |  |     +--ro BroadcastPacketsSent?          uint64
      |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  +--rw VLANTermination* [Alias]
      |     +--rw Enable?        boolean
      |     +--ro Status?        enumeration
      |     +--ro Name?          string
      |     +--ro LastChange?    uint32
      |     +--rw LowerLayers?   string
      |     +--rw VLANID?        uint32
      |     +--rw TPID?          uint32
      |     +--ro Stats
      |        +--ro BytesSent?                     uint64
      |        +--ro BytesReceived?                 uint64
      |        +--ro PacketsSent?                   uint64
      |        +--ro PacketsReceived?               uint64
      |        +--ro ErrorsSent?                    uint32
      |        +--ro ErrorsReceived?                uint32
      |        +--ro UnicastPacketsSent?            uint64
      |        +--ro UnicastPacketsReceived?        uint64
      |        +--ro DiscardPacketsSent?            uint32
      |        +--ro DiscardPacketsReceived?        uint32
      |        +--ro MulticastPacketsSent?          uint64
      |        +--ro MulticastPacketsReceived?      uint64
      |        +--ro BroadcastPacketsSent?          uint64
      |        +--ro BroadcastPacketsReceived?      uint64
      |        +--ro UnknownProtoPacketsReceived?   uint32
      +--rw USB
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?        boolean
      |  |  +--ro Status?        enumeration
      |  |  +--ro Name?          string
      |  |  +--ro LastChange?    uint32
      |  |  +--rw LowerLayers?   string
      |  |  +--ro Upstream?      boolean
      |  |  +--ro MACAddress?    types:MACAddress
      |  |  +--ro MaxBitRate?    uint32
      |  |  +--ro Port?          string
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     uint64
      |  |     +--ro BytesReceived?                 uint64
      |  |     +--ro PacketsSent?                   uint64
      |  |     +--ro PacketsReceived?               uint64
      |  |     +--ro ErrorsSent?                    uint32
      |  |     +--ro ErrorsReceived?                uint32
      |  |     +--ro UnicastPacketsSent?            uint64
      |  |     +--ro UnicastPacketsReceived?        uint64
      |  |     +--ro DiscardPacketsSent?            uint32
      |  |     +--ro DiscardPacketsReceived?        uint32
      |  |     +--ro MulticastPacketsSent?          uint64
      |  |     +--ro MulticastPacketsReceived?      uint64
      |  |     +--ro BroadcastPacketsSent?          uint64
      |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  +--ro Port* [Name]
      |  |  +--ro Name          string
      |  |  +--ro Standard?     string
      |  |  +--ro Type?         enumeration
      |  |  +--ro Receptacle?   enumeration
      |  |  +--ro Rate?         enumeration
      |  |  +--ro Power?        enumeration
      |  +--rw USBHosts
      |     +--rw Host* [Name]
      |        +--rw Enable?                  boolean
      |        +--ro Name                     string
      |        +--ro Type?                    enumeration
      |        +--rw Reset?                   boolean
      |        +--rw PowerManagementEnable?   boolean
      |        +--ro USBVersion?              string
      |        +--ro Device* [DeviceNumber]
      |           +--ro DeviceNumber      uint32
      |           +--ro USBVersion?       string
      |           +--ro DeviceClass?      yang:hex-string
      |           +--ro DeviceSubClass?   yang:hex-string
      |           +--ro DeviceVersion?    uint32
      |           +--ro DeviceProtocol?   yang:hex-string
      |           +--ro ProductID?        uint32
      |           +--ro VendorID?         uint32
      |           +--ro Manufacturer?     string
      |           +--ro ProductClass?     string
      |           +--ro SerialNumber?     string
      |           +--ro Port?             uint32
      |           +--ro USBPort?          string
      |           +--ro Rate?             enumeration
      |           +--ro Parent?           string
      |           +--ro MaxChildren?      uint32
      |           +--ro IsSuspended?      boolean
      |           +--ro IsSelfPowered?    boolean
      |           +--ro Configuration* [ConfigurationNumber]
      |              +--ro ConfigurationNumber    uint32
      |              +--ro Interface* [InterfaceNumber]
      |                 +--ro InterfaceNumber      uint32
      |                 +--ro InterfaceClass?      yang:hex-string
      |                 +--ro InterfaceSubClass?   yang:hex-string
      |                 +--ro InterfaceProtocol?   yang:hex-string
      +--rw HPNA
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?                    boolean
      |  |  +--ro Status?                    enumeration
      |  |  +--ro Name?                      string
      |  |  +--ro LastChange?                uint32
      |  |  +--rw LowerLayers?               string
      |  |  +--ro Upstream?                  boolean
      |  |  +--ro MACAddress?                types:MACAddress
      |  |  +--ro FirmwareVersion?           string
      |  |  +--ro NodeID?                    uint32
      |  |  +--ro IsMaster?                  boolean
      |  |  +--ro Synced?                    boolean
      |  |  +--ro TotalSyncTime?             uint32
      |  |  +--ro MaxBitRate?                uint32
      |  |  +--ro NetworkUtilization?        uint32
      |  |  +--ro PossibleConnectionTypes?   enumeration
      |  |  +--rw ConnectionType?            string
      |  |  +--ro PossibleSpectralModes?     enumeration
      |  |  +--rw SpectralMode?              string
      |  |  +--rw MTU?                       uint32
      |  |  +--rw NoiseMargin?               uint32
      |  |  +--rw DefaultNonLARQPER?         uint32
      |  |  +--rw LARQEnable?                boolean
      |  |  +--rw MinMulticastRate?          uint32
      |  |  +--ro NegMulticastRate?          uint32
      |  |  +--rw MasterSelectionMode?       enumeration
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                     uint64
      |  |  |  +--ro BytesReceived?                 uint64
      |  |  |  +--ro PacketsSent?                   uint64
      |  |  |  +--ro PacketsReceived?               uint64
      |  |  |  +--ro ErrorsSent?                    uint32
      |  |  |  +--ro ErrorsReceived?                uint32
      |  |  |  +--ro UnicastPacketsSent?            uint64
      |  |  |  +--ro UnicastPacketsReceived?        uint64
      |  |  |  +--ro DiscardPacketsSent?            uint32
      |  |  |  +--ro DiscardPacketsReceived?        uint32
      |  |  |  +--ro MulticastPacketsSent?          uint64
      |  |  |  +--ro MulticastPacketsReceived?      uint64
      |  |  |  +--ro BroadcastPacketsSent?          uint64
      |  |  |  +--ro BroadcastPacketsReceived?      uint64
      |  |  |  +--ro UnknownProtoPacketsReceived?   uint32
      |  |  +--rw QoS
      |  |  |  +--rw FlowSpec* [Alias]
      |  |  |     +--rw Enable?           boolean
      |  |  |     +--ro Status?           enumeration
      |  |  |     +--rw TrafficClasses?   uint32
      |  |  |     +--rw FlowType?         enumeration
      |  |  |     +--rw Priority?         uint32
      |  |  |     +--rw Latency?          uint32
      |  |  |     +--rw Jitter?           uint32
      |  |  |     +--rw PacketSize?       uint32
      |  |  |     +--rw MinRate?          uint32
      |  |  |     +--rw AvgRate?          uint32
      |  |  |     +--rw MaxRate?          uint32
      |  |  |     +--rw PER?              uint32
      |  |  |     +--rw Timeout?          uint32
      |  |  +--rw AssociatedDevice* [MACAddress]
      |  |     +--ro MACAddress              types:MACAddress
      |  |     +--ro NodeID?                 uint32
      |  |     +--ro IsMaster?               boolean
      |  |     +--ro Synced?                 boolean
      |  |     +--ro TotalSyncTime?          uint32
      |  |     +--ro MaxBitRate?             uint32
      |  |     +--rw PHYDiagnosticsEnable?   boolean
      |  |     +--ro Active?                 boolean
      |  +--rw Diagnostics
      |     +--rw PHYThroughput
      |     |  +--rw DiagnosticsState?          enumeration
      |     |  +--rw Interface?                 string
      |     |  +--rw NumPacketsInBurst?         uint32
      |     |  +--rw BurstInterval?             uint32
      |     |  +--rw TestPacketPayloadLength?   uint32
      |     |  +--rw PayloadEncoding?           uint32
      |     |  +--rw PayloadDataGen?            uint32
      |     |  +--rw PayloadType?               enumeration
      |     |  +--rw PriorityLevel?             uint32
      |     |  +--ro Result* [SrcMACAddress DestMACAddress]
      |     |     +--ro SrcMACAddress      types:MACAddress
      |     |     +--ro DestMACAddress     types:MACAddress
      |     |     +--ro PHYRate?           uint32
      |     |     +--ro BaudRate?          uint32
      |     |     +--ro SNR?               uint32
      |     |     +--ro PacketsReceived?   uint32
      |     |     +--ro Attenuation?       uint32
      |     +--rw PerformanceMonitoring
      |        +--rw DiagnosticsState?   enumeration
      |        +--rw Interface?          string
      |        +--rw SampleInterval?     uint32
      |        +--ro Nodes
      |        |  +--ro CurrentStart?   yang:date-and-time
      |        |  +--ro CurrentEnd?     yang:date-and-time
      |        |  +--ro Node* [MACAddress]
      |        |     +--ro MACAddress                         types:MACAddress
      |        |     +--ro BytesSent?                         uint64
      |        |     +--ro BytesReceived?                     uint64
      |        |     +--ro PacketsSent?                       uint64
      |        |     +--ro PacketsReceived?                   uint64
      |        |     +--ro BroadcastPacketsSent?              uint64
      |        |     +--ro BroadcastPacketsReceived?          uint64
      |        |     +--ro MulticastPacketsSent?              uint64
      |        |     +--ro MulticastPacketsReceived?          uint64
      |        |     +--ro PacketsCrcErrored?                 uint32
      |        |     +--ro PacketsCrcErroredHost?             uint32
      |        |     +--ro PacketsShortErrored?               uint32
      |        |     +--ro PacketsShortErroredHost?           uint32
      |        |     +--ro RxPacketsDropped?                  uint32
      |        |     +--ro TxPacketsDropped?                  uint32
      |        |     +--ro ControlRequestLocal?               uint32
      |        |     +--ro ControlReplyLocal?                 uint32
      |        |     +--ro ControlRequestRemote?              uint32
      |        |     +--ro ControlReplyRemote?                uint32
      |        |     +--ro PacketsSentWire?                   uint64
      |        |     +--ro BroadcastPacketsSentWire?          uint64
      |        |     +--ro MulticastPacketsSentWire?          uint64
      |        |     +--ro PacketsInternalControl?            uint32
      |        |     +--ro BroadcastPacketsInternalControl?   uint32
      |        |     +--ro PacketsReceivedQueued?             uint32
      |        |     +--ro PacketsReceivedForwardUnknown?     uint32
      |        |     +--ro NodeUtilization?                   uint32
      |        +--ro Channels
      |           +--ro TimeStamp?   yang:date-and-time
      |           +--ro Channel* [HostSrcMACAddress HostDestMACAddress]
      |              +--ro HostSrcMACAddress      types:MACAddress
      |              +--ro HostDestMACAddress     types:MACAddress
      |              +--ro HPNASrcMACAddress?     types:MACAddress
      |              +--ro HPNADestMACAddress?    types:MACAddress
      |              +--ro PHYRate?               uint32
      |              +--ro BaudRate?              uint32
      |              +--ro SNR?                   uint32
      |              +--ro PacketsSent?           uint32
      |              +--ro PacketsReceived?       uint32
      |              +--ro LARQPacketsReceived?   uint32
      |              +--ro FlowSpec?              string
      +--rw MoCA
      |  +--rw Interface* [Alias]
      |     +--rw Enable?                        boolean
      |     +--ro Status?                        enumeration
      |     +--ro Name?                          string
      |     +--ro LastChange?                    uint32
      |     +--rw LowerLayers?                   string
      |     +--ro Upstream?                      boolean
      |     +--ro MACAddress?                    types:MACAddress
      |     +--ro FirmwareVersion?               string
      |     +--ro MaxBitRate?                    uint32
      |     +--ro MaxIngressBW?                  uint32
      |     +--ro MaxEgressBW?                   uint32
      |     +--ro HighestVersion?                string
      |     +--ro CurrentVersion?                string
      |     +--ro NetworkCoordinator?            uint32
      |     +--ro NodeID?                        uint32
      |     +--ro MaxNodes?                      boolean
      |     +--rw PreferredNC?                   boolean
      |     +--ro BackupNC?                      uint32
      |     +--rw PrivacyEnabledSetting?         boolean
      |     +--ro PrivacyEnabled?                boolean
      |     +--ro FreqCapabilityMask?            yang:hex-string
      |     +--rw FreqCurrentMaskSetting?        yang:hex-string
      |     +--ro FreqCurrentMask?               yang:hex-string
      |     +--ro CurrentOperFreq?               uint32
      |     +--ro LastOperFreq?                  uint32
      |     +--rw KeyPassphrase?                 string
      |     +--rw TxPowerLimit?                  uint32
      |     +--rw PowerCntlPhyTarget?            uint32
      |     +--rw BeaconPowerLimit?              uint32
      |     +--ro NetworkTabooMask?              yang:hex-string
      |     +--ro NodeTabooMask?                 yang:hex-string
      |     +--ro TxBcastRate?                   uint32
      |     +--ro TxBcastPowerReduction?         uint32
      |     +--ro QAM256Capable?                 boolean
      |     +--ro PacketAggregationCapability?   uint32
      |     +--ro Stats
      |     |  +--ro BytesSent?                     uint64
      |     |  +--ro BytesReceived?                 uint64
      |     |  +--ro PacketsSent?                   uint64
      |     |  +--ro PacketsReceived?               uint64
      |     |  +--ro ErrorsSent?                    uint32
      |     |  +--ro ErrorsReceived?                uint32
      |     |  +--ro UnicastPacketsSent?            uint64
      |     |  +--ro UnicastPacketsReceived?        uint64
      |     |  +--ro DiscardPacketsSent?            uint32
      |     |  +--ro DiscardPacketsReceived?        uint32
      |     |  +--ro MulticastPacketsSent?          uint64
      |     |  +--ro MulticastPacketsReceived?      uint64
      |     |  +--ro BroadcastPacketsSent?          uint64
      |     |  +--ro BroadcastPacketsReceived?      uint64
      |     |  +--ro UnknownProtoPacketsReceived?   uint32
      |     +--ro QoS
      |     |  +--ro EgressNumFlows?    uint32
      |     |  +--ro IngressNumFlows?   uint32
      |     |  +--ro FlowStats* [FlowID]
      |     |     +--ro FlowID           uint32
      |     |     +--ro PacketDA?        types:MACAddress
      |     |     +--ro MaxRate?         uint32
      |     |     +--ro MaxBurstSize?    uint32
      |     |     +--ro LeaseTime?       uint32
      |     |     +--ro LeaseTimeLeft?   uint32
      |     |     +--ro FlowPackets?     uint32
      |     +--ro AssociatedDevice* [MACAddress]
      |        +--ro MACAddress                     types:MACAddress
      |        +--ro NodeID?                        uint32
      |        +--ro PreferredNC?                   boolean
      |        +--ro HighestVersion?                string
      |        +--ro PHYTxRate?                     uint32
      |        +--ro PHYRxRate?                     uint32
      |        +--ro TxPowerControlReduction?       uint32
      |        +--ro RxPowerLevel?                  uint32
      |        +--ro TxBcastRate?                   uint32
      |        +--ro RxBcastPowerLevel?             uint32
      |        +--ro TxPackets?                     uint32
      |        +--ro RxPackets?                     uint32
      |        +--ro RxErroredAndMissedPackets?     uint32
      |        +--ro QAM256Capable?                 boolean
      |        +--ro PacketAggregationCapability?   uint32
      |        +--ro RxSNR?                         uint32
      |        +--ro Active?                        boolean
      +--rw Ghn
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?                                   boolean
      |  |  +--ro Status?                                   enumeration
      |  |  +--ro Name?                                     string
      |  |  +--ro LastChange?                               uint32
      |  |  +--rw LowerLayers?                              string
      |  |  +--ro Upstream?                                 boolean
      |  |  +--ro MACAddress?                               types:MACAddress
      |  |  +--ro FirmwareVersion?                          string
      |  |  x--ro ConnectionType?                           enumeration
      |  |  +--ro MaxTransmitRate?                          uint32
      |  |  +--rw TargetDomainNames?                        string
      |  |  +--ro DomainName?                               string
      |  |  +--ro DomainNameIdentifier?                     uint32
      |  |  +--ro DomainId?                                 uint32
      |  |  +--ro DeviceId?                                 uint32
      |  |  +--ro MaxBitRate?                               uint32
      |  |  +--ro NodeTypeDMCapable?                        boolean
      |  |  +--rw DMRequested?                              boolean
      |  |  +--ro IsDM?                                     boolean
      |  |  +--ro NodeTypeSCCapable?                        boolean
      |  |  +--rw SCRequested?                              boolean
      |  |  +--ro IsSC?                                     boolean
      |  |  +--ro StandardVersions?                         string
      |  |  +--ro MaxBandPlan?                              uint32
      |  |  +--ro MediumType?                               enumeration
      |  |  +--ro TAIFG?                                    uint32
      |  |  +--rw NotchedAmateurRadioBands?                 yang:hex-string
      |  |  +--rw PHYThroughputDiagnosticsEnable?           string
      |  |  +--rw PerformanceMonitoringDiagnosticsEnable?   string
      |  |  +--rw NodeTypeDMConfig?                         boolean
      |  |  +--ro NodeTypeDMStatus?                         boolean
      |  |  +--ro NodeTypeSCStatus?                         boolean
      |  |  +--rw DMInfo
      |  |  |  +--rw DomainName?                 yang:hex-string
      |  |  |  +--ro DomainNameIdentifier?       yang:hex-string
      |  |  |  +--ro DomainId?                   uint32
      |  |  |  +--rw MACCycleDuration?           uint32
      |  |  |  +--rw SCDeviceId?                 uint32
      |  |  |  +--rw SCMACAddress?               types:MACAddress
      |  |  |  +--rw ReregistrationTimePeriod?   uint32
      |  |  |  +--rw TopologyPeriodicInterval?   uint32
      |  |  |  +--rw MinSupportedBandplan?       uint32
      |  |  |  +--rw MaxSupportedBandplan?       uint32
      |  |  +--rw SCInfo
      |  |  |  +--ro ModesSupported?   enumeration
      |  |  |  +--rw ModeEnabled?      string
      |  |  |  +--rw MICSize?          enumeration
      |  |  |  +--ro Location?         boolean
      |  |  +--rw SMMaskedBand* [BandNumber]
      |  |  |  +--rw Enable?            boolean
      |  |  |  +--rw BandNumber         uint32
      |  |  |  +--rw StartSubCarrier?   uint32
      |  |  |  +--rw StopSubCarrier?    uint32
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                     types:StatsCounter64
      |  |  |  +--ro BytesReceived?                 types:StatsCounter64
      |  |  |  +--ro PacketsSent?                   types:StatsCounter64
      |  |  |  +--ro PacketsReceived?               types:StatsCounter64
      |  |  |  +--ro ErrorsSent?                    types:StatsCounter32
      |  |  |  +--ro ErrorsReceived?                types:StatsCounter32
      |  |  |  +--ro UnicastPacketsSent?            types:StatsCounter64
      |  |  |  +--ro UnicastPacketsReceived?        types:StatsCounter64
      |  |  |  +--ro DiscardPacketsSent?            types:StatsCounter32
      |  |  |  +--ro DiscardPacketsReceived?        types:StatsCounter32
      |  |  |  +--ro MulticastPacketsSent?          types:StatsCounter64
      |  |  |  +--ro MulticastPacketsReceived?      types:StatsCounter64
      |  |  |  +--ro BroadcastPacketsSent?          types:StatsCounter64
      |  |  |  +--ro BroadcastPacketsReceived?      types:StatsCounter64
      |  |  |  +--ro UnknownProtoPacketsReceived?   types:StatsCounter32
      |  |  |  +--ro MgmtBytesSent?                 types:StatsCounter64
      |  |  |  +--ro MgmtBytesReceived?             types:StatsCounter64
      |  |  |  +--ro MgmtPacketsSent?               types:StatsCounter64
      |  |  |  +--ro MgmtPacketsReceived?           types:StatsCounter64
      |  |  |  +--ro BlocksSent?                    types:StatsCounter64
      |  |  |  +--ro BlocksReceived?                types:StatsCounter64
      |  |  |  +--ro BlocksResent?                  types:StatsCounter32
      |  |  |  +--ro BlocksErrorsReceived?          types:StatsCounter32
      |  |  +--ro AssociatedDevice* [MACAddress]
      |  |     +--ro MACAddress    types:MACAddress
      |  |     +--ro DeviceId?     uint32
      |  |     +--ro TxPhyRate?    uint32
      |  |     +--ro RxPhyRate?    uint32
      |  |     +--ro Active?       boolean
      |  +--rw Diagnostics
      |     +--rw PHYThroughput
      |     |  +--rw DiagnosticsState?     enumeration
      |     |  +--rw Interface?            string
      |     |  +--rw DiagnoseMACAddress?   types:MACAddress
      |     |  +--ro Result* [DestinationMACAddress]
      |     |     +--ro DestinationMACAddress    types:MACAddress
      |     |     +--ro LinkState?               enumeration
      |     |     +--ro TxPhyRate?               uint32
      |     |     +--ro RxPhyRate?               uint32
      |     +--rw PerformanceMonitoring
      |        +--rw DiagnosticsState?     enumeration
      |        +--rw Interface?            string
      |        +--rw DiagnoseMACAddress?   types:MACAddress
      |        +--rw SampleInterval?       uint32
      |        +--rw SNRGroupLength?       uint32
      |        +--ro Nodes
      |        |  +--ro CurrentStart?   yang:date-and-time
      |        |  +--ro CurrentEnd?     yang:date-and-time
      |        |  +--ro Node* [DestinationMACAddress]
      |        |     +--ro DestinationMACAddress          types:MACAddress
      |        |     +--ro BytesSent?                     types:StatsCounter64
      |        |     +--ro BytesReceived?                 types:StatsCounter64
      |        |     +--ro PacketsSent?                   types:StatsCounter64
      |        |     +--ro PacketsReceived?               types:StatsCounter64
      |        |     +--ro ErrorsSent?                    types:StatsCounter32
      |        |     +--ro ErrorsReceived?                types:StatsCounter32
      |        |     +--ro UnicastPacketsSent?            types:StatsCounter64
      |        |     +--ro UnicastPacketsReceived?        types:StatsCounter64
      |        |     +--ro DiscardPacketsSent?            types:StatsCounter32
      |        |     +--ro DiscardPacketsReceived?        types:StatsCounter32
      |        |     +--ro MulticastPacketsSent?          types:StatsCounter64
      |        |     +--ro MulticastPacketsReceived?      types:StatsCounter64
      |        |     +--ro BroadcastPacketsSent?          types:StatsCounter64
      |        |     +--ro BroadcastPacketsReceived?      types:StatsCounter64
      |        |     +--ro UnknownProtoPacketsReceived?   types:StatsCounter32
      |        |     +--ro MgmtBytesSent?                 types:StatsCounter64
      |        |     +--ro MgmtBytesReceived?             types:StatsCounter64
      |        |     +--ro MgmtPacketsSent?               types:StatsCounter64
      |        |     +--ro MgmtPacketsReceived?           types:StatsCounter64
      |        |     +--ro BlocksSent?                    types:StatsCounter64
      |        |     +--ro BlocksReceived?                types:StatsCounter64
      |        |     +--ro BlocksResent?                  types:StatsCounter32
      |        |     +--ro BlocksErrorsReceived?          types:StatsCounter32
      |        +--ro Channels
      |           +--ro TimeStamp?   yang:date-and-time
      |           +--ro Channel* [DestinationMACAddress]
      |              +--ro DestinationMACAddress    types:MACAddress
      |              +--ro SNR?                     uint32
      +--rw HomePlug
      |  +--rw Interface* [Alias]
      |     +--rw Enable?                 boolean
      |     +--ro Status?                 enumeration
      |     +--ro Name?                   string
      |     +--ro LastChange?             uint32
      |     +--rw LowerLayers?            string
      |     +--ro Upstream?               boolean
      |     +--ro MACAddress?             types:MACAddress
      |     +--rw LogicalNetwork?         string
      |     +--ro Version?                string
      |     +--ro FirmwareVersion?        string
      |     +--rw ForceCCo?               boolean
      |     +--rw NetworkPassword?        string
      |     +--ro OtherNetworksPresent?   string
      |     +--ro MaxBitRate?             uint32
      |     +--ro Stats
      |     |  +--ro BytesSent?                     uint64
      |     |  +--ro BytesReceived?                 uint64
      |     |  +--ro PacketsSent?                   uint64
      |     |  +--ro PacketsReceived?               uint64
      |     |  +--ro ErrorsSent?                    uint32
      |     |  +--ro ErrorsReceived?                uint32
      |     |  +--ro UnicastPacketsSent?            uint64
      |     |  +--ro UnicastPacketsReceived?        uint64
      |     |  +--ro DiscardPacketsSent?            uint32
      |     |  +--ro DiscardPacketsReceived?        uint32
      |     |  +--ro MulticastPacketsSent?          uint64
      |     |  +--ro MulticastPacketsReceived?      uint64
      |     |  +--ro BroadcastPacketsSent?          uint64
      |     |  +--ro BroadcastPacketsReceived?      uint64
      |     |  +--ro UnknownProtoPacketsReceived?   uint32
      |     |  +--ro MPDUTxAck?                     uint64
      |     |  +--ro MPDUTxCol?                     uint64
      |     |  +--ro MPDUTxFailed?                  uint64
      |     |  +--ro MPDURxAck?                     uint64
      |     |  +--ro MPDURxFailed?                  uint64
      |     +--ro AssociatedDevice* [MACAddress]
      |        +--ro MACAddress        types:MACAddress
      |        +--ro TxPhyRate?        uint32
      |        +--ro RxPhyRate?        uint32
      |        +--ro SNRPerTone?       uint32
      |        +--ro AvgAttenuation?   uint32
      |        +--ro EndStationMACs?   types:MACAddress
      |        +--ro Active?           boolean
      +--rw UPA
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?                        boolean
      |  |  +--ro Status?                        enumeration
      |  |  +--ro Name?                          string
      |  |  +--ro LastChange?                    uint32
      |  |  +--rw LowerLayers?                   string
      |  |  +--ro Upstream?                      boolean
      |  |  +--ro MACAddress?                    types:MACAddress
      |  |  +--ro FirmwareVersion?               string
      |  |  +--ro MaxBitRate?                    uint32
      |  |  +--rw NodeType?                      enumeration
      |  |  +--rw LogicalNetwork?                string
      |  |  +--rw EncryptionMethod?              enumeration
      |  |  +--rw EncryptionKey?                 string
      |  |  +--rw PowerBackoffEnabled?           boolean
      |  |  +--ro PowerBackoffMechanismActive?   boolean
      |  |  +--ro EstApplicationThroughput?      uint32
      |  |  +--rw ActiveNotchEnable?             boolean
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                     uint64
      |  |  |  +--ro BytesReceived?                 uint64
      |  |  |  +--ro PacketsSent?                   uint64
      |  |  |  +--ro PacketsReceived?               uint64
      |  |  |  +--ro ErrorsSent?                    uint32
      |  |  |  +--ro ErrorsReceived?                uint32
      |  |  |  +--ro UnicastPacketsSent?            uint64
      |  |  |  +--ro UnicastPacketsReceived?        uint64
      |  |  |  +--ro DiscardPacketsSent?            uint32
      |  |  |  +--ro DiscardPacketsReceived?        uint32
      |  |  |  +--ro MulticastPacketsSent?          uint64
      |  |  |  +--ro MulticastPacketsReceived?      uint64
      |  |  |  +--ro BroadcastPacketsSent?          uint64
      |  |  |  +--ro BroadcastPacketsReceived?      uint64
      |  |  |  +--ro UnknownProtoPacketsReceived?   uint32
      |  |  +--ro AssociatedDevice* [MACAddress]
      |  |  |  +--ro MACAddress                      types:MACAddress
      |  |  |  +--ro Port?                           uint32
      |  |  |  +--ro LogicalNetwork?                 string
      |  |  |  +--ro PhyTxThroughput?                uint32
      |  |  |  +--ro PhyRxThroughput?                uint32
      |  |  |  +--ro RealPhyRxThroughput?            uint32
      |  |  |  +--ro EstimatedPLR?                   uint32
      |  |  |  +--ro MeanEstimatedAtt?               uint32
      |  |  |  +--ro SmartRouteIntermediatePLCMAC?   types:MACAddress
      |  |  |  +--ro DirectRoute?                    boolean
      |  |  |  +--ro Active?                         boolean
      |  |  +--rw ActiveNotch* [Alias]
      |  |  |  +--rw Enable?      boolean
      |  |  |  +--rw StartFreq?   uint32
      |  |  |  +--rw StopFreq?    uint32
      |  |  |  +--rw Depth?       uint32
      |  |  +--ro BridgeFor* [MACAddress]
      |  |     +--ro MACAddress    types:MACAddress
      |  |     +--ro Port?         uint32
      |  +--rw Diagnostics
      |     +--rw InterfaceMeasurement
      |        +--rw DiagnosticsState?   enumeration
      |        +--rw Type?               enumeration
      |        +--rw Interface?          string
      |        +--rw Port?               uint32
      |        +--ro Measurements?       uint32
      |        +--ro RxGain?             int32
      +--rw WiFi
      |  +--rw Radio* [Alias]
      |  |  +--rw Enable?                         boolean
      |  |  +--ro Status?                         enumeration
      |  |  +--ro Name?                           string
      |  |  +--ro LastChange?                     uint32
      |  |  +--rw LowerLayers?                    string
      |  |  +--ro Upstream?                       boolean
      |  |  +--ro MaxBitRate?                     uint32
      |  |  +--ro SupportedFrequencyBands?        enumeration
      |  |  +--rw OperatingFrequencyBand?         string
      |  |  +--ro SupportedStandards?             enumeration
      |  |  +--rw OperatingStandards?             string
      |  |  +--ro PossibleChannels?               string
      |  |  +--ro ChannelsInUse?                  string
      |  |  +--rw Channel?                        uint32
      |  |  +--ro AutoChannelSupported?           boolean
      |  |  +--rw AutoChannelEnable?              boolean
      |  |  +--rw AutoChannelRefreshPeriod?       uint32
      |  |  +--rw OperatingChannelBandwidth?      enumeration
      |  |  +--rw ExtensionChannel?               enumeration
      |  |  +--rw GuardInterval?                  enumeration
      |  |  +--rw MCS?                            int32
      |  |  +--ro TransmitPowerSupported?         int32
      |  |  +--rw TransmitPower?                  int32
      |  |  +--ro IEEE80211hSupported?            boolean
      |  |  +--rw IEEE80211hEnabled?              boolean
      |  |  +--rw RegulatoryDomain?               string
      |  |  +--rw RetryLimit?                     uint32
      |  |  +--rw CCARequest?                     yang:hex-string
      |  |  +--ro CCAReport?                      yang:hex-string
      |  |  +--rw RPIHistogramRequest?            yang:hex-string
      |  |  +--ro RPIHistogramReport?             yang:hex-string
      |  |  +--rw FragmentationThreshold?         uint32
      |  |  +--rw RTSThreshold?                   uint32
      |  |  +--rw LongRetryLimit?                 uint32
      |  |  +--rw BeaconPeriod?                   uint32
      |  |  +--rw DTIMPeriod?                     uint32
      |  |  +--rw PacketAggregationEnable?        boolean
      |  |  +--rw PreambleType?                   enumeration
      |  |  +--rw BasicDataTransmitRates?         string
      |  |  +--rw OperationalDataTransmitRates?   string
      |  |  +--ro SupportedDataTransmitRates?     string
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                uint64
      |  |     +--ro BytesReceived?            uint64
      |  |     +--ro PacketsSent?              uint64
      |  |     +--ro PacketsReceived?          uint64
      |  |     +--ro ErrorsSent?               uint32
      |  |     +--ro ErrorsReceived?           uint32
      |  |     +--ro DiscardPacketsSent?       uint32
      |  |     +--ro DiscardPacketsReceived?   uint32
      |  |     +--ro PLCPErrorCount?           uint32
      |  |     +--ro FCSErrorCount?            uint32
      |  |     +--ro InvalidMACCount?          uint32
      |  |     +--ro PacketsOtherReceived?     uint32
      |  |     +--ro Noise?                    int32
      |  +--rw NeighboringWiFiDiagnostic
      |  |  +--rw DiagnosticsState?   enumeration
      |  |  +--ro Result* [BSSID]
      |  |     +--ro Radio?                        string
      |  |     +--ro SSID?                         string
      |  |     +--ro BSSID                         types:MACAddress
      |  |     +--ro Mode?                         enumeration
      |  |     +--ro Channel?                      uint32
      |  |     +--ro SignalStrength?               int32
      |  |     +--ro SecurityModeEnabled?          enumeration
      |  |     +--ro EncryptionMode?               enumeration
      |  |     +--ro OperatingFrequencyBand?       enumeration
      |  |     +--ro SupportedStandards?           enumeration
      |  |     +--ro OperatingStandards?           string
      |  |     +--ro OperatingChannelBandwidth?    enumeration
      |  |     +--ro BeaconPeriod?                 uint32
      |  |     +--ro Noise?                        int32
      |  |     +--ro BasicDataTransferRates?       string
      |  |     +--ro SupportedDataTransferRates?   string
      |  |     +--ro DTIMPeriod?                   uint32
      |  +--rw SSID* [SSID]
      |  |  +--rw Enable?        boolean
      |  |  +--ro Status?        enumeration
      |  |  +--ro Name?          string
      |  |  +--ro LastChange?    uint32
      |  |  +--rw LowerLayers?   string
      |  |  +--ro BSSID?         types:MACAddress
      |  |  +--ro MACAddress?    types:MACAddress
      |  |  +--rw SSID           string
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     uint64
      |  |     +--ro BytesReceived?                 uint64
      |  |     +--ro PacketsSent?                   uint64
      |  |     +--ro PacketsReceived?               uint64
      |  |     +--ro ErrorsSent?                    uint32
      |  |     +--ro RetransCount?                  uint32
      |  |     +--ro FailedRetransCount?            uint32
      |  |     +--ro RetryCount?                    uint32
      |  |     +--ro MultipleRetryCount?            uint32
      |  |     +--ro ACKFailureCount?               uint32
      |  |     +--ro AggregatedPacketCount?         uint32
      |  |     +--ro ErrorsReceived?                uint32
      |  |     +--ro UnicastPacketsSent?            uint64
      |  |     +--ro UnicastPacketsReceived?        uint64
      |  |     +--ro DiscardPacketsSent?            uint32
      |  |     +--ro DiscardPacketsReceived?        uint32
      |  |     +--ro MulticastPacketsSent?          uint64
      |  |     +--ro MulticastPacketsReceived?      uint64
      |  |     +--ro BroadcastPacketsSent?          uint64
      |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  +--rw AccessPoint* [SSIDReference]
      |  |  +--rw Enable?                     boolean
      |  |  +--ro Status?                     enumeration
      |  |  +--rw SSIDReference               string
      |  |  +--rw SSIDAdvertisementEnabled?   boolean
      |  |  x--rw RetryLimit?                 uint32
      |  |  +--ro WMMCapability?              boolean
      |  |  +--ro UAPSDCapability?            boolean
      |  |  +--rw WMMEnable?                  boolean
      |  |  +--rw UAPSDEnable?                boolean
      |  |  +--rw MaxAssociatedDevices?       uint32
      |  |  +--rw IsolationEnable?            boolean
      |  |  +--rw MACAddressControlEnabled?   boolean
      |  |  +--rw AllowedMACAddress?          types:MACAddress
      |  |  +--rw Security
      |  |  |  +--rw Reset?                         boolean
      |  |  |  +--ro ModesSupported?                enumeration
      |  |  |  +--rw ModeEnabled?                   string
      |  |  |  +--rw WEPKey?                        yang:hex-string
      |  |  |  +--rw PreSharedKey?                  yang:hex-string
      |  |  |  +--rw KeyPassphrase?                 string
      |  |  |  +--rw RekeyingInterval?              uint32
      |  |  |  +--rw RadiusServerIPAddr?            types:IPAddress
      |  |  |  +--rw SecondaryRadiusServerIPAddr?   types:IPAddress
      |  |  |  +--rw RadiusServerPort?              uint32
      |  |  |  +--rw SecondaryRadiusServerPort?     uint32
      |  |  |  +--rw RadiusSecret?                  string
      |  |  |  +--rw SecondaryRadiusSecret?         string
      |  |  +--rw Accounting
      |  |  |  +--rw Enable?                  boolean
      |  |  |  +--rw ServerIPAddr?            types:IPAddress
      |  |  |  +--rw SecondaryServerIPAddr?   types:IPAddress
      |  |  |  +--rw ServerPort?              uint32
      |  |  |  +--rw SecondaryServerPort?     uint32
      |  |  |  +--rw Secret?                  string
      |  |  |  +--rw SecondarySecret?         string
      |  |  |  +--rw InterimInterval?         uint32
      |  |  +--rw WPS
      |  |  |  +--rw Enable?                   boolean
      |  |  |  +--ro ConfigMethodsSupported?   enumeration
      |  |  |  +--rw ConfigMethodsEnabled?     string
      |  |  +--ro AssociatedDevice* [MACAddress]
      |  |  |  +--ro MACAddress              types:MACAddress
      |  |  |  +--ro OperatingStandard?      enumeration
      |  |  |  +--ro AuthenticationState?    boolean
      |  |  |  +--ro LastDataDownlinkRate?   uint32
      |  |  |  +--ro LastDataUplinkRate?     uint32
      |  |  |  +--ro SignalStrength?         int32
      |  |  |  +--ro Retransmissions?        uint32
      |  |  |  +--ro Active?                 boolean
      |  |  |  +--ro Stats
      |  |  |     +--ro BytesSent?            types:StatsCounter64
      |  |  |     +--ro BytesReceived?        types:StatsCounter64
      |  |  |     +--ro PacketsSent?          types:StatsCounter64
      |  |  |     +--ro PacketsReceived?      types:StatsCounter64
      |  |  |     +--ro ErrorsSent?           types:StatsCounter32
      |  |  |     +--ro RetransCount?         types:StatsCounter32
      |  |  |     +--ro FailedRetransCount?   types:StatsCounter32
      |  |  |     +--ro RetryCount?           types:StatsCounter32
      |  |  |     +--ro MultipleRetryCount?   types:StatsCounter32
      |  |  +--rw AC* [AccessCategory]
      |  |     +--ro AccessCategory                    enumeration
      |  |     +--rw AIFSN?                            uint32
      |  |     +--rw ECWMin?                           uint32
      |  |     +--rw ECWMax?                           uint32
      |  |     +--rw TxOpMax?                          uint32
      |  |     +--rw AckPolicy?                        boolean
      |  |     +--rw OutQLenHistogramIntervals?        string
      |  |     +--rw OutQLenHistogramSampleInterval?   uint32
      |  |     +--ro Stats
      |  |        +--ro BytesSent?                types:StatsCounter64
      |  |        +--ro BytesReceived?            types:StatsCounter64
      |  |        +--ro PacketsSent?              types:StatsCounter64
      |  |        +--ro PacketsReceived?          types:StatsCounter64
      |  |        +--ro ErrorsSent?               types:StatsCounter32
      |  |        +--ro ErrorsReceived?           types:StatsCounter32
      |  |        +--ro DiscardPacketsSent?       types:StatsCounter32
      |  |        +--ro DiscardPacketsReceived?   types:StatsCounter32
      |  |        +--ro RetransCount?             types:StatsCounter32
      |  |        +--ro OutQLenHistogram?         string
      |  +--rw EndPoint* [SSIDReference]
      |     +--rw Enable?             boolean
      |     +--ro Status?             enumeration
      |     +--rw ProfileReference?   string
      |     +--ro SSIDReference       string
      |     +--ro Stats
      |     |  +--ro LastDataDownlinkRate?   uint32
      |     |  +--ro LastDataUplinkRate?     uint32
      |     |  +--ro SignalStrength?         int32
      |     |  +--ro Retransmissions?        uint32
      |     +--ro Security
      |     |  +--ro ModesSupported?   enumeration
      |     +--rw Profile* [SSID Location Priority]
      |     |  +--rw Enable?     boolean
      |     |  +--ro Status?     enumeration
      |     |  +--rw SSID        string
      |     |  +--rw Location    string
      |     |  +--rw Priority    uint32
      |     |  +--rw Security
      |     |     +--rw ModeEnabled?     string
      |     |     +--rw WEPKey?          yang:hex-string
      |     |     +--rw PreSharedKey?    yang:hex-string
      |     |     +--rw KeyPassphrase?   string
      |     +--rw WPS
      |     |  +--rw Enable?                   boolean
      |     |  +--ro ConfigMethodsSupported?   enumeration
      |     |  +--rw ConfigMethodsEnabled?     string
      |     +--rw AC* [AccessCategory]
      |        +--ro AccessCategory                    enumeration
      |        +--rw AIFSN?                            uint32
      |        +--rw ECWMin?                           uint32
      |        +--rw ECWMax?                           uint32
      |        +--rw TxOpMax?                          uint32
      |        +--rw AckPolicy?                        boolean
      |        +--rw OutQLenHistogramIntervals?        string
      |        +--rw OutQLenHistogramSampleInterval?   uint32
      |        +--ro Stats
      |           +--ro BytesSent?                types:StatsCounter64
      |           +--ro BytesReceived?            types:StatsCounter64
      |           +--ro PacketsSent?              types:StatsCounter64
      |           +--ro PacketsReceived?          types:StatsCounter64
      |           +--ro ErrorsSent?               types:StatsCounter32
      |           +--ro ErrorsReceived?           types:StatsCounter32
      |           +--ro DiscardPacketsSent?       types:StatsCounter32
      |           +--ro DiscardPacketsReceived?   types:StatsCounter32
      |           +--ro RetransCount?             types:StatsCounter32
      |           +--ro OutQLenHistogram?         string
      +--rw ZigBee
      |  +--rw Interface* [ZDOReference]
      |  |  +--rw Enable?             boolean
      |  |  +--ro Status?             enumeration
      |  |  +--ro Name?               string
      |  |  +--ro LastChange?         uint32
      |  |  +--rw LowerLayers?        string
      |  |  +--ro IEEEAddress?        types:IEEE_EUI64
      |  |  +--ro NetworkAddress?     types:ZigBeeNetworkAddress
      |  |  +--ro ZDOReference        string
      |  |  +--ro Stats
      |  |  |  +--ro BytesSent?                  types:StatsCounter64
      |  |  |  +--ro BytesReceived?              types:StatsCounter64
      |  |  |  +--ro PacketsSent?                types:StatsCounter64
      |  |  |  +--ro PacketsReceived?            types:StatsCounter64
      |  |  |  +--ro ErrorsSent?                 types:StatsCounter32
      |  |  |  +--ro ErrorsReceived?             types:StatsCounter32
      |  |  |  +--ro UnicastPacketsSent?         types:StatsCounter32
      |  |  |  +--ro UnicastPacketsReceived?     types:StatsCounter32
      |  |  |  +--ro DiscardPacketsSent?         types:StatsCounter32
      |  |  |  +--ro DiscardPacketsReceived?     types:StatsCounter32
      |  |  |  +--ro MulticastPacketsSent?       types:StatsCounter32
      |  |  |  +--ro MulticastPacketsReceived?   types:StatsCounter32
      |  |  |  +--ro BroadcastPacketsSent?       types:StatsCounter32
      |  |  |  +--ro BroadcastPacketsReceived?   types:StatsCounter32
      |  |  |  +--ro UnknownPacketsReceived?     types:StatsCounter32
      |  |  +--ro AssociatedDevice* [IEEEAddress NetworkAddress]
      |  |     +--ro IEEEAddress       types:IEEE_EUI64
      |  |     +--ro NetworkAddress    types:ZigBeeNetworkAddress
      |  |     +--ro Active?           boolean
      |  |     +--ro ZDOReference?     string
      |  +--rw ZDO* [IEEEAddress NetworkAddress]
      |  |  +--ro IEEEAddress            types:IEEE_EUI64
      |  |  +--ro NetworkAddress         types:ZigBeeNetworkAddress
      |  |  +--ro NodeDescriptor
      |  |  |  +--ro LogicalType?                   enumeration
      |  |  |  +--ro ComplexDescriptorSupported?    boolean
      |  |  |  +--ro UserDescriptorSupported?       boolean
      |  |  |  +--ro FrequencyBand?                 enumeration
      |  |  |  +--ro MACCapability?                 enumeration
      |  |  |  +--ro ManufactureCode?               uint32
      |  |  |  +--ro MaximumBufferSize?             uint32
      |  |  |  +--ro MaximumIncomingTransferSize?   uint32
      |  |  |  +--ro MaximumOutgoingTransferSize?   uint32
      |  |  |  +--ro ServerMask?                    enumeration
      |  |  |  +--ro DescriptorCapability?          enumeration
      |  |  +--ro PowerDescriptor
      |  |  |  +--ro CurrentPowerMode?          enumeration
      |  |  |  +--ro AvailablePowerSource?      enumeration
      |  |  |  +--ro CurrentPowerSource?        enumeration
      |  |  |  +--ro CurrentPowerSourceLevel?   enumeration
      |  |  +--ro UserDescriptor
      |  |  |  +--ro DescriptorAvailable?   boolean
      |  |  |  +--ro Description?           string
      |  |  +--ro ComplexDescriptor
      |  |  |  +--ro DescriptorAvailable?   boolean
      |  |  |  +--ro Language?              string
      |  |  |  +--ro CharacterSet?          string
      |  |  |  +--ro ManufacturerName?      string
      |  |  |  +--ro ModelName?             string
      |  |  |  +--ro SerialNumber?          string
      |  |  |  +--ro DeviceURL?             string
      |  |  |  +--ro Icon?                  yang:hex-string
      |  |  |  +--ro IconURL?               string
      |  |  +--ro Security
      |  |  |  +--ro TrustCenterAddress?   types:IEEE_EUI64
      |  |  |  +--ro SecurityLevel?        enumeration
      |  |  |  +--ro TimeOutPeriod?        uint32
      |  |  +--ro Network
      |  |  |  +--ro Neighbor* [Neighbor]
      |  |  |     +--ro Neighbor        string
      |  |  |     +--ro LQI?            uint32
      |  |  |     +--ro Relationship?   enumeration
      |  |  |     +--ro PermitJoin?     enumeration
      |  |  |     +--ro Depth?          uint32
      |  |  +--ro NodeManager
      |  |  |  +--ro RoutingTable* [DestinationAddress]
      |  |  |     +--ro DestinationAddress     string
      |  |  |     +--ro NextHopAddress?        types:ZigBeeNetworkAddress
      |  |  |     +--ro Status?                enumeration
      |  |  |     +--ro MemoryConstrained?     boolean
      |  |  |     +--ro ManyToOne?             boolean
      |  |  |     +--ro RouteRecordRequired?   boolean
      |  |  +--rw Binding* [Alias]
      |  |  |  +--rw Enable?                    boolean
      |  |  |  +--rw SourceEndpoint?            uint32
      |  |  |  +--rw SourceAddress?             types:IEEE_EUI64
      |  |  |  +--rw ClusterId?                 uint32
      |  |  |  +--rw DestinationAddressMode?    enumeration
      |  |  |  +--rw DestinationEndpoint?       uint32
      |  |  |  +--rw IEEEDestinationAddress?    types:IEEE_EUI64
      |  |  |  +--rw GroupDestinationAddress?   types:ZigBeeNetworkAddress
      |  |  +--rw Group* [GroupId]
      |  |  |  +--rw Enable?         boolean
      |  |  |  +--rw GroupId         types:ZigBeeNetworkAddress
      |  |  |  +--rw EndpointList?   string
      |  |  +--rw ApplicationEndpoint* [EndpointId]
      |  |     +--rw Enable?             boolean
      |  |     +--rw EndpointId          uint32
      |  |     +--rw SimpleDescriptor
      |  |        +--rw ProfileId?           uint32
      |  |        +--ro DeviceId?            uint32
      |  |        +--ro DeviceVersion?       uint32
      |  |        +--rw InputClusterList?    uint32
      |  |        +--rw OutputClusterList?   uint32
      |  +--rw Discovery
      |     +--rw AreaNetwork* [Coordinator]
      |        +--rw Enable?         boolean
      |        +--ro LastUpdate?     yang:date-and-time
      |        +--ro Status?         enumeration
      |        +--rw Coordinator     string
      |        +--ro ZDOReference?   string
      |        +--ro ZDOList?        string
      +--rw Bridging
      |  +--ro MaxBridgeEntries?           uint32
      |  +--ro MaxDBridgeEntries?          uint32
      |  +--ro MaxQBridgeEntries?          uint32
      |  +--ro MaxVLANEntries?             uint32
      |  +--ro MaxProviderBridgeEntries?   uint32
      |  +--ro MaxFilterEntries?           uint32
      |  +--rw Bridge* [Alias]
      |  |  +--rw Enable?     boolean
      |  |  +--ro Status?     enumeration
      |  |  +--rw Standard?   enumeration
      |  |  +--rw Port* [Alias]
      |  |  |  +--rw Enable?                             boolean
      |  |  |  +--ro Status?                             enumeration
      |  |  |  +--ro Name?                               string
      |  |  |  +--ro LastChange?                         uint32
      |  |  |  +--rw LowerLayers?                        string
      |  |  |  +--rw ManagementPort?                     boolean
      |  |  |  +--rw Type?                               enumeration
      |  |  |  +--rw DefaultUserPriority?                uint32
      |  |  |  +--rw PriorityRegeneration?               uint32
      |  |  |  +--ro PortState?                          enumeration
      |  |  |  +--rw PVID?                               int32
      |  |  |  +--rw TPID?                               uint32
      |  |  |  +--rw AcceptableFrameTypes?               enumeration
      |  |  |  +--rw IngressFiltering?                   boolean
      |  |  |  +--rw ServiceAccessPrioritySelection?     boolean
      |  |  |  +--rw ServiceAccessPriorityTranslation?   uint32
      |  |  |  +--rw PriorityTagging?                    boolean
      |  |  |  +--rw PriorityCodePoint
      |  |  |  |  +--rw PCPSelection?          uint32
      |  |  |  |  +--rw UseDEI?                boolean
      |  |  |  |  +--rw RequireDropEncoding?   boolean
      |  |  |  |  +--rw PCPEncoding?           string
      |  |  |  |  +--rw PCPDecoding?           string
      |  |  |  +--ro Stats
      |  |  |     +--ro BytesSent?                     uint64
      |  |  |     +--ro BytesReceived?                 uint64
      |  |  |     +--ro PacketsSent?                   uint64
      |  |  |     +--ro PacketsReceived?               uint64
      |  |  |     +--ro ErrorsSent?                    uint32
      |  |  |     +--ro ErrorsReceived?                uint32
      |  |  |     +--ro UnicastPacketsSent?            uint64
      |  |  |     +--ro UnicastPacketsReceived?        uint64
      |  |  |     +--ro DiscardPacketsSent?            uint32
      |  |  |     +--ro DiscardPacketsReceived?        uint32
      |  |  |     +--ro MulticastPacketsSent?          uint64
      |  |  |     +--ro MulticastPacketsReceived?      uint64
      |  |  |     +--ro BroadcastPacketsSent?          uint64
      |  |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  |  +--rw VLAN* [VLANID]
      |  |  |  +--rw Enable?   boolean
      |  |  |  +--rw Name?     string
      |  |  |  +--rw VLANID    int32
      |  |  +--rw VLANPort* [VLAN Port]
      |  |     +--rw Enable?     boolean
      |  |     +--rw VLAN        string
      |  |     +--rw Port        string
      |  |     +--rw Untagged?   boolean
      |  +--rw Filter* [Alias]
      |  |  +--rw Enable?                                    boolean
      |  |  +--ro Status?                                    enumeration
      |  |  +--rw Bridge?                                    string
      |  |  +--rw Order?                                     uint32
      |  |  +--rw Interface?                                 string
      |  |  +--rw DHCPType?                                  enumeration
      |  |  +--rw VLANIDFilter?                              uint32
      |  |  +--rw EthertypeFilterList?                       uint32
      |  |  +--rw EthertypeFilterExclude?                    boolean
      |  |  +--rw SourceMACAddressFilterList?                string
      |  |  +--rw SourceMACAddressFilterExclude?             boolean
      |  |  +--rw DestMACAddressFilterList?                  string
      |  |  +--rw DestMACAddressFilterExclude?               boolean
      |  |  +--rw SourceMACFromVendorClassIDFilter?          string
      |  |  +--rw SourceMACFromVendorClassIDFilterv6?        yang:hex-string
      |  |  +--rw SourceMACFromVendorClassIDFilterExclude?   boolean
      |  |  +--rw SourceMACFromVendorClassIDMode?            enumeration
      |  |  +--rw DestMACFromVendorClassIDFilter?            string
      |  |  +--rw DestMACFromVendorClassIDFilterv6?          yang:hex-string
      |  |  +--rw DestMACFromVendorClassIDFilterExclude?     boolean
      |  |  +--rw DestMACFromVendorClassIDMode?              enumeration
      |  |  +--rw SourceMACFromClientIDFilter?               yang:hex-string
      |  |  +--rw SourceMACFromClientIDFilterExclude?        boolean
      |  |  +--rw DestMACFromClientIDFilter?                 yang:hex-string
      |  |  +--rw DestMACFromClientIDFilterExclude?          boolean
      |  |  +--rw SourceMACFromUserClassIDFilter?            yang:hex-string
      |  |  +--rw SourceMACFromUserClassIDFilterExclude?     boolean
      |  |  +--rw DestMACFromUserClassIDFilter?              yang:hex-string
      |  |  +--rw DestMACFromUserClassIDFilterExclude?       boolean
      |  |  +--rw DestIP?                                    types:IPAddress
      |  |  +--rw DestMask?                                  types:IPPrefix
      |  |  +--rw DestIPExclude?                             boolean
      |  |  +--rw SourceIP?                                  types:IPAddress
      |  |  +--rw SourceMask?                                types:IPPrefix
      |  |  +--rw SourceIPExclude?                           boolean
      |  |  +--rw Protocol?                                  int32
      |  |  +--rw ProtocolExclude?                           boolean
      |  |  +--rw DestPort?                                  int32
      |  |  +--rw DestPortRangeMax?                          int32
      |  |  +--rw DestPortExclude?                           boolean
      |  |  +--rw SourcePort?                                int32
      |  |  +--rw SourcePortRangeMax?                        int32
      |  |  +--rw SourcePortExclude?                         boolean
      |  +--rw ProviderBridge* [Alias]
      |     +--rw Enable?            boolean
      |     +--ro Status?            enumeration
      |     +--rw Type?              enumeration
      |     +--rw SVLANComponent?    string
      |     +--rw CVLANComponents?   string
      +--rw PPP
      |  +--ro SupportedNCPs?   enumeration
      |  +--rw Interface* [Alias]
      |     +--rw Enable?                   boolean
      |     +--ro Status?                   enumeration
      |     +--ro Name?                     string
      |     +--ro LastChange?               uint32
      |     +--rw LowerLayers?              string
      |     +--rw Reset?                    boolean
      |     +--ro ConnectionStatus?         enumeration
      |     +--ro LastConnectionError?      enumeration
      |     +--rw AutoDisconnectTime?       uint32
      |     +--rw IdleDisconnectTime?       uint32
      |     +--rw WarnDisconnectDelay?      uint32
      |     +--rw Username?                 string
      |     +--rw Password?                 string
      |     +--ro EncryptionProtocol?       enumeration
      |     +--ro CompressionProtocol?      enumeration
      |     +--ro AuthenticationProtocol?   enumeration
      |     +--rw MaxMRUSize?               uint32
      |     +--ro CurrentMRUSize?           uint32
      |     +--rw ConnectionTrigger?        enumeration
      |     +--ro LCPEcho?                  uint32
      |     +--ro LCPEchoRetry?             uint32
      |     +--rw IPCPEnable?               boolean
      |     +--rw IPv6CPEnable?             boolean
      |     +--ro PPPoA
      |     +--rw PPPoE
      |     |  +--ro SessionID?     uint32
      |     |  +--rw ACName?        string
      |     |  +--rw ServiceName?   string
      |     +--rw IPCP
      |     |  +--ro LocalIPAddress?        types:IPv4Address
      |     |  +--ro RemoteIPAddress?       types:IPv4Address
      |     |  +--ro DNSServers?            types:IPv4Address
      |     |  +--rw PassthroughEnable?     boolean
      |     |  +--rw PassthroughDHCPPool?   string
      |     +--ro IPv6CP
      |     |  +--ro LocalInterfaceIdentifier?    types:IPv6Address
      |     |  +--ro RemoteInterfaceIdentifier?   types:IPv6Address
      |     +--ro Stats
      |        +--ro BytesSent?                     uint64
      |        +--ro BytesReceived?                 uint64
      |        +--ro PacketsSent?                   uint64
      |        +--ro PacketsReceived?               uint64
      |        +--ro ErrorsSent?                    uint32
      |        +--ro ErrorsReceived?                uint32
      |        +--ro UnicastPacketsSent?            uint64
      |        +--ro UnicastPacketsReceived?        uint64
      |        +--ro DiscardPacketsSent?            uint32
      |        +--ro DiscardPacketsReceived?        uint32
      |        +--ro MulticastPacketsSent?          uint64
      |        +--ro MulticastPacketsReceived?      uint64
      |        +--ro BroadcastPacketsSent?          uint64
      |        +--ro BroadcastPacketsReceived?      uint64
      |        +--ro UnknownProtoPacketsReceived?   uint32
      +--rw IP
      |  +--ro IPv4Capable?   boolean
      |  +--rw IPv4Enable?    boolean
      |  +--ro IPv4Status?    enumeration
      |  +--ro IPv6Capable?   boolean
      |  +--rw IPv6Enable?    boolean
      |  +--ro IPv6Status?    enumeration
      |  +--rw ULAPrefix?     types:IPv6Prefix
      |  +--rw Interface* [Alias]
      |  |  +--rw Enable?         boolean
      |  |  +--rw IPv4Enable?     boolean
      |  |  +--rw IPv6Enable?     boolean
      |  |  +--rw ULAEnable?      boolean
      |  |  +--ro Status?         enumeration
      |  |  +--ro Name?           string
      |  |  +--ro LastChange?     uint32
      |  |  +--rw LowerLayers?    string
      |  |  +--rw Router?         string
      |  |  +--rw Reset?          boolean
      |  |  +--rw MaxMTUSize?     uint32
      |  |  +--ro Type?           enumeration
      |  |  +--rw Loopback?       boolean
      |  |  +--rw AutoIPEnable?   boolean
      |  |  +--rw IPv4Address* [IPAddress SubnetMask]
      |  |  |  +--rw Enable?           boolean
      |  |  |  +--ro Status?           enumeration
      |  |  |  +--rw IPAddress         types:IPv4Address
      |  |  |  +--rw SubnetMask        types:IPv4Address
      |  |  |  +--ro AddressingType?   enumeration
      |  |  +--rw IPv6Address* [IPAddress]
      |  |  |  +--rw Enable?              boolean
      |  |  |  +--ro Status?              enumeration
      |  |  |  +--ro IPAddressStatus?     enumeration
      |  |  |  +--rw IPAddress            types:IPv6Address
      |  |  |  +--ro Origin?              enumeration
      |  |  |  +--rw Prefix?              string
      |  |  |  +--rw PreferredLifetime?   yang:date-and-time
      |  |  |  +--rw ValidLifetime?       yang:date-and-time
      |  |  |  +--rw Anycast?             boolean
      |  |  +--rw IPv6Prefix* [Prefix]
      |  |  |  +--rw Enable?              boolean
      |  |  |  +--ro Status?              enumeration
      |  |  |  +--ro PrefixStatus?        enumeration
      |  |  |  +--rw Prefix               types:IPv6Prefix
      |  |  |  +--ro Origin?              enumeration
      |  |  |  +--rw StaticType?          enumeration
      |  |  |  +--rw ParentPrefix?        string
      |  |  |  +--rw ChildPrefixBits?     types:IPv6Prefix
      |  |  |  +--rw OnLink?              boolean
      |  |  |  +--rw Autonomous?          boolean
      |  |  |  +--rw PreferredLifetime?   yang:date-and-time
      |  |  |  +--rw ValidLifetime?       yang:date-and-time
      |  |  +--ro Stats
      |  |     +--ro BytesSent?                     uint64
      |  |     +--ro BytesReceived?                 uint64
      |  |     +--ro PacketsSent?                   uint64
      |  |     +--ro PacketsReceived?               uint64
      |  |     +--ro ErrorsSent?                    uint32
      |  |     +--ro ErrorsReceived?                uint32
      |  |     +--ro UnicastPacketsSent?            uint64
      |  |     +--ro UnicastPacketsReceived?        uint64
      |  |     +--ro DiscardPacketsSent?            uint32
      |  |     +--ro DiscardPacketsReceived?        uint32
      |  |     +--ro MulticastPacketsSent?          uint64
      |  |     +--ro MulticastPacketsReceived?      uint64
      |  |     +--ro BroadcastPacketsSent?          uint64
      |  |     +--ro BroadcastPacketsReceived?      uint64
      |  |     +--ro UnknownProtoPacketsReceived?   uint32
      |  +--ro ActivePort* [LocalIPAddress LocalPort RemoteIPAddress RemotePort]
      |  |  +--ro LocalIPAddress     types:IPAddress
      |  |  +--ro LocalPort          uint32
      |  |  +--ro RemoteIPAddress    types:IPAddress
      |  |  +--ro RemotePort         uint32
      |  |  +--ro Status?            enumeration
      |  +--rw Diagnostics
      |     +--ro IPv4PingSupported?                         boolean
      |     +--ro IPv6PingSupported?                         boolean
      |     +--ro IPv4TraceRouteSupported?                   boolean
      |     +--ro IPv6TraceRouteSupported?                   boolean
      |     +--ro IPv4DownloadDiagnosticsSupported?          boolean
      |     +--ro IPv6DownloadDiagnosticsSupported?          boolean
      |     +--ro IPv4UploadDiagnosticsSupported?            boolean
      |     +--ro IPv6UploadDiagnosticsSupported?            boolean
      |     +--ro IPv4UDPEchoDiagnosticsSupported?           boolean
      |     +--ro IPv6UDPEchoDiagnosticsSupported?           boolean
      |     +--ro IPv4ServerSelectionDiagnosticsSupported?   boolean
      |     +--ro IPv6ServerSelectionDiagnosticsSupported?   boolean
      |     +--rw IPPing
      |     |  +--rw DiagnosticsState?              enumeration
      |     |  +--rw Interface?                     string
      |     |  +--rw ProtocolVersion?               enumeration
      |     |  +--rw Host?                          string
      |     |  +--rw NumberOfRepetitions?           uint32
      |     |  +--rw Timeout?                       uint32
      |     |  +--rw DataBlockSize?                 uint32
      |     |  +--rw DSCP?                          uint32
      |     |  +--ro IPAddressUsed?                 types:IPAddress
      |     |  +--ro SuccessCount?                  uint32
      |     |  +--ro FailureCount?                  uint32
      |     |  +--ro AverageResponseTime?           uint32
      |     |  +--ro MinimumResponseTime?           uint32
      |     |  +--ro MaximumResponseTime?           uint32
      |     |  +--ro AverageResponseTimeDetailed?   uint32
      |     |  +--ro MinimumResponseTimeDetailed?   uint32
      |     |  +--ro MaximumResponseTimeDetailed?   uint32
      |     +--rw TraceRoute
      |     |  +--rw DiagnosticsState?   enumeration
      |     |  +--rw Interface?          string
      |     |  +--rw ProtocolVersion?    enumeration
      |     |  +--rw Host?               string
      |     |  +--rw NumberOfTries?      uint32
      |     |  +--rw Timeout?            uint32
      |     |  +--rw DataBlockSize?      uint32
      |     |  +--rw DSCP?               uint32
      |     |  +--rw MaxHopCount?        uint32
      |     |  +--ro IPAddressUsed?      types:IPAddress
      |     |  +--ro ResponseTime?       uint32
      |     |  +--ro RouteHops*
      |     |     +--ro Host?          string
      |     |     +--ro HostAddress?   string
      |     |     +--ro ErrorCode?     uint32
      |     |     +--ro RTTimes?       uint32
      |     +--rw DownloadDiagnostics
      |     |  +--rw DiagnosticsState?                          enumeration
      |     |  +--rw Interface?                                 string
      |     |  +--rw DownloadURL?                               string
      |     |  +--ro DownloadTransports?                        enumeration
      |     |  +--ro DownloadDiagnosticMaxConnections?          uint32
      |     |  +--ro DownloadDiagnosticsMaxIncrementalResult?   uint32
      |     |  +--rw DSCP?                                      uint32
      |     |  +--rw EthernetPriority?                          uint32
      |     |  +--rw TimeBasedTestDuration?                     uint32
      |     |  +--rw TimeBasedTestMeasurementInterval?          uint32
      |     |  +--rw TimeBasedTestMeasurementOffset?            uint32
      |     |  +--rw ProtocolVersion?                           enumeration
      |     |  +--rw NumberOfConnections?                       uint32
      |     |  +--ro IPAddressUsed?                             types:IPAddress
      |     |  +--ro ROMTime?                                   yang:date-and-time
      |     |  +--ro BOMTime?                                   yang:date-and-time
      |     |  +--ro EOMTime?                                   yang:date-and-time
      |     |  +--ro TestBytesReceived?                         uint32
      |     |  +--ro TotalBytesReceived?                        uint32
      |     |  +--ro TotalBytesSent?                            uint32
      |     |  +--ro TestBytesReceivedUnderFullLoading?         uint32
      |     |  +--ro TotalBytesReceivedUnderFullLoading?        uint32
      |     |  +--ro TotalBytesSentUnderFullLoading?            uint32
      |     |  +--ro PeriodOfFullLoading?                       uint32
      |     |  +--ro TCPOpenRequestTime?                        yang:date-and-time
      |     |  +--ro TCPOpenResponseTime?                       yang:date-and-time
      |     |  +--rw EnablePerConnectionResults?                boolean
      |     |  +--ro PerConnectionResult*
      |     |  |  +--ro ROMTime?               yang:date-and-time
      |     |  |  +--ro BOMTime?               yang:date-and-time
      |     |  |  +--ro EOMTime?               yang:date-and-time
      |     |  |  +--ro TestBytesReceived?     uint32
      |     |  |  +--ro TotalBytesReceived?    uint32
      |     |  |  +--ro TotalBytesSent?        uint32
      |     |  |  +--ro TCPOpenRequestTime?    yang:date-and-time
      |     |  |  +--ro TCPOpenResponseTime?   yang:date-and-time
      |     |  +--ro IncrementalResult*
      |     |     +--ro TestBytesReceived?    uint32
      |     |     +--ro TotalBytesReceived?   uint32
      |     |     +--ro TotalBytesSent?       uint32
      |     |     +--ro StartTime?            yang:date-and-time
      |     |     +--ro EndTime?              yang:date-and-time
      |     +--rw UploadDiagnostics
      |     |  +--rw DiagnosticsState?                        enumeration
      |     |  +--rw Interface?                               string
      |     |  +--rw UploadURL?                               string
      |     |  +--ro UploadTransports?                        enumeration
      |     |  +--ro UploadDiagnosticsMaxConnections?         uint32
      |     |  +--ro UploadDiagnosticsMaxIncrementalResult?   uint32
      |     |  +--rw DSCP?                                    uint32
      |     |  +--rw EthernetPriority?                        uint32
      |     |  +--rw TestFileLength?                          uint32
      |     |  +--rw TimeBasedTestDuration?                   uint32
      |     |  +--rw TimeBasedTestMeasurementInterval?        uint32
      |     |  +--rw TimeBasedTestMeasurementOffset?          uint32
      |     |  +--rw ProtocolVersion?                         enumeration
      |     |  +--rw NumberOfConnections?                     uint32
      |     |  +--ro IPAddressUsed?                           types:IPAddress
      |     |  +--ro ROMTime?                                 yang:date-and-time
      |     |  +--ro BOMTime?                                 yang:date-and-time
      |     |  +--ro EOMTime?                                 yang:date-and-time
      |     |  +--ro TestBytesSent?                           uint32
      |     |  +--ro TotalBytesReceived?                      uint32
      |     |  +--ro TotalBytesSent?                          uint32
      |     |  +--ro TestBytesSentUnderFullLoading?           uint32
      |     |  +--ro TotalBytesReceivedUnderFullLoading?      uint32
      |     |  +--ro TotalBytesSentUnderFullLoading?          uint32
      |     |  +--ro PeriodOfFullLoading?                     uint32
      |     |  +--ro TCPOpenRequestTime?                      yang:date-and-time
      |     |  +--ro TCPOpenResponseTime?                     yang:date-and-time
      |     |  +--rw EnablePerConnectionResults?              boolean
      |     |  +--ro PerConnectionResult*
      |     |  |  +--ro ROMTime?               yang:date-and-time
      |     |  |  +--ro BOMTime?               yang:date-and-time
      |     |  |  +--ro EOMTime?               yang:date-and-time
      |     |  |  +--ro TestBytesSent?         uint32
      |     |  |  +--ro TotalBytesReceived?    uint32
      |     |  |  +--ro TotalBytesSent?        uint32
      |     |  |  +--ro TCPOpenRequestTime?    yang:date-and-time
      |     |  |  +--ro TCPOpenResponseTime?   yang:date-and-time
      |     |  +--ro IncrementalResult*
      |     |     +--ro TestBytesSent?        uint32
      |     |     +--ro TotalBytesReceived?   uint32
      |     |     +--ro TotalBytesSent?       uint32
      |     |     +--ro StartTime?            yang:date-and-time
      |     |     +--ro EndTime?              yang:date-and-time
      |     +--rw UDPEchoConfig
      |     |  +--rw Enable?                    boolean
      |     |  +--rw Interface?                 string
      |     |  +--rw SourceIPAddress?           types:IPAddress
      |     |  +--rw UDPPort?                   uint32
      |     |  +--rw EchoPlusEnabled?           boolean
      |     |  +--ro EchoPlusSupported?         boolean
      |     |  +--ro PacketsReceived?           uint32
      |     |  +--ro PacketsResponded?          uint32
      |     |  +--ro BytesReceived?             uint32
      |     |  +--ro BytesResponded?            uint32
      |     |  +--ro TimeFirstPacketReceived?   yang:date-and-time
      |     |  +--ro TimeLastPacketReceived?    yang:date-and-time
      |     +--rw UDPEchoDiagnostics
      |     |  +--rw DiagnosticsState?                enumeration
      |     |  +--rw Interface?                       string
      |     |  +--rw Host?                            string
      |     |  +--rw Port?                            uint32
      |     |  +--rw NumberOfRepetitions?             uint32
      |     |  +--rw Timeout?                         uint32
      |     |  +--rw DataBlockSize?                   uint32
      |     |  +--rw DSCP?                            uint32
      |     |  +--rw InterTransmissionTime?           uint32
      |     |  +--rw ProtocolVersion?                 enumeration
      |     |  +--ro IPAddressUsed?                   types:IPAddress
      |     |  +--ro SuccessCount?                    uint32
      |     |  +--ro FailureCount?                    uint32
      |     |  +--ro AverageResponseTime?             uint32
      |     |  +--ro MinimumResponseTime?             uint32
      |     |  +--ro MaximumResponseTime?             uint32
      |     |  +--rw EnableIndividualPacketResults?   boolean
      |     |  +--ro UDPEchoDiagnosticsMaxResults?    uint32
      |     |  +--ro IndividualPacketResult*
      |     |     +--ro PacketSuccess?               boolean
      |     |     +--ro PacketSendTime?              yang:date-and-time
      |     |     +--ro PacketReceiveTime?           yang:date-and-time
      |     |     +--ro TestGenSN?                   uint32
      |     |     +--ro TestRespSN?                  uint32
      |     |     +--ro TestRespRcvTimeStamp?        uint32
      |     |     +--ro TestRespReplyTimeStamp?      uint32
      |     |     +--ro TestRespReplyFailureCount?   uint32
      |     +--rw ServerSelectionDiagnostics
      |        +--rw DiagnosticsState?      enumeration
      |        +--rw Interface?             string
      |        +--rw ProtocolVersion?       enumeration
      |        +--rw Protocol?              enumeration
      |        +--rw HostList?              string
      |        +--rw NumberOfRepetitions?   uint32
      |        +--rw Timeout?               uint32
      |        +--ro FastestHost?           string
      |        +--ro MinimumResponseTime?   uint32
      |        +--ro AverageResponseTime?   uint32
      |        +--ro MaximumResponseTime?   uint32
      |        +--ro IPAddressUsed?         types:IPAddress
      +--ro LLDP
      |  +--ro Discovery
      |     +--ro Device* [ChassisIDSubtype ChassisID]
      |        +--ro Interface?           string
      |        +--ro ChassisIDSubtype     uint32
      |        +--ro ChassisID            string
      |        +--ro Host?                string
      |        +--ro Port* [PortIDSubtype PortID]
      |        |  +--ro PortIDSubtype      uint32
      |        |  +--ro PortID             string
      |        |  +--ro TTL?               uint32
      |        |  +--ro PortDescription?   string
      |        |  +--ro MACAddressList?    types:MACAddress
      |        |  +--ro LastUpdate?        yang:date-and-time
      |        |  +--ro LinkInformation
      |        |     +--ro InterfaceType?        uint32
      |        |     +--ro MACForwardingTable?   types:MACAddress
      |        +--ro DeviceInformation
      |           +--ro DeviceCategory?    string
      |           +--ro ManufacturerOUI?   string
      |           +--ro ModelName?         string
      |           +--ro ModelNumber?       string
      |           +--ro VendorSpecific* [OrganizationCode InformationType]
      |              +--ro OrganizationCode    string
      |              +--ro InformationType     uint32
      |              +--ro Information?        string
      +--rw IPsec
      |  +--rw Enable?                                  boolean
      |  +--ro Status?                                  enumeration
      |  +--ro AHSupported?                             boolean
      |  +--ro IKEv2SupportedEncryptionAlgorithms?      enumeration
      |  +--ro ESPSupportedEncryptionAlgorithms?        enumeration
      |  +--ro IKEv2SupportedPseudoRandomFunctions?     enumeration
      |  +--ro SupportedIntegrityAlgorithms?            enumeration
      |  +--ro SupportedDiffieHellmanGroupTransforms?   enumeration
      |  +--ro MaxFilterEntries?                        uint32
      |  +--ro MaxProfileEntries?                       uint32
      |  +--ro Stats
      |  |  +--ro NegotiationFailures?   types:StatsCounter32
      |  |  +--ro BytesSent?             types:StatsCounter64
      |  |  +--ro BytesReceived?         types:StatsCounter64
      |  |  +--ro PacketsSent?           types:StatsCounter64
      |  |  +--ro PacketsReceived?       types:StatsCounter64
      |  |  +--ro ErrorsSent?            types:StatsCounter32
      |  |  +--ro UnknownSPIErrors?      types:StatsCounter32
      |  |  +--ro DecryptionErrors?      types:StatsCounter32
      |  |  +--ro IntegrityErrors?       types:StatsCounter32
      |  |  +--ro ReplayErrors?          types:StatsCounter32
      |  |  +--ro PolicyErrors?          types:StatsCounter32
      |  |  +--ro OtherReceiveErrors?    types:StatsCounter32
      |  +--rw Filter* [Alias]
      |  |  +--rw Enable?               boolean
      |  |  +--ro Status?               enumeration
      |  |  +--rw Order?                uint32
      |  |  +--rw Interface?            string
      |  |  +--rw AllInterfaces?        boolean
      |  |  +--rw DestIP?               types:IPAddress
      |  |  +--rw DestMask?             types:IPAddress
      |  |  +--rw DestIPExclude?        boolean
      |  |  +--rw SourceIP?             types:IPAddress
      |  |  +--rw SourceMask?           types:IPAddress
      |  |  +--rw SourceIPExclude?      boolean
      |  |  +--rw Protocol?             int32
      |  |  +--rw ProtocolExclude?      boolean
      |  |  +--rw DestPort?             int32
      |  |  +--rw DestPortRangeMax?     int32
      |  |  +--rw DestPortExclude?      boolean
      |  |  +--rw SourcePort?           int32
      |  |  +--rw SourcePortRangeMax?   int32
      |  |  +--rw SourcePortExclude?    boolean
      |  |  +--rw ProcessingChoice?     enumeration
      |  |  +--rw Profile?              string
      |  +--rw Profile* [Alias]
      |  |  +--rw MaxChildSAs?                                uint32
      |  |  +--rw RemoteEndpoints?                            string
      |  |  +--rw ForwardingPolicy?                           uint32
      |  |  +--rw Protocol?                                   enumeration
      |  |  +--rw IKEv2AuthenticationMethod?                  string
      |  |  +--rw IKEv2AllowedEncryptionAlgorithms?           string
      |  |  +--rw ESPAllowedEncryptionAlgorithms?             string
      |  |  +--rw IKEv2AllowedPseudoRandomFunctions?          string
      |  |  +--rw IKEv2AllowedIntegrityAlgorithms?            string
      |  |  +--rw AHAllowedIntegrityAlgorithms?               string
      |  |  +--rw ESPAllowedIntegrityAlgorithms?              string
      |  |  +--rw IKEv2AllowedDiffieHellmanGroupTransforms?   string
      |  |  +--rw IKEv2DeadPeerDetectionTimeout?              uint32
      |  |  +--rw IKEv2NATTKeepaliveTimeout?                  uint32
      |  |  +--rw AntiReplayWindowSize?                       uint32
      |  |  +--rw DoNotFragment?                              enumeration
      |  |  +--rw DSCPMarkPolicy?                             int32
      |  |  +--rw IKEv2SATrafficLimit?                        uint64
      |  |  +--rw IKEv2SATimeLimit?                           uint32
      |  |  +--rw IKEv2SAExpiryAction?                        enumeration
      |  |  +--rw ChildSATrafficLimit?                        uint64
      |  |  +--rw ChildSATimeLimit?                           uint32
      |  |  +--rw ChildSAExpiryAction?                        enumeration
      |  |  +--rw SentCPAttr* [Type]
      |  |     +--rw Enable?   boolean
      |  |     +--rw Type      uint32
      |  |     +--rw Value?    yang:hex-string
      |  +--ro Tunnel* [TunnelInterface TunneledInterface]
      |  |  +--ro TunnelInterface      string
      |  |  +--ro TunneledInterface    string
      |  |  +--ro Filters?             string
      |  |  +--ro Stats
      |  |     +--ro DecryptionErrors?     types:StatsCounter32
      |  |     +--ro IntegrityErrors?      types:StatsCounter32
      |  |     +--ro ReplayErrors?         types:StatsCounter32
      |  |     +--ro PolicyErrors?         types:StatsCounter32
      |  |     +--ro OtherReceiveErrors?   types:StatsCounter32
      |  +--rw IKEv2SA* [Tunnel]
      |     +--ro Status?                        enumeration
      |     +--ro Tunnel                         string
      |     +--ro LocalAddress?                  types:IPAddress
      |     +--ro RemoteAddress?                 types:IPAddress
      |     +--ro EncryptionAlgorithm?           string
      |     +--ro EncryptionKeyLength?           uint32
      |     +--ro PseudoRandomFunction?          string
      |     +--ro IntegrityAlgorithm?            string
      |     +--ro DiffieHellmanGroupTransform?   string
      |     +--ro CreationTime?                  yang:date-and-time
      |     +--ro NATDetected?                   enumeration
      |     +--ro Stats
      |     |  +--ro BytesSent?            types:StatsCounter64
      |     |  +--ro BytesReceived?        types:StatsCounter64
      |     |  +--ro PacketsSent?          types:StatsCounter64
      |     |  +--ro PacketsReceived?      types:StatsCounter64
      |     |  +--ro ErrorsSent?           types:StatsCounter32
      |     |  +--ro DecryptionErrors?     types:StatsCounter32
      |     |  +--ro IntegrityErrors?      types:StatsCounter32
      |     |  +--ro OtherReceiveErrors?   types:StatsCounter32
      |     +--rw ReceivedCPAttr*
      |     |  +--ro Type?    uint32
      |     |  +--ro Value?   yang:hex-string
      |     +--ro ChildSA* [InboundSPI]
      |        +--ro Status?         enumeration
      |        +--ro InboundSPI      uint32
      |        +--ro OutboundSPI?    uint32
      |        +--ro CreationTime?   yang:date-and-time
      |        +--ro Stats
      |           +--ro BytesSent?            types:StatsCounter64
      |           +--ro BytesReceived?        types:StatsCounter64
      |           +--ro PacketsSent?          types:StatsCounter64
      |           +--ro PacketsReceived?      types:StatsCounter64
      |           +--ro ErrorsSent?           types:StatsCounter32
      |           +--ro DecryptionErrors?     types:StatsCounter32
      |           +--ro IntegrityErrors?      types:StatsCounter32
      |           +--ro ReplayErrors?         types:StatsCounter32
      |           +--ro PolicyErrors?         types:StatsCounter32
      |           +--ro OtherReceiveErrors?   types:StatsCounter32
      +--rw GRE
      |  +--rw Tunnel* [Alias]
      |  |  +--rw Enable?                    boolean
      |  |  +--ro Status?                    enumeration
      |  |  +--rw RemoteEndpoints?           string
      |  |  +--rw KeepAlivePolicy?           enumeration
      |  |  +--rw KeepAliveTimeout?          uint32
      |  |  +--rw KeepAliveThreshold?        uint32
      |  |  +--rw DeliveryHeaderProtocol?    enumeration
      |  |  +--rw DefaultDSCPMark?           uint32
      |  |  +--ro ConnectedRemoteEndpoint?   string
      |  |  +--ro Stats
      |  |  |  +--ro KeepAliveSent?       types:StatsCounter32
      |  |  |  +--ro KeepAliveReceived?   types:StatsCounter32
      |  |  |  +--ro BytesSent?           types:StatsCounter64
      |  |  |  +--ro BytesReceived?       types:StatsCounter64
      |  |  |  +--ro PacketsSent?         types:StatsCounter64
      |  |  |  +--ro PacketsReceived?     types:StatsCounter64
      |  |  |  +--ro ErrorsSent?          types:StatsCounter32
      |  |  |  +--ro ErrorsReceived?      types:StatsCounter32
      |  |  +--rw Interface* [Alias]
      |  |     +--rw Enable?                          boolean
      |  |     +--ro Status?                          enumeration
      |  |     +--ro Name?                            string
      |  |     +--ro LastChange?                      uint32
      |  |     +--rw LowerLayers?                     string
      |  |     +--rw ProtocolIdOverride?              uint32
      |  |     +--rw UseChecksum?                     boolean
      |  |     +--rw KeyIdentifierGenerationPolicy?   enumeration
      |  |     +--rw KeyIdentifier?                   uint32
      |  |     +--rw UseSequenceNumber?               boolean
      |  |     +--ro Stats
      |  |        +--ro BytesSent?                       types:StatsCounter64
      |  |        +--ro BytesReceived?                   types:StatsCounter64
      |  |        +--ro PacketsSent?                     types:StatsCounter64
      |  |        +--ro PacketsReceived?                 types:StatsCounter64
      |  |        +--ro ErrorsSent?                      types:StatsCounter32
      |  |        +--ro ErrorsReceived?                  types:StatsCounter32
      |  |        +--ro DiscardChecksumReceived?         types:StatsCounter32
      |  |        +--ro DiscardSequenceNumberReceived?   types:StatsCounter32
      |  +--rw Filter* [Alias]
      |     +--rw Enable?           boolean
      |     +--ro Status?           enumeration
      |     +--rw Order?            uint32
      |     +--rw Interface?        string
      |     +--rw AllInterfaces?    boolean
      |     +--rw VLANIDCheck?      int32
      |     +--rw VLANIDExclude?    boolean
      |     +--rw DSCPMarkPolicy?   int32
      +--rw MAP
      |  +--rw Enable?   boolean
      |  +--rw Domain* [WANInterface IPv6Prefix]
      |     +--rw Enable?               boolean
      |     +--ro Status?               enumeration
      |     +--rw TransportMode?        enumeration
      |     +--rw WANInterface          string
      |     +--rw IPv6Prefix            string
      |     +--rw BRIPv6Prefix?         types:IPv6Prefix
      |     +--rw DSCPMarkPolicy?       int32
      |     +--rw PSIDOffset?           uint32
      |     +--rw PSIDLength?           uint32
      |     +--rw PSID?                 uint32
      |     +--rw IncludeSystemPorts?   boolean
      |     +--rw Rule* [IPv6Prefix]
      |     |  +--rw Enable?         boolean
      |     |  +--ro Status?         enumeration
      |     |  +--ro Origin?         enumeration
      |     |  +--rw IPv6Prefix      types:IPv6Prefix
      |     |  +--rw IPv4Prefix?     types:IPv4Prefix
      |     |  +--rw EABitsLength?   uint32
      |     |  +--rw IsFMR?          boolean
      |     +--rw Interface
      |        +--rw Enable?        boolean
      |        +--ro Status?        enumeration
      |        +--ro Name?          string
      |        +--ro LastChange?    uint32
      |        +--rw LowerLayers?   string
      |        +--ro Stats
      |           +--ro BytesSent?                     types:StatsCounter64
      |           +--ro BytesReceived?                 types:StatsCounter64
      |           +--ro PacketsSent?                   types:StatsCounter64
      |           +--ro PacketsReceived?               types:StatsCounter64
      |           +--ro ErrorsSent?                    types:StatsCounter32
      |           +--ro ErrorsReceived?                types:StatsCounter32
      |           +--ro UnicastPacketsSent?            types:StatsCounter64
      |           +--ro UnicastPacketsReceived?        types:StatsCounter64
      |           +--ro DiscardPacketsSent?            types:StatsCounter32
      |           +--ro DiscardPacketsReceived?        types:StatsCounter32
      |           +--ro MulticastPacketsSent?          types:StatsCounter64
      |           +--ro MulticastPacketsReceived?      types:StatsCounter64
      |           +--ro BroadcastPacketsSent?          types:StatsCounter64
      |           +--ro BroadcastPacketsReceived?      types:StatsCounter64
      |           +--ro UnknownProtoPacketsReceived?   types:StatsCounter32
      +--rw CaptivePortal
      |  +--rw Enable?        boolean
      |  +--ro Status?        enumeration
      |  +--rw AllowedList?   string
      |  +--rw URL?           string
      +--rw Routing
      |  +--rw Router* [Alias]
      |  |  +--rw Enable?           boolean
      |  |  +--ro Status?           enumeration
      |  |  +--rw IPv4Forwarding* [DestIPAddress DestSubnetMask ForwardingPolicy GatewayIPAddress Interface ForwardingMetric]
      |  |  |  +--rw Enable?             boolean
      |  |  |  +--ro Status?             enumeration
      |  |  |  +--ro StaticRoute?        boolean
      |  |  |  +--rw DestIPAddress       types:IPv4Address
      |  |  |  +--rw DestSubnetMask      types:IPv4Address
      |  |  |  +--rw ForwardingPolicy    int32
      |  |  |  +--rw GatewayIPAddress    types:IPv4Address
      |  |  |  +--rw Interface           string
      |  |  |  +--ro Origin?             enumeration
      |  |  |  +--rw ForwardingMetric    int32
      |  |  +--rw IPv6Forwarding* [DestIPPrefix ForwardingPolicy NextHop Interface ForwardingMetric]
      |  |     +--rw Enable?             boolean
      |  |     +--ro Status?             enumeration
      |  |     +--rw DestIPPrefix        types:IPv6Prefix
      |  |     +--rw ForwardingPolicy    int32
      |  |     +--rw NextHop             types:IPv6Address
      |  |     +--rw Interface           string
      |  |     +--ro Origin?             enumeration
      |  |     +--rw ForwardingMetric    int32
      |  |     +--ro ExpirationTime?     yang:date-and-time
      |  +--rw RIP
      |  |  +--rw Enable?             boolean
      |  |  +--ro SupportedModes?     enumeration
      |  |  +--rw InterfaceSetting* [Interface]
      |  |     +--rw Enable?      boolean
      |  |     +--ro Status?      enumeration
      |  |     +--rw Interface    string
      |  |     +--rw AcceptRA?    boolean
      |  |     +--rw SendRA?      boolean
      |  +--rw RouteInformation
      |     +--rw Enable?             boolean
      |     +--ro InterfaceSetting* [Interface]
      |        +--ro Status?               enumeration
      |        +--ro Interface             string
      |        +--ro SourceRouter?         types:IPv6Address
      |        +--ro PreferredRouteFlag?   enumeration
      |        +--ro Prefix?               types:IPv6Prefix
      |        +--ro RouteLifetime?        yang:date-and-time
      +--rw NeighborDiscovery
      |  +--rw Enable?             boolean
      |  +--rw InterfaceSetting* [Interface]
      |     +--rw Enable?                    boolean
      |     +--ro Status?                    enumeration
      |     +--rw Interface                  string
      |     +--rw RetransTimer?              uint32
      |     +--rw RtrSolicitationInterval?   uint32
      |     +--rw MaxRtrSolicitations?       uint32
      |     +--rw NUDEnable?                 boolean
      |     +--rw RSEnable?                  boolean
      +--rw RouterAdvertisement
      |  +--rw Enable?             boolean
      |  +--rw InterfaceSetting* [Interface]
      |     +--rw Enable?                   boolean
      |     +--ro Status?                   enumeration
      |     +--rw Interface                 string
      |     +--rw ManualPrefixes?           string
      |     +--ro Prefixes?                 string
      |     +--rw MaxRtrAdvInterval?        uint32
      |     +--rw MinRtrAdvInterval?        uint32
      |     +--rw AdvDefaultLifetime?       uint32
      |     +--rw AdvManagedFlag?           boolean
      |     +--rw AdvOtherConfigFlag?       boolean
      |     +--rw AdvMobileAgentFlag?       boolean
      |     +--rw AdvPreferredRouterFlag?   enumeration
      |     +--rw AdvNDProxyFlag?           boolean
      |     +--rw AdvLinkMTU?               uint32
      |     +--rw AdvReachableTime?         uint32
      |     +--rw AdvRetransTimer?          uint32
      |     +--rw AdvCurHopLimit?           uint32
      |     +--rw Option* [Tag]
      |        +--rw Enable?   boolean
      |        +--rw Tag       uint32
      |        +--rw Value?    yang:hex-string
      +--rw IPv6rd
      |  +--rw Enable?             boolean
      |  +--rw InterfaceSetting* [Alias]
      |     +--rw Enable?                     boolean
      |     +--ro Status?                     enumeration
      |     +--rw BorderRelayIPv4Addresses?   types:IPv4Address
      |     +--rw AllTrafficToBorderRelay?    boolean
      |     +--rw SPIPv6Prefix?               types:IPv6Prefix
      |     +--rw IPv4MaskLength?             uint32
      |     +--rw AddressSource?              string
      |     +--ro TunnelInterface?            string
      |     +--ro TunneledInterface?          string
      +--rw DSLite
      |  +--rw Enable?             boolean
      |  +--rw InterfaceSetting* [Alias]
      |     +--rw Enable?                          boolean
      |     +--ro Status?                          enumeration
      |     +--rw EndpointAssignmentPrecedence?    enumeration
      |     +--rw EndpointAddressTypePrecedence?   enumeration
      |     +--ro EndpointAddressInUse?            types:IPv6Address
      |     +--rw EndpointName?                    string
      |     +--rw EndpointAddress?                 types:IPv6Address
      |     +--ro Origin?                          enumeration
      |     +--ro TunnelInterface?                 string
      |     +--ro TunneledInterface?               string
      +--rw QoS
      |  +--ro MaxClassificationEntries?           uint32
      |  +--ro MaxAppEntries?                      uint32
      |  +--ro MaxFlowEntries?                     uint32
      |  +--ro MaxPolicerEntries?                  uint32
      |  +--ro MaxQueueEntries?                    uint32
      |  +--ro MaxShaperEntries?                   uint32
      |  +--rw DefaultForwardingPolicy?            uint32
      |  +--rw DefaultTrafficClass?                uint32
      |  +--rw DefaultPolicer?                     string
      |  +--rw DefaultQueue?                       string
      |  +--rw DefaultDSCPMark?                    int32
      |  +--rw DefaultEthernetPriorityMark?        int32
      |  +--rw DefaultInnerEthernetPriorityMark?   int32
      |  +--ro AvailableAppList?                   string
      |  +--rw Classification* [Alias]
      |  |  +--rw Enable?                               boolean
      |  |  +--ro Status?                               enumeration
      |  |  +--rw Order?                                uint32
      |  |  +--rw DHCPType?                             enumeration
      |  |  +--rw Interface?                            string
      |  |  +--rw AllInterfaces?                        boolean
      |  |  +--rw DestIP?                               types:IPAddress
      |  |  +--rw DestMask?                             types:IPPrefix
      |  |  +--rw DestIPExclude?                        boolean
      |  |  +--rw SourceIP?                             types:IPAddress
      |  |  +--rw SourceMask?                           types:IPPrefix
      |  |  +--rw SourceIPExclude?                      boolean
      |  |  +--rw Protocol?                             int32
      |  |  +--rw ProtocolExclude?                      boolean
      |  |  +--rw DestPort?                             int32
      |  |  +--rw DestPortRangeMax?                     int32
      |  |  +--rw DestPortExclude?                      boolean
      |  |  +--rw SourcePort?                           int32
      |  |  +--rw SourcePortRangeMax?                   int32
      |  |  +--rw SourcePortExclude?                    boolean
      |  |  +--rw SourceMACAddress?                     types:MACAddress
      |  |  +--rw SourceMACMask?                        types:MACAddress
      |  |  +--rw SourceMACExclude?                     boolean
      |  |  +--rw DestMACAddress?                       types:MACAddress
      |  |  +--rw DestMACMask?                          types:MACAddress
      |  |  +--rw DestMACExclude?                       boolean
      |  |  +--rw Ethertype?                            int32
      |  |  +--rw EthertypeExclude?                     boolean
      |  |  +--rw SSAP?                                 int32
      |  |  +--rw SSAPExclude?                          boolean
      |  |  +--rw DSAP?                                 int32
      |  |  +--rw DSAPExclude?                          boolean
      |  |  +--rw LLCControl?                           int32
      |  |  +--rw LLCControlExclude?                    boolean
      |  |  +--rw SNAPOUI?                              int32
      |  |  +--rw SNAPOUIExclude?                       boolean
      |  |  +--rw SourceVendorClassID?                  string
      |  |  +--rw SourceVendorClassIDv6?                yang:hex-string
      |  |  +--rw SourceVendorClassIDExclude?           boolean
      |  |  +--rw SourceVendorClassIDMode?              enumeration
      |  |  +--rw DestVendorClassID?                    string
      |  |  +--rw DestVendorClassIDv6?                  yang:hex-string
      |  |  +--rw DestVendorClassIDExclude?             boolean
      |  |  +--rw DestVendorClassIDMode?                enumeration
      |  |  +--rw SourceClientID?                       yang:hex-string
      |  |  +--rw SourceClientIDExclude?                boolean
      |  |  +--rw DestClientID?                         yang:hex-string
      |  |  +--rw DestClientIDExclude?                  boolean
      |  |  +--rw SourceUserClassID?                    yang:hex-string
      |  |  +--rw SourceUserClassIDExclude?             boolean
      |  |  +--rw DestUserClassID?                      yang:hex-string
      |  |  +--rw DestUserClassIDExclude?               boolean
      |  |  +--rw SourceVendorSpecificInfo?             yang:hex-string
      |  |  +--rw SourceVendorSpecificInfoExclude?      boolean
      |  |  +--rw SourceVendorSpecificInfoEnterprise?   uint32
      |  |  +--rw SourceVendorSpecificInfoSubOption?    int32
      |  |  +--rw DestVendorSpecificInfo?               yang:hex-string
      |  |  +--rw DestVendorSpecificInfoExclude?        boolean
      |  |  +--rw DestVendorSpecificInfoEnterprise?     uint32
      |  |  +--rw DestVendorSpecificInfoSubOption?      int32
      |  |  +--rw TCPACK?                               boolean
      |  |  +--rw TCPACKExclude?                        boolean
      |  |  +--rw IPLengthMin?                          uint32
      |  |  +--rw IPLengthMax?                          uint32
      |  |  +--rw IPLengthExclude?                      boolean
      |  |  +--rw DSCPCheck?                            int32
      |  |  +--rw DSCPExclude?                          boolean
      |  |  +--rw DSCPMark?                             int32
      |  |  +--rw EthernetPriorityCheck?                int32
      |  |  +--rw EthernetPriorityExclude?              boolean
      |  |  +--rw EthernetPriorityMark?                 int32
      |  |  +--rw InnerEthernetPriorityCheck?           int32
      |  |  +--rw InnerEthernetPriorityExclude?         boolean
      |  |  +--rw InnerEthernetPriorityMark?            int32
      |  |  +--rw EthernetDEICheck?                     int32
      |  |  +--rw EthernetDEIExclude?                   boolean
      |  |  +--rw VLANIDCheck?                          int32
      |  |  +--rw VLANIDExclude?                        boolean
      |  |  +--rw OutOfBandInfo?                        int32
      |  |  +--rw ForwardingPolicy?                     uint32
      |  |  +--rw TrafficClass?                         int32
      |  |  +--rw Policer?                              string
      |  |  +--rw App?                                  string
      |  +--rw App* [Alias]
      |  |  +--rw Enable?                             boolean
      |  |  +--ro Status?                             enumeration
      |  |  +--rw ProtocolIdentifier?                 string
      |  |  +--rw Name?                               string
      |  |  +--rw DefaultForwardingPolicy?            uint32
      |  |  +--rw DefaultTrafficClass?                uint32
      |  |  +--rw DefaultPolicer?                     string
      |  |  +--rw DefaultDSCPMark?                    int32
      |  |  +--rw DefaultEthernetPriorityMark?        int32
      |  |  +--rw DefaultInnerEthernetPriorityMark?   int32
      |  +--rw Flow* [Alias]
      |  |  +--rw Enable?                      boolean
      |  |  +--ro Status?                      enumeration
      |  |  +--rw Type?                        string
      |  |  +--rw TypeParameters?              string
      |  |  +--rw Name?                        string
      |  |  +--rw App?                         string
      |  |  +--rw ForwardingPolicy?            uint32
      |  |  +--rw TrafficClass?                uint32
      |  |  +--rw Policer?                     string
      |  |  +--rw DSCPMark?                    int32
      |  |  +--rw EthernetPriorityMark?        int32
      |  |  +--rw InnerEthernetPriorityMark?   int32
      |  +--rw Policer* [Alias]
      |  |  +--rw Enable?                              boolean
      |  |  +--ro Status?                              enumeration
      |  |  +--rw CommittedRate?                       uint32
      |  |  +--rw CommittedBurstSize?                  uint32
      |  |  +--rw ExcessBurstSize?                     uint32
      |  |  +--rw PeakRate?                            uint32
      |  |  +--rw PeakBurstSize?                       uint32
      |  |  +--rw MeterType?                           string
      |  |  +--ro PossibleMeterTypes?                  enumeration
      |  |  +--rw ConformingAction?                    string
      |  |  +--rw PartialConformingAction?             string
      |  |  +--rw NonConformingAction?                 string
      |  |  +--ro TotalCountedPackets?                 uint32
      |  |  +--ro TotalCountedBytes?                   uint32
      |  |  +--ro ConformingCountedPackets?            uint32
      |  |  +--ro ConformingCountedBytes?              uint32
      |  |  +--ro PartiallyConformingCountedPackets?   uint32
      |  |  +--ro PartiallyConformingCountedBytes?     uint32
      |  |  +--ro NonConformingCountedPackets?         uint32
      |  |  +--ro NonConformingCountedBytes?           uint32
      |  +--rw Queue* [Alias]
      |  |  +--rw Enable?               boolean
      |  |  +--ro Status?               enumeration
      |  |  +--rw TrafficClasses?       uint32
      |  |  +--rw Interface?            string
      |  |  +--rw AllInterfaces?        boolean
      |  |  +--ro HardwareAssisted?     boolean
      |  |  +--ro BufferLength?         uint32
      |  |  +--rw Weight?               uint32
      |  |  +--rw Precedence?           uint32
      |  |  +--rw REDThreshold?         uint32
      |  |  +--rw REDPercentage?        uint32
      |  |  +--rw DropAlgorithm?        enumeration
      |  |  +--rw SchedulerAlgorithm?   enumeration
      |  |  +--rw ShapingRate?          int32
      |  |  +--rw ShapingBurstSize?     uint32
      |  +--rw QueueStats* [Queue Interface]
      |  |  +--rw Enable?                     boolean
      |  |  +--ro Status?                     enumeration
      |  |  +--rw Queue                       string
      |  |  +--rw Interface                   string
      |  |  +--ro OutputPackets?              uint32
      |  |  +--ro OutputBytes?                uint32
      |  |  +--ro DroppedPackets?             uint32
      |  |  +--ro DroppedBytes?               uint32
      |  |  +--ro QueueOccupancyPackets?      uint32
      |  |  +--ro QueueOccupancyPercentage?   uint32
      |  +--rw Shaper* [Interface]
      |     +--rw Enable?             boolean
      |     +--ro Status?             enumeration
      |     +--rw Interface           string
      |     +--rw ShapingRate?        int32
      |     +--rw ShapingBurstSize?   uint32
      +--rw LANConfigSecurity
      |  +--rw ConfigPassword?   string
      +--ro Hosts
      |  +--ro Host* [PhysAddress]
      |     +--ro PhysAddress           string
      |     +--ro IPAddress?            types:IPAddress
      |     x--ro AddressSource?        enumeration
      |     +--ro DHCPClient?           string
      |     x--ro LeaseTimeRemaining?   int32
      |     +--ro AssociatedDevice?     string
      |     +--ro Layer1Interface?      string
      |     +--ro Layer3Interface?      string
      |     x--ro VendorClassID?        string
      |     x--ro ClientID?             yang:hex-string
      |     x--ro UserClassID?          yang:hex-string
      |     +--ro HostName?             string
      |     +--ro Active?               boolean
      |     +--ro ActiveLastChange?     yang:date-and-time
      |     +--ro IPv4Address* [IPAddress]
      |     |  +--ro IPAddress    types:IPv4Address
      |     +--ro IPv6Address* [IPAddress]
      |        +--ro IPAddress    types:IPv6Address
      +--rw DNS
      |  +--ro SupportedRecordTypes?   enumeration
      |  +--rw Client
      |  |  +--rw Enable?   boolean
      |  |  +--ro Status?   enumeration
      |  |  +--rw Server* [DNSServer]
      |  |     +--rw Enable?      boolean
      |  |     +--ro Status?      enumeration
      |  |     +--rw DNSServer    types:IPAddress
      |  |     +--rw Interface?   string
      |  |     +--ro Type?        enumeration
      |  +--rw Relay
      |  |  +--rw Enable?       boolean
      |  |  +--ro Status?       enumeration
      |  |  +--rw Forwarding* [DNSServer]
      |  |     +--rw Enable?      boolean
      |  |     +--ro Status?      enumeration
      |  |     +--rw DNSServer    types:IPAddress
      |  |     +--rw Interface?   string
      |  |     +--ro Type?        enumeration
      |  +--rw Diagnostics
      |  |  +--rw NSLookupDiagnostics
      |  |     +--rw DiagnosticsState?      enumeration
      |  |     +--rw Interface?             string
      |  |     +--rw HostName?              string
      |  |     +--rw DNSServer?             string
      |  |     +--rw Timeout?               uint32
      |  |     +--rw NumberOfRepetitions?   uint32
      |  |     +--ro SuccessCount?          uint32
      |  |     +--ro Result*
      |  |        +--ro Status?             enumeration
      |  |        +--ro AnswerType?         enumeration
      |  |        +--ro HostNameReturned?   string
      |  |        +--ro IPAddresses?        types:IPAddress
      |  |        +--ro DNSServerIP?        types:IPAddress
      |  |        +--ro ResponseTime?       uint32
      |  +--rw SD
      |     +--rw Enable?    boolean
      |     +--ro Service* [InstanceName ApplicationProtocol TransportProtocol Domain]
      |        +--ro InstanceName           string
      |        +--ro ApplicationProtocol    string
      |        +--ro TransportProtocol      enumeration
      |        +--ro Domain                 string
      |        +--ro Port?                  uint32
      |        +--ro Target?                string
      |        +--ro Status?                enumeration
      |        +--ro LastUpdate?            yang:date-and-time
      |        +--ro Host?                  string
      |        +--ro TimeToLive?            uint32
      |        +--ro Priority?              uint32
      |        +--ro Weight?                uint32
      |        +--ro TextRecord*
      |           +--ro Key?     string
      |           +--ro Value?   string
      +--rw NAT
      |  +--rw InterfaceSetting* [Interface]
      |  |  +--rw Enable?      boolean
      |  |  +--ro Status?      enumeration
      |  |  +--rw Interface    string
      |  +--rw PortMapping* [RemoteHost ExternalPort Protocol]
      |     +--rw Enable?                 boolean
      |     +--ro Status?                 enumeration
      |     +--rw Interface?              string
      |     +--rw AllInterfaces?          boolean
      |     +--rw LeaseDuration?          uint32
      |     +--rw RemoteHost              string
      |     +--rw ExternalPort            uint32
      |     +--rw ExternalPortEndRange?   uint32
      |     +--rw InternalPort?           uint32
      |     +--rw Protocol                enumeration
      |     +--rw InternalClient?         string
      |     +--rw Description?            string
      +--rw PCP
      |  +--ro SupportedVersions?   uint32
      |  +--rw PreferredVersion?    uint32
      |  +--ro OptionList?          uint32
      |  +--rw Client* [WANInterface]
      |     +--rw Enable?             boolean
      |     +--ro WANInterface        string
      |     +--ro Status?             enumeration
      |     +--rw MAPEnable?          boolean
      |     +--rw PEEREnable?         boolean
      |     +--rw ANNOUNCEEnable?     boolean
      |     +--rw THIRDPARTYEnable?   boolean
      |     +--ro THIRDPARTYStatus?   enumeration
      |     +--rw FILTEREnable?       boolean
      |     +--rw PCPProxy
      |     |  +--rw Enable?           boolean
      |     |  +--ro HighestVersion?   uint32
      |     |  +--ro Status?           enumeration
      |     +--rw UPnPIWF
      |     |  +--rw Enable?   boolean
      |     |  +--ro Status?   enumeration
      |     +--rw Server* [ServerNameOrAddress]
      |        +--rw Enable?                      boolean
      |        +--ro Status?                      enumeration
      |        +--ro Origin?                      enumeration
      |        +--rw ServerNameOrAddress          string
      |        +--ro ServerAddressInUse?          types:IPAddress
      |        +--ro AdditionalServerAddresses?   types:IPAddress
      |        +--ro ExternalIPAddress?           types:IPAddress
      |        +--ro CurrentVersion?              uint32
      |        +--rw MaximumFilters?              uint32
      |        +--rw PortQuota?                   uint32
      |        +--rw PreferredLifetime?           uint32
      |        +--ro Capabilities?                enumeration
      |        +--rw InboundMapping* [InternalPort ProtocolNumber ThirdPartyAddress]
      |        |  +--rw Enable?                          boolean
      |        |  +--ro Status?                          enumeration
      |        |  +--ro ErrorCode?                       uint32
      |        |  +--ro Origin?                          enumeration
      |        |  +--rw Lifetime?                        uint32
      |        |  +--rw SuggestedExternalIPAddress?      types:IPAddress
      |        |  +--rw SuggestedExternalPort?           uint32
      |        |  +--rw SuggestedExternalPortEndRange?   uint32
      |        |  +--rw InternalPort                     uint32
      |        |  +--rw ProtocolNumber                   int32
      |        |  +--rw ThirdPartyAddress                types:IPAddress
      |        |  +--rw Description?                     string
      |        |  +--ro AssignedExternalIPAddress?       types:IPAddress
      |        |  +--ro AssignedExternalPort?            uint32
      |        |  +--ro AssignedExternalPortEndRange?    uint32
      |        |  +--rw Filter* [Alias]
      |        |     +--rw RemoteHostIPAddress?   types:IPAddress
      |        |     +--rw PrefixLength?          uint32
      |        |     +--rw RemotePort?            uint32
      |        |     +--ro RemotePortEndRange?    uint32
      |        +--rw OutboundMapping* [InternalPort ProtocolNumber ThirdPartyAddress RemoteHostIPAddress RemotePort]
      |           +--rw Enable?                       boolean
      |           +--ro Status?                       enumeration
      |           +--ro ErrorCode?                    uint32
      |           +--ro Origin?                       enumeration
      |           +--rw Lifetime?                     uint32
      |           +--rw SuggestedExternalIPAddress?   types:IPAddress
      |           +--rw SuggestedExternalPort?        uint32
      |           +--rw RemoteHostIPAddress           types:IPAddress
      |           +--rw InternalPort                  uint32
      |           +--rw RemotePort                    uint32
      |           +--rw ProtocolNumber                int32
      |           +--rw ThirdPartyAddress             types:IPAddress
      |           +--rw Description?                  string
      |           +--ro AssignedExternalIPAddress?    types:IPAddress
      |           +--ro AssignedExternalPort?         uint32
      +--rw DHCPv4
      |  +--rw Client* [Interface]
      |  |  +--rw Enable?                boolean
      |  |  +--rw Interface              string
      |  |  +--ro Status?                enumeration
      |  |  +--ro DHCPStatus?            enumeration
      |  |  +--rw Renew?                 boolean
      |  |  +--ro IPAddress?             types:IPv4Address
      |  |  +--ro SubnetMask?            types:IPv4Address
      |  |  +--ro IPRouters?             types:IPv4Address
      |  |  +--ro DNSServers?            types:IPv4Address
      |  |  +--ro LeaseTimeRemaining?    int32
      |  |  +--ro DHCPServer?            types:IPv4Address
      |  |  +--rw PassthroughEnable?     boolean
      |  |  +--rw PassthroughDHCPPool?   string
      |  |  +--rw SentOption* [Tag]
      |  |  |  +--rw Enable?   boolean
      |  |  |  +--rw Tag       uint32
      |  |  |  +--rw Value?    yang:hex-string
      |  |  +--rw ReqOption* [Tag]
      |  |     +--rw Enable?   boolean
      |  |     +--rw Order?    uint32
      |  |     +--rw Tag       uint32
      |  |     +--ro Value?    yang:hex-string
      |  +--rw Server
      |  |  +--rw Enable?   boolean
      |  |  +--rw Pool* [Alias]
      |  |     +--rw Enable?                 boolean
      |  |     +--ro Status?                 enumeration
      |  |     +--rw Order?                  uint32
      |  |     +--rw Interface?              string
      |  |     +--rw VendorClassID?          string
      |  |     +--rw VendorClassIDExclude?   boolean
      |  |     +--rw VendorClassIDMode?      enumeration
      |  |     +--rw ClientID?               yang:hex-string
      |  |     +--rw ClientIDExclude?        boolean
      |  |     +--rw UserClassID?            yang:hex-string
      |  |     +--rw UserClassIDExclude?     boolean
      |  |     +--rw Chaddr?                 types:MACAddress
      |  |     +--rw ChaddrMask?             types:MACAddress
      |  |     +--rw ChaddrExclude?          boolean
      |  |     +--rw MinAddress?             types:IPv4Address
      |  |     +--rw MaxAddress?             types:IPv4Address
      |  |     +--rw ReservedAddresses?      types:IPv4Address
      |  |     +--rw SubnetMask?             types:IPv4Address
      |  |     +--rw DNSServers?             types:IPv4Address
      |  |     +--rw DomainName?             string
      |  |     +--rw IPRouters?              types:IPv4Address
      |  |     +--rw LeaseTime?              int32
      |  |     +--rw StaticAddress* [Chaddr]
      |  |     |  +--rw Enable?   boolean
      |  |     |  +--rw Chaddr    types:MACAddress
      |  |     |  +--rw Yiaddr?   types:IPv4Address
      |  |     +--rw Option* [Tag]
      |  |     |  +--rw Enable?   boolean
      |  |     |  +--rw Tag       uint32
      |  |     |  +--rw Value?    yang:hex-string
      |  |     +--ro Client* [Chaddr]
      |  |        +--ro Chaddr         types:MACAddress
      |  |        +--ro Active?        boolean
      |  |        +--ro IPv4Address* [IPAddress]
      |  |        |  +--ro IPAddress             types:IPv4Address
      |  |        |  +--ro LeaseTimeRemaining?   yang:date-and-time
      |  |        +--ro Option*
      |  |           +--ro Tag?     uint32
      |  |           +--ro Value?   yang:hex-string
      |  +--rw Relay
      |     +--rw Enable?       boolean
      |     +--ro Status?       enumeration
      |     +--rw Forwarding* [Alias]
      |        +--rw Enable?                 boolean
      |        +--ro Status?                 enumeration
      |        +--rw Order?                  uint32
      |        +--rw Interface?              string
      |        +--rw VendorClassID?          string
      |        +--rw VendorClassIDExclude?   boolean
      |        +--rw VendorClassIDMode?      enumeration
      |        +--rw ClientID?               yang:hex-string
      |        +--rw ClientIDExclude?        boolean
      |        +--rw UserClassID?            yang:hex-string
      |        +--rw UserClassIDExclude?     boolean
      |        +--rw Chaddr?                 types:MACAddress
      |        +--rw ChaddrMask?             types:MACAddress
      |        +--rw ChaddrExclude?          boolean
      |        +--rw LocallyServed?          boolean
      |        +--rw DHCPServerIPAddress?    types:IPv4Address
      +--rw DHCPv6
      |  +--rw Client* [Interface]
      |  |  +--rw Enable?             boolean
      |  |  +--rw Interface           string
      |  |  +--ro Status?             enumeration
      |  |  +--ro DUID?               yang:hex-string
      |  |  +--rw RequestAddresses?   boolean
      |  |  +--rw RequestPrefixes?    boolean
      |  |  +--rw RapidCommit?        boolean
      |  |  +--rw Renew?              boolean
      |  |  +--rw SuggestedT1?        int32
      |  |  +--rw SuggestedT2?        int32
      |  |  +--ro SupportedOptions?   uint32
      |  |  +--rw RequestedOptions?   uint32
      |  |  +--ro Server* [SourceAddress]
      |  |  |  +--ro SourceAddress             types:IPv6Address
      |  |  |  +--ro DUID?                     yang:hex-string
      |  |  |  +--ro InformationRefreshTime?   yang:date-and-time
      |  |  +--rw SentOption* [Tag]
      |  |  |  +--rw Enable?   boolean
      |  |  |  +--rw Tag       uint32
      |  |  |  +--rw Value?    yang:hex-string
      |  |  +--ro ReceivedOption*
      |  |     +--ro Tag?      uint32
      |  |     +--ro Value?    yang:hex-string
      |  |     +--ro Server?   string
      |  +--rw Server
      |     +--rw Enable?   boolean
      |     +--rw Pool* [Order]
      |        +--rw Enable?                 boolean
      |        +--ro Status?                 enumeration
      |        +--rw Order                   uint32
      |        +--rw Interface?              string
      |        +--rw DUID?                   yang:hex-string
      |        +--rw DUIDExclude?            boolean
      |        +--rw VendorClassID?          yang:hex-string
      |        +--rw VendorClassIDExclude?   boolean
      |        +--rw UserClassID?            yang:hex-string
      |        +--rw UserClassIDExclude?     boolean
      |        +--rw SourceAddress?          types:IPv6Address
      |        +--rw SourceAddressMask?      types:IPv6Address
      |        +--rw SourceAddressExclude?   boolean
      |        +--rw IANAEnable?             boolean
      |        +--rw IANAManualPrefixes?     string
      |        +--ro IANAPrefixes?           string
      |        +--rw IAPDEnable?             boolean
      |        +--rw IAPDManualPrefixes?     string
      |        +--ro IAPDPrefixes?           string
      |        +--rw IAPDAddLength?          uint32
      |        +--ro Client* [SourceAddress]
      |        |  +--ro SourceAddress    types:IPv6Address
      |        |  +--ro Active?          boolean
      |        |  +--ro IPv6Address* [IPAddress]
      |        |  |  +--ro IPAddress            types:IPv6Address
      |        |  |  +--ro PreferredLifetime?   yang:date-and-time
      |        |  |  +--ro ValidLifetime?       yang:date-and-time
      |        |  +--ro IPv6Prefix* [Prefix]
      |        |  |  +--ro Prefix               types:IPv6Prefix
      |        |  |  +--ro PreferredLifetime?   yang:date-and-time
      |        |  |  +--ro ValidLifetime?       yang:date-and-time
      |        |  +--ro Option*
      |        |     +--ro Tag?     uint32
      |        |     +--ro Value?   yang:hex-string
      |        +--rw Option* [Tag]
      |           +--rw Enable?              boolean
      |           +--rw Tag                  uint32
      |           +--rw Value?               yang:hex-string
      |           +--rw PassthroughClient?   string
      +--rw IEEE8021x
      |  +--rw Supplicant* [Interface]
      |     +--rw Enable?                        boolean
      |     +--ro Status?                        enumeration
      |     +--rw Interface                      string
      |     +--ro PAEState?                      enumeration
      |     +--rw EAPIdentity?                   string
      |     +--rw MaxStart?                      uint32
      |     +--rw StartPeriod?                   uint32
      |     +--rw HeldPeriod?                    uint32
      |     +--rw AuthPeriod?                    uint32
      |     +--ro AuthenticationCapabilities?    enumeration
      |     +--rw StartFailurePolicy?            enumeration
      |     +--rw AuthenticationSuccessPolicy?   enumeration
      |     +--rw Reset?                         boolean
      |     +--rw Disconnect?                    boolean
      |     +--ro Stats
      |     |  +--ro ReceivedFrames?                uint32
      |     |  +--ro TransmittedFrames?             uint32
      |     |  +--ro TransmittedStartFrames?        uint32
      |     |  +--ro TransmittedLogoffFrames?       uint32
      |     |  +--ro TransmittedResponseIdFrames?   uint32
      |     |  +--ro TransmittedResponseFrames?     uint32
      |     |  +--ro ReceivedRequestIdFrames?       uint32
      |     |  +--ro ReceivedRequestFrames?         uint32
      |     |  +--ro ReceivedInvalidFrames?         uint32
      |     |  +--ro ReceivedLengthErrorFrames?     uint32
      |     |  +--ro LastFrameVersion?              uint32
      |     |  +--ro LastFrameSourceMACAddress?     types:MACAddress
      |     +--rw EAPMD5
      |     |  +--rw Enable?         boolean
      |     |  +--rw SharedSecret?   string
      |     +--rw EAPTLS
      |        +--rw Enable?                       boolean
      |        +--rw MutualAuthenticationEnable?   boolean
      +--rw Users
      |  +--rw User* [Username]
      |     +--rw Enable?                boolean
      |     +--rw RemoteAccessCapable?   boolean
      |     +--rw Username               string
      |     +--rw Password?              string
      |     +--rw Language?              string
      +--rw SmartCardReaders
      |  +--rw SmartCardReader* [Name]
      |     +--rw Enable?                         boolean
      |     +--ro Status?                         enumeration
      |     +--ro Name                            string
      |     +--rw Reset?                          boolean
      |     +--ro ResetTime?                      yang:date-and-time
      |     +--ro DecryptionFailedCounter?        uint32
      |     +--ro DecryptionFailedNoKeyCounter?   uint32
      |     +--ro SmartCard
      |        +--ro Status?         enumeration
      |        +--ro Type?           enumeration
      |        +--ro Application?    enumeration
      |        +--ro SerialNumber?   string
      |        +--ro ATR?            string
      +--rw UPnP
      |  +--rw Device
      |  |  +--rw Enable?                    boolean
      |  |  +--rw UPnPMediaServer?           boolean
      |  |  +--rw UPnPMediaRenderer?         boolean
      |  |  +--rw UPnPWLANAccessPoint?       boolean
      |  |  +--rw UPnPQoSDevice?             boolean
      |  |  +--rw UPnPQoSPolicyHolder?       boolean
      |  |  +--rw UPnPIGD?                   boolean
      |  |  +--rw UPnPDMBasicMgmt?           boolean
      |  |  +--rw UPnPDMConfigurationMgmt?   boolean
      |  |  +--rw UPnPDMSoftwareMgmt?        boolean
      |  |  +--ro Capabilities
      |  |     +--ro UPnPArchitecture?           uint32
      |  |     +--ro UPnPArchitectureMinorVer?   uint32
      |  |     +--ro UPnPMediaServer?            uint32
      |  |     +--ro UPnPMediaRenderer?          uint32
      |  |     +--ro UPnPWLANAccessPoint?        uint32
      |  |     +--ro UPnPBasicDevice?            uint32
      |  |     +--ro UPnPQoSDevice?              uint32
      |  |     +--ro UPnPQoSPolicyHolder?        uint32
      |  |     +--ro UPnPIGD?                    uint32
      |  |     +--ro UPnPDMBasicMgmt?            uint32
      |  |     +--ro UPnPDMConfigurationMgmt?    uint32
      |  |     +--ro UPnPDMSoftwareMgmt?         uint32
      |  +--ro Discovery
      |  |  +--ro RootDevice* [UUID]
      |  |  |  +--ro Status?       enumeration
      |  |  |  +--ro UUID          string
      |  |  |  +--ro USN?          string
      |  |  |  +--ro LeaseTime?    uint32
      |  |  |  +--ro Location?     string
      |  |  |  +--ro Server?       string
      |  |  |  +--ro Host?         string
      |  |  |  +--ro LastUpdate?   yang:date-and-time
      |  |  +--ro Device* [UUID]
      |  |  |  +--ro Status?       enumeration
      |  |  |  +--ro UUID          string
      |  |  |  +--ro USN?          string
      |  |  |  +--ro LeaseTime?    uint32
      |  |  |  +--ro Location?     string
      |  |  |  +--ro Server?       string
      |  |  |  +--ro Host?         string
      |  |  |  +--ro LastUpdate?   yang:date-and-time
      |  |  +--ro Service* [USN]
      |  |     +--ro Status?         enumeration
      |  |     +--ro USN             string
      |  |     +--ro LeaseTime?      uint32
      |  |     +--ro Location?       string
      |  |     +--ro Server?         string
      |  |     +--ro Host?           string
      |  |     +--ro LastUpdate?     yang:date-and-time
      |  |     +--ro ParentDevice?   string
      |  +--ro Description
      |     +--ro DeviceDescription* [URLBase]
      |     |  +--ro URLBase        string
      |     |  +--ro SpecVersion?   string
      |     |  +--ro Host?          string
      |     +--ro DeviceInstance* [UDN]
      |     |  +--ro UDN                 yang:uuid
      |     |  +--ro ParentDevice?       string
      |     |  +--ro DiscoveryDevice?    string
      |     |  +--ro DeviceType?         string
      |     |  +--ro FriendlyName?       string
      |     |  +--ro DeviceCategory?     string
      |     |  +--ro Manufacturer?       string
      |     |  +--ro ManufacturerOUI?    string
      |     |  +--ro ManufacturerURL?    string
      |     |  +--ro ModelDescription?   string
      |     |  +--ro ModelName?          string
      |     |  +--ro ModelNumber?        string
      |     |  +--ro ModelURL?           string
      |     |  +--ro SerialNumber?       string
      |     |  +--ro UPC?                string
      |     |  +--ro PresentationURL?    string
      |     +--ro ServiceInstance* [ParentDevice ServiceId]
      |        +--ro ParentDevice        string
      |        +--ro ServiceId           string
      |        +--ro ServiceDiscovery?   string
      |        +--ro ServiceType?        string
      |        +--ro SCPDURL?            string
      |        +--ro ControlURL?         string
      |        +--ro EventSubURL?        string
      +--rw ETSIM2M
      |  +--rw SCL* [Alias]
      |     +--rw Enable?                      boolean
      |     +--rw AnnouncedToSCLList?          string
      |     +--rw Discovery
      |     |  +--rw MaxNumberOfDiscovRecords?   uint32
      |     |  +--rw MaxSizeOfDiscovAnswer?      uint32
      |     +--rw Reregistration
      |     |  +--rw RegTargetNSCLList?       string
      |     |  +--rw RegSearchStrings?        string
      |     |  +--rw RegAccessRightID?        string
      |     |  +--rw RegExpirationDuration?   int32
      |     |  +--rw Reregistration?          boolean
      |     |  +--ro ActionStatus
      |     |     +--ro Progress?      uint32
      |     |     +--ro FinalStatus?   enumeration
      |     +--rw SAFPolicySet* [Alias]
      |     |  +--rw Enable?        boolean
      |     |  +--rw PolicyScope?   string
      |     |  +--rw ANPPolicy* [ANName]
      |     |  |  +--rw Enable?            boolean
      |     |  |  +--rw ANName             string
      |     |  |  +--rw BlockPeriod* [FailedAttempts]
      |     |  |  |  +--rw Enable?           boolean
      |     |  |  |  +--rw FailedAttempts    uint32
      |     |  |  |  +--rw BlockDuration?    int32
      |     |  |  +--rw RequestCategory* [RCAT]
      |     |  |     +--rw Enable?     boolean
      |     |  |     +--rw RCAT        string
      |     |  |     +--rw Schedule* [Alias]
      |     |  |        +--rw Enable?        boolean
      |     |  |        +--rw Schedules?     string
      |     |  |        +--rw AbsTimeSpan* [Alias]
      |     |  |           +--rw Enable?      boolean
      |     |  |           +--rw StartTime?   yang:date-and-time
      |     |  |           +--rw EndTime?     yang:date-and-time
      |     |  +--rw M2MSPPolicy
      |     |     +--rw DefaultRCATValue?   string
      |     |     +--rw RequestCategory* [RCAT]
      |     |        +--rw Enable?           boolean
      |     |        +--rw RCAT              string
      |     |        +--rw TolerableDelay?   int32
      |     |        +--rw Thresh?           uint32
      |     |        +--rw Mem?              string
      |     |        +--rw RankedANList?     string
      |     +--ro AreaNwkInstance* [ID]
      |     |  +--ro ID               string
      |     |  +--ro AreaNwkType?     string
      |     |  +--ro ListOfDevices?   string
      |     |  +--ro Property*
      |     |     +--ro Name?    string
      |     |     +--ro Value?   string
      |     +--rw AreaNwkDeviceInfoInstance*
      |        +--ro AreaNwkInstance?            string
      |        +--ro Host?                       string
      |        +--ro ListOfDeviceNeighbors?      string
      |        +--ro ListOfDeviceApplications?   string
      |        +--rw SleepInterval?              uint32
      |        +--rw SleepDuration?              uint32
      |        +--ro Status?                     enumeration
      |        +--ro Active?                     boolean
      |        +--ro Property*
      |           +--ro Name?    string
      |           +--ro Value?   string
      +--ro DLNA
      |  +--ro Capabilities
      |     +--ro HNDDeviceClass?             string
      |     +--ro DeviceCapability?           string
      |     +--ro HIDDeviceClass?             string
      |     +--ro ImageClassProfileID?        string
      |     +--ro AudioClassProfileID?        string
      |     +--ro AVClassProfileID?           string
      |     +--ro MediaCollectionProfileID?   string
      |     +--ro PrinterClassProfileID?      string
      +--rw SelfTestDiagnostics
      |  +--rw DiagnosticsState?   enumeration
      |  +--ro Results?            string
      +--rw Firewall
      |  +--rw Enable?          boolean
      |  +--rw Config?          enumeration
      |  +--rw AdvancedLevel?   string
      |  +--ro Type?            enumeration
      |  +--ro Version?         string
      |  +--ro LastChange?      yang:date-and-time
      |  +--rw Level* [Alias]
      |  |  +--rw Name?                 string
      |  |  +--rw Description?          string
      |  |  +--rw Order?                uint32
      |  |  +--ro Chain?                string
      |  |  +--rw PortMappingEnabled?   boolean
      |  |  +--rw DefaultPolicy?        enumeration
      |  |  +--rw DefaultLogPolicy?     boolean
      |  +--rw Chain* [Alias]
      |     +--rw Enable?    boolean
      |     +--rw Name?      string
      |     +--ro Creator?   enumeration
      |     +--rw Rule* [Alias]
      |        +--rw Enable?                   boolean
      |        +--ro Status?                   enumeration
      |        +--rw Order?                    uint32
      |        +--rw Description?              string
      |        +--rw Target?                   enumeration
      |        +--rw TargetChain?              string
      |        +--rw Log?                      boolean
      |        +--ro CreationDate?             yang:date-and-time
      |        +--rw ExpiryDate?               yang:date-and-time
      |        +--rw SourceInterface?          string
      |        +--rw SourceInterfaceExclude?   boolean
      |        +--rw SourceAllInterfaces?      boolean
      |        +--rw DestInterface?            string
      |        +--rw DestInterfaceExclude?     boolean
      |        +--rw DestAllInterfaces?        boolean
      |        +--rw IPVersion?                int32
      |        +--rw DestIP?                   types:IPAddress
      |        +--rw DestMask?                 types:IPPrefix
      |        +--rw DestIPExclude?            boolean
      |        +--rw SourceIP?                 types:IPAddress
      |        +--rw SourceMask?               types:IPPrefix
      |        +--rw SourceIPExclude?          boolean
      |        +--rw Protocol?                 int32
      |        +--rw ProtocolExclude?          boolean
      |        +--rw DestPort?                 int32
      |        +--rw DestPortRangeMax?         int32
      |        +--rw DestPortExclude?          boolean
      |        +--rw SourcePort?               int32
      |        +--rw SourcePortRangeMax?       int32
      |        +--rw SourcePortExclude?        boolean
      |        +--rw DSCP?                     int32
      |        +--rw DSCPExclude?              boolean
      +--rw PeriodicStatistics
      |  +--ro MinSampleInterval?   uint32
      |  +--ro MaxReportSamples?    uint32
      |  +--rw SampleSet* [Name]
      |     +--rw Enable?            boolean
      |     +--ro Status?            enumeration
      |     +--rw Name               string
      |     +--rw SampleInterval?    uint32
      |     +--rw ReportSamples?     uint32
      |     +--rw TimeReference?     yang:date-and-time
      |     +--rw FetchSamples?      uint32
      |     +--rw ForceSample?       boolean
      |     +--ro ReportStartTime?   yang:date-and-time
      |     +--ro ReportEndTime?     yang:date-and-time
      |     +--ro SampleSeconds?     uint32
      |     +--rw Parameter* [Reference]
      |        +--rw Enable?            boolean
      |        +--rw Reference          string
      |        +--rw SampleMode?        enumeration
      |        +--rw CalculationMode?   enumeration
      |        +--rw LowThreshold?      int32
      |        +--rw HighThreshold?     int32
      |        +--ro SampleSeconds?     uint32
      |        +--ro SuspectData?       uint32
      |        +--ro Values?            string
      |        +--ro Failures?          uint32
      +--rw SoftwareModules
      |  +--rw ExecEnv* [Alias]
      |  |  +--rw Enable?                         boolean
      |  |  +--ro Status?                         enumeration
      |  |  +--rw Reset?                          boolean
      |  |  +--ro Name?                           string
      |  |  +--ro Type?                           string
      |  |  +--rw InitialRunLevel?                uint32
      |  |  +--rw RequestedRunLevel?              int32
      |  |  +--ro CurrentRunLevel?                int32
      |  |  +--rw InitialExecutionUnitRunLevel?   int32
      |  |  +--ro Vendor?                         string
      |  |  +--ro Version?                        string
      |  |  +--ro ParentExecEnv?                  string
      |  |  +--ro AllocatedDiskSpace?             int32
      |  |  +--ro AvailableDiskSpace?             int32
      |  |  +--ro AllocatedMemory?                int32
      |  |  +--ro AvailableMemory?                int32
      |  |  +--ro ActiveExecutionUnits?           string
      |  |  +--ro ProcessorRefList?               string
      |  +--ro DeploymentUnit* [UUID Version ExecutionEnvRef]
      |  |  +--ro UUID                 string
      |  |  +--ro DUID?                string
      |  |  +--ro Name?                string
      |  |  +--ro Status?              enumeration
      |  |  +--ro Resolved?            boolean
      |  |  +--ro URL?                 string
      |  |  +--ro Description?         string
      |  |  +--ro Vendor?              string
      |  |  +--ro Version              string
      |  |  +--ro VendorLogList?       string
      |  |  +--ro VendorConfigList?    string
      |  |  +--ro ExecutionUnitList?   string
      |  |  +--ro ExecutionEnvRef      string
      |  +--rw ExecutionUnit* [EUID]
      |     +--ro EUID                      string
      |     +--ro Name?                     string
      |     +--ro ExecEnvLabel?             string
      |     +--ro Status?                   enumeration
      |     +--rw RequestedState?           enumeration
      |     +--ro ExecutionFaultCode?       enumeration
      |     +--ro ExecutionFaultMessage?    string
      |     +--rw AutoStart?                boolean
      |     +--rw RunLevel?                 uint32
      |     +--ro Vendor?                   string
      |     +--ro Version?                  string
      |     +--ro Description?              string
      |     +--ro DiskSpaceInUse?           int32
      |     +--ro MemoryInUse?              int32
      |     +--ro References?               string
      |     +--ro AssociatedProcessList?    string
      |     +--ro VendorLogList?            string
      |     +--ro VendorConfigList?         string
      |     +--ro SupportedDataModelList?   string
      |     +--ro ExecutionEnvRef?          string
      |     +--ro Extensions
      +--rw FaultMgmt
      |  +--ro MaxCurrentAlarmEntries?   uint32
      |  +--rw SupportedAlarm* [EventType ProbableCause SpecificProblem PerceivedSeverity]
      |  |  +--ro EventType             string
      |  |  +--ro ProbableCause         string
      |  |  +--ro SpecificProblem       string
      |  |  +--ro PerceivedSeverity     enumeration
      |  |  +--rw ReportingMechanism?   enumeration
      |  +--ro CurrentAlarm* [AlarmIdentifier]
      |  |  +--ro AlarmIdentifier          string
      |  |  +--ro AlarmRaisedTime?         yang:date-and-time
      |  |  +--ro AlarmChangedTime?        yang:date-and-time
      |  |  +--ro ManagedObjectInstance?   string
      |  |  +--ro EventType?               string
      |  |  +--ro ProbableCause?           string
      |  |  +--ro SpecificProblem?         string
      |  |  +--ro PerceivedSeverity?       enumeration
      |  |  +--ro AdditionalText?          string
      |  |  +--ro AdditionalInformation?   string
      |  +--ro HistoryEvent* [EventTime AlarmIdentifier]
      |  |  +--ro EventTime                yang:date-and-time
      |  |  +--ro AlarmIdentifier          string
      |  |  +--ro NotificationType?        enumeration
      |  |  +--ro ManagedObjectInstance?   string
      |  |  +--ro EventType?               string
      |  |  +--ro ProbableCause?           string
      |  |  +--ro SpecificProblem?         string
      |  |  +--ro PerceivedSeverity?       enumeration
      |  |  +--ro AdditionalText?          string
      |  |  +--ro AdditionalInformation?   string
      |  +--ro ExpeditedEvent* [AlarmIdentifier]
      |  |  +--ro EventTime?               yang:date-and-time
      |  |  +--ro AlarmIdentifier          string
      |  |  +--ro NotificationType?        enumeration
      |  |  +--ro ManagedObjectInstance?   string
      |  |  +--ro EventType?               string
      |  |  +--ro ProbableCause?           string
      |  |  +--ro SpecificProblem?         string
      |  |  +--ro PerceivedSeverity?       enumeration
      |  |  +--ro AdditionalText?          string
      |  |  +--ro AdditionalInformation?   string
      |  +--ro QueuedEvent* [AlarmIdentifier]
      |     +--ro EventTime?               yang:date-and-time
      |     +--ro AlarmIdentifier          string
      |     +--ro NotificationType?        enumeration
      |     +--ro ManagedObjectInstance?   string
      |     +--ro EventType?               string
      |     +--ro ProbableCause?           string
      |     +--ro SpecificProblem?         string
      |     +--ro PerceivedSeverity?       enumeration
      |     +--ro AdditionalText?          string
      |     +--ro AdditionalInformation?   string
      +--rw Security
      |  +--rw Certificate* [SerialNumber Issuer]
      |     +--rw Enable?               boolean
      |     +--ro LastModif?            yang:date-and-time
      |     +--ro SerialNumber          string
      |     +--ro Issuer                string
      |     +--ro NotBefore?            yang:date-and-time
      |     +--ro NotAfter?             yang:date-and-time
      |     +--ro Subject?              string
      |     +--ro SubjectAlt?           string
      |     +--ro SignatureAlgorithm?   string
      +--rw FAP
      |  +--rw GPS
      |  |  +--rw ScanOnBoot?               boolean
      |  |  +--rw ScanPeriodically?         boolean
      |  |  +--rw PeriodicInterval?         uint32
      |  |  +--rw PeriodicTime?             yang:date-and-time
      |  |  +--rw ContinuousGPS?            boolean
      |  |  +--rw ScanTimeout?              uint32
      |  |  +--ro ScanStatus?               enumeration
      |  |  +--ro ErrorDetails?             string
      |  |  +--ro LastScanTime?             yang:date-and-time
      |  |  +--ro LastSuccessfulScanTime?   yang:date-and-time
      |  |  +--ro LockedLatitude?           int32
      |  |  +--ro LockedLongitude?          int32
      |  |  +--ro NumberOfSatellites?       uint32
      |  |  +--rw GPSReset?                 boolean
      |  |  +--rw ContinuousGPSStatus
      |  |  |  +--ro CurrentFix?                  boolean
      |  |  |  +--ro GotFix?                      boolean
      |  |  |  +--ro TimingGood?                  boolean
      |  |  |  +--ro Latitude?                    int32
      |  |  |  +--ro Longitude?                   int32
      |  |  |  +--ro Elevation?                   int32
      |  |  |  +--ro LastFixTime?                 yang:date-and-time
      |  |  |  +--ro LastFixDuration?             uint32
      |  |  |  +--rw FirstFixTimeout?             int32
      |  |  |  +--ro SatellitesTracked?           uint32
      |  |  |  +--rw SatelliteTrackingInterval?   uint32
      |  |  |  +--ro ReceiverStatus?              string
      |  |  |  +--ro LocationType?                enumeration
      |  |  |  +--rw LockTimeOutDuration?         uint32
      |  |  +--rw AGPSServerConfig
      |  |     +--rw Enable?               boolean
      |  |     +--rw ServerURL?            string
      |  |     +--rw ServerPort?           uint32
      |  |     +--rw Username?             string
      |  |     +--rw Password?             string
      |  |     +--rw ReferenceLatitude?    int32
      |  |     +--rw ReferenceLongitude?   int32
      |  |     +--ro ServerInUse?          boolean
      |  +--rw PerfMgmt
      |  |  +--rw Config* [URL PeriodicUploadInterval PeriodicUploadTime]
      |  |     +--rw Enable?                   boolean
      |  |     +--rw URL                       string
      |  |     +--rw Username?                 string
      |  |     +--rw Password?                 string
      |  |     +--rw PeriodicUploadInterval    uint32
      |  |     +--rw PeriodicUploadTime        yang:date-and-time
      |  +--rw ApplicationPlatform
      |     +--ro Version?                       string
      |     +--rw Enable?                        boolean
      |     +--ro Status?                        enumeration
      |     +--ro MaxNumberOfApplications?       uint32
      |     +--ro CurrentNumberofApplications?   uint32
      |     +--ro Capabilities
      |     |  +--ro PresenceApplicationSupport?                              boolean
      |     |  +--ro FemtoAwarenessAPISupport?                                boolean
      |     |  +--ro SMSAPISupport?                                           boolean
      |     |  +--ro SubscribeToNotificationsOfSMSSentToApplicationSupport?   boolean
      |     |  +--ro QuerySMSDeliveryStatusSupport?                           boolean
      |     |  +--ro MMSAPISupport?                                           boolean
      |     |  +--ro QueryMMSDeliveryStatusSupport?                           boolean
      |     |  +--ro SubscribeToNotificationsOfMMSSentToApplicationSupport?   boolean
      |     |  +--ro TerminalLocationAPISupport?                              boolean
      |     |  +--ro AuthenticationMethodsSupported?                          enumeration
      |     |  +--ro AccessLevelsSupported?                                   enumeration
      |     |  +--ro SendSMSTargetAddressType?                                enumeration
      |     |  +--ro SendMMSTargetAddressType?                                enumeration
      |     +--rw Control
      |     |  +--rw AuthenticationMethod?   string
      |     |  +--rw TunnelInst?             string
      |     |  +--rw FemtoAwareness
      |     |  |  +--rw APIEnable?                                      boolean
      |     |  |  +--rw QueueEnable?                                    boolean
      |     |  |  +--rw Queueing?                                       enumeration
      |     |  |  +--rw MaxAPIUsersNumber?                              uint32
      |     |  |  +--rw FemtozoneID?                                    string
      |     |  |  +--rw NotificationsUserIdentifierMSISDN?              boolean
      |     |  |  +--rw SubscribeToNotificationsResponseCallbackData?   boolean
      |     |  |  +--rw QueryFemtocellResponseTimezone?                 boolean
      |     |  +--rw SMS
      |     |  |  +--rw APIEnable?                                                  boolean
      |     |  |  +--rw QueueEnable?                                                boolean
      |     |  |  +--rw Queueing?                                                   enumeration
      |     |  |  +--rw MaxAPIUsersNumber?                                          uint32
      |     |  |  +--rw MinSendSMSTimeInterval?                                     uint32
      |     |  |  +--rw EnableQuerySMSDeliveryStatus?                               boolean
      |     |  |  +--rw EnableSubscribeToNotificationsOfMessageSentToApplication?   boolean
      |     |  +--rw MMS
      |     |  |  +--rw APIEnable?                                                  boolean
      |     |  |  +--rw QueueEnable?                                                boolean
      |     |  |  +--rw Queueing?                                                   enumeration
      |     |  |  +--rw MaxAPIUsersNumber?                                          uint32
      |     |  |  +--rw MinSendMMSTimeInterval?                                     uint32
      |     |  |  +--rw EnableQueryMMSDeliveryStatus?                               boolean
      |     |  |  +--rw EnableSubscribeToNotificationsOfMessageSentToApplication?   boolean
      |     |  +--rw TerminalLocation
      |     |     +--rw APIEnable?                                      boolean
      |     |     +--rw QueueEnable?                                    boolean
      |     |     +--rw Queueing?                                       enumeration
      |     |     +--rw MaxAPIUsersNumber?                              uint32
      |     |     +--rw QueryMobileLocationResponseAddress?             enumeration
      |     |     +--rw QueryMobileLocationResponseLongitudeLatitude?   boolean
      |     |     +--rw QueryMobileLocationResponseAltitude?            boolean
      |     |     +--rw QueryMobileLocationResponseTimestamp?           uint32
      |     +--rw Monitoring
      |        +--rw Enable?                           boolean
      |        +--rw MonitoringInterval?               uint32
      |        +--ro AuthenticationRequestsReceived?   uint32
      |        +--ro AuthenticationRequestsRejected?   uint32
      |        +--ro FemtoAwareness
      |        |  +--ro APIAvailable?     boolean
      |        |  +--ro APIUsers?         uint32
      |        |  +--ro QueueState?       enumeration
      |        |  +--ro QueueNum?         uint32
      |        |  +--ro QueueReceived?    uint32
      |        |  +--ro QueueDiscarded?   uint32
      |        +--ro SMS
      |        |  +--ro APIAvailable?     boolean
      |        |  +--ro APIUsers?         uint32
      |        |  +--ro QueueState?       enumeration
      |        |  +--ro QueueNum?         uint32
      |        |  +--ro QueueReceived?    uint32
      |        |  +--ro QueueDiscarded?   uint32
      |        +--ro MMS
      |        |  +--ro APIAvailable?     boolean
      |        |  +--ro APIUsers?         uint32
      |        |  +--ro QueueState?       enumeration
      |        |  +--ro QueueNum?         uint32
      |        |  +--ro QueueReceived?    uint32
      |        |  +--ro QueueDiscarded?   uint32
      |        +--ro TerminalLocation
      |           +--ro APIAvailable?     boolean
      |           +--ro APIUsers?         uint32
      |           +--ro QueueState?       enumeration
      |           +--ro QueueNum?         uint32
      |           +--ro QueueReceived?    uint32
      |           +--ro QueueDiscarded?   uint32
      +--rw BulkData
      |  +--rw Enable?                           boolean
      |  +--ro Status?                           enumeration
      |  +--ro MinReportingInterval?             uint32
      |  +--ro Protocols?                        enumeration
      |  +--ro EncodingTypes?                    enumeration
      |  +--ro ParameterWildCardSupported?       boolean
      |  +--ro MaxNumberOfProfiles?              int32
      |  +--ro MaxNumberOfParameterReferences?   int32
      |  +--rw Profile* [Alias]
      |     +--rw Enable?                          boolean
      |     +--rw Protocol?                        string
      |     +--rw EncodingType?                    string
      |     +--rw NumberOfRetainedFailedReports?   int32
      |     +--rw ReportingInterval?               uint32
      |     +--rw TimeReference?                   yang:date-and-time
      |     +--rw StreamingHost?                   string
      |     +--rw StreamingPort?                   uint32
      |     +--rw StreamingSessionID?              uint32
      |     +--rw FileTransferURL?                 string
      |     +--rw FileTransferUsername?            string
      |     +--rw FileTransferPassword?            string
      |     +--rw ControlFileFormat?               string
      |     +--rw Parameter*
      |     |  +--rw Reference?   string
      |     |  +--rw Name?        string
      |     +--rw CSVEncoding
      |     |  +--rw FieldSeparator?    string
      |     |  +--rw RowSeparator?      string
      |     |  +--rw EscapeCharacter?   string
      |     |  +--rw ReportFormat?      enumeration
      |     |  +--rw ReportSchema?      string
      |     |  +--rw RowTimestamp?      enumeration
      |     +--rw JSONEncoding
      |     |  +--rw ReportFormat?      enumeration
      |     |  +--rw ReportSchema?      string
      |     |  +--rw ReportTimestamp?   enumeration
      |     +--rw HTTP
      |        +--rw URL?                        string
      |        +--rw Username?                   string
      |        +--rw Password?                   string
      |        +--ro CompressionSupported?       enumeration
      |        +--rw Compression?                string
      |        +--ro TransferCodingSupported?    enumeration
      |        +--rw TransferCoding?             string
      |        +--ro MethodSupported?            enumeration
      |        +--rw Method?                     string
      |        +--rw UseDateHeader?              boolean
      |        +--rw RetryEnable?                boolean
      |        +--rw RetryMinimumWaitInterval?   uint32
      |        +--rw RetryIntervalMultiplier?    uint32
      |        +--rw RequestURIParameter*
      |           +--rw Name?        string
      |           +--rw Reference?   string
      +--rw XMPP
      |  +--rw Connection* [Username Domain Resource]
      |     +--rw Enable?                          boolean
      |     +--rw Username                         string
      |     +--rw Password?                        string
      |     +--rw Domain                           string
      |     +--rw Resource                         string
      |     +--ro JabberID?                        string
      |     +--ro Status?                          enumeration
      |     +--ro LastChangeDate?                  yang:date-and-time
      |     +--rw ServerConnectAlgorithm?          enumeration
      |     +--rw KeepAliveInterval?               int64
      |     +--rw ServerConnectAttempts?           uint32
      |     +--rw ServerRetryInitialInterval?      uint32
      |     +--rw ServerRetryIntervalMultiplier?   uint32
      |     +--rw ServerRetryMaxInterval?          uint32
      |     +--rw UseTLS?                          boolean
      |     +--ro TLSEstablished?                  boolean
      |     +--rw Server* [ServerAddress Port]
      |     |  +--rw Enable?          boolean
      |     |  +--rw Priority?        uint32
      |     |  +--rw Weight?          int64
      |     |  +--rw ServerAddress    string
      |     |  +--rw Port             uint32
      |     +--ro Stats
      |        +--ro ReceivedMessages?           uint32
      |        +--ro TransmittedMessages?        uint32
      |        +--ro ReceivedErrorMessages?      uint32
      |        +--ro TransmittedErrorMessages?   uint32
      +--rw IEEE1905
      |  +--ro Version?   enumeration
      |  +--rw AL
      |     +--ro IEEE1905Id?            types:MACAddress
      |     +--ro Status?                enumeration
      |     +--ro LastChange?            uint32
      |     +--ro LowerLayers?           string
      |     +--ro RegistrarFreqBand?     enumeration
      |     +--rw Interface* [InterfaceId]
      |     |  +--ro InterfaceId                 types:MACAddress
      |     |  +--ro Status?                     enumeration
      |     |  +--ro LastChange?                 uint32
      |     |  +--ro LowerLayers?                string
      |     |  +--ro InterfaceStackReference?    string
      |     |  +--ro MediaType?                  enumeration
      |     |  +--ro GenericPhyOUI?              string
      |     |  +--ro GenericPhyVariant?          yang:hex-string
      |     |  +--ro GenericPhyURL?              string
      |     |  +--rw SetIntfPowerStateEnabled?   boolean
      |     |  +--rw PowerState?                 enumeration
      |     |  +--ro VendorProperties*
      |     |  |  +--ro OUI?           string
      |     |  |  +--ro Information?   yang:hex-string
      |     |  +--ro Link* [InterfaceId IEEE1905Id]
      |     |     +--ro InterfaceId          types:MACAddress
      |     |     +--ro IEEE1905Id           types:MACAddress
      |     |     +--ro MediaType?           enumeration
      |     |     +--ro GenericPhyOUI?       string
      |     |     +--ro GenericPhyVariant?   yang:hex-string
      |     |     +--ro GenericPhyURL?       string
      |     |     +--ro Metric
      |     |        +--ro IEEE802dot1Bridge?       boolean
      |     |        +--ro PacketErrors?            types:StatsCounter32
      |     |        +--ro PacketErrorsReceived?    types:StatsCounter32
      |     |        +--ro TransmittedPackets?      types:StatsCounter32
      |     |        +--ro PacketsReceived?         types:StatsCounter32
      |     |        +--ro MACThroughputCapacity?   uint32
      |     |        +--ro LinkAvailability?        uint32
      |     |        +--ro PHYRate?                 uint32
      |     |        +--ro RSSI?                    uint32
      |     +--rw ForwardingTable
      |     |  +--rw SetForwardingEnabled?   boolean
      |     |  +--rw ForwardingRule*
      |     |     +--rw InterfaceList?               string
      |     |     +--rw MACDestinationAddress?       types:MACAddress
      |     |     +--rw MACDestinationAddressFlag?   boolean
      |     |     +--rw MACSourceAddress?            types:MACAddress
      |     |     +--rw MACSourceAddressFlag?        boolean
      |     |     +--rw EtherType?                   uint32
      |     |     +--rw EtherTypeFlag?               boolean
      |     |     +--rw Vid?                         uint32
      |     |     +--rw VidFlag?                     boolean
      |     |     +--rw PCP?                         uint32
      |     |     +--rw PCPFlag?                     boolean
      |     +--rw NetworkTopology
      |     |  +--rw Enable?                boolean
      |     |  +--ro Status?                enumeration
      |     |  +--rw MaxChangeLogEntries?   uint32
      |     |  +--ro LastChange?            string
      |     |  +--ro ChangeLog*
      |     |  |  +--ro TimeStamp?             yang:date-and-time
      |     |  |  +--ro EventType?             enumeration
      |     |  |  +--ro ReporterDeviceId?      types:MACAddress
      |     |  |  +--ro ReporterInterfaceId?   types:MACAddress
      |     |  |  +--ro NeighborType?          enumeration
      |     |  |  +--ro NeighborId?            types:MACAddress
      |     |  +--ro IEEE1905Device* [IEEE1905Id]
      |     |     +--ro IEEE1905Id             types:MACAddress
      |     |     +--ro Version?               enumeration
      |     |     +--ro RegistrarFreqBand?     enumeration
      |     |     +--ro FriendlyName?          string
      |     |     +--ro ManufacturerName?      string
      |     |     +--ro ManufacturerModel?     string
      |     |     +--ro ControlURL?            string
      |     |     +--ro IPv4Address* [MACAddress IPv4Address]
      |     |     |  +--ro MACAddress         types:MACAddress
      |     |     |  +--ro IPv4Address        types:IPv4Address
      |     |     |  +--ro IPv4AddressType?   enumeration
      |     |     |  +--ro DHCPServer?        types:IPAddress
      |     |     +--ro IPv6Address* [MACAddress IPv6Address]
      |     |     |  +--ro MACAddress           types:MACAddress
      |     |     |  +--ro IPv6Address          types:IPv6Address
      |     |     |  +--ro IPv6AddressType?     enumeration
      |     |     |  +--ro IPv6AddressOrigin?   types:IPv6Address
      |     |     +--ro VendorProperties*
      |     |     |  +--ro MessageType?   yang:hex-string
      |     |     |  +--ro OUI?           string
      |     |     |  +--ro Information?   yang:hex-string
      |     |     +--ro Interface* [InterfaceId]
      |     |     |  +--ro InterfaceId          types:MACAddress
      |     |     |  +--ro MediaType?           enumeration
      |     |     |  +--ro PowerState?          enumeration
      |     |     |  +--ro GenericPhyOUI?       string
      |     |     |  +--ro GenericPhyVariant?   yang:hex-string
      |     |     |  +--ro GenericPhyURL?       string
      |     |     |  +--ro NetworkMembership?   types:MACAddress
      |     |     |  +--ro Role?                enumeration
      |     |     |  +--ro APChannelBand?       yang:hex-string
      |     |     |  +--ro FrequencyIndex1?     yang:hex-string
      |     |     |  +--ro FrequencyIndex2?     yang:hex-string
      |     |     +--ro NonIEEE1905Neighbor* [LocalInterface NeighborInterfaceId]
      |     |     |  +--ro LocalInterface         string
      |     |     |  +--ro NeighborInterfaceId    types:MACAddress
      |     |     +--ro L2Neighbor* [LocalInterface NeighborInterfaceId]
      |     |     |  +--ro LocalInterface         string
      |     |     |  +--ro NeighborInterfaceId    types:MACAddress
      |     |     |  +--ro BehindInterfaceIds?    types:MACAddress
      |     |     +--ro IEEE1905Neighbor* [LocalInterface NeighborDeviceId]
      |     |     |  +--ro LocalInterface      string
      |     |     |  +--ro NeighborDeviceId    types:MACAddress
      |     |     |  +--ro Metric* [NeighborMACAddress]
      |     |     |     +--ro NeighborMACAddress       types:MACAddress
      |     |     |     +--ro IEEE802dot1Bridge?       boolean
      |     |     |     +--ro PacketErrors?            types:StatsCounter32
      |     |     |     +--ro PacketErrorsReceived?    types:StatsCounter32
      |     |     |     +--ro TransmittedPackets?      types:StatsCounter32
      |     |     |     +--ro PacketsReceived?         types:StatsCounter32
      |     |     |     +--ro MACThroughputCapacity?   uint32
      |     |     |     +--ro LinkAvailability?        uint32
      |     |     |     +--ro PHYRate?                 uint32
      |     |     |     +--ro RSSI?                    uint32
      |     |     +--ro BridgingTuple*
      |     |        +--ro InterfaceList?   string
      |     +--rw Security
      |     |  +--rw SetupMethod?   enumeration
      |     |  +--rw Password?      string
      |     +--ro NetworkingRegistrar
      |        +--ro Registrar2dot4?   types:MACAddress
      |        +--ro Registrar5?       types:MACAddress
      |        +--ro Registrar60?      types:MACAddress
      +--rw MQTT
      |  +--ro Capabilities
      |  |  +--ro ProtocolVersionsSupported?              enumeration
      |  |  +--ro TransportProtocolSupported?             enumeration
      |  |  +--ro MaxNumberOfClientSubscriptions?         uint32
      |  |  +--ro MaxNumberOfBrokerBridges?               uint32
      |  |  +--ro MaxNumberOfBrokerBridgeSubscriptions?   uint32
      |  +--rw Client* [Alias]
      |  |  +--rw Name?                string
      |  |  +--rw Enable?              boolean
      |  |  +--ro Status?              enumeration
      |  |  +--rw BrokerAddress?       string
      |  |  +--rw BrokerPort?          uint32
      |  |  +--rw ClientID?            string
      |  |  +--rw Username?            string
      |  |  +--rw Password?            string
      |  |  +--rw TransportProtocol?   string
      |  |  +--rw CleanSession?        boolean
      |  |  +--rw MessageRetryTime?    uint32
      |  |  +--rw ConnectRetryTime?    uint32
      |  |  +--rw KeepAliveTime?       uint32
      |  |  +--rw ProtocolVersion?     string
      |  |  +--rw ForceReconnect?      boolean
      |  |  +--rw WillEnable?          boolean
      |  |  +--rw WillTopic?           string
      |  |  +--rw WillValue?           string
      |  |  +--rw WillQoS?             uint32
      |  |  +--rw WillRetain?          boolean
      |  |  +--rw Subscription* [Alias]
      |  |  |  +--rw Topic?    string
      |  |  |  +--rw QoS?      uint32
      |  |  |  +--rw Enable?   boolean
      |  |  +--ro Stats
      |  |     +--ro BrokerConnectionEstablished?   yang:date-and-time
      |  |     +--ro LastPublishMessageSent?        yang:date-and-time
      |  |     +--ro LastPublishMessageReceived?    yang:date-and-time
      |  |     +--ro PublishSent?                   types:StatsCounter64
      |  |     +--ro PublishReceived?               types:StatsCounter64
      |  |     +--ro SubscribeSent?                 types:StatsCounter64
      |  |     +--ro UnSubscribeSent?               types:StatsCounter64
      |  |     +--ro MQTTMessagesSent?              types:StatsCounter64
      |  |     +--ro MQTTMessagesReceived?          types:StatsCounter64
      |  |     +--ro ConnectionErrors?              types:StatsCounter64
      |  |     +--ro PublishErrors?                 types:StatsCounter64
      |  +--rw Broker* [Alias]
      |     +--rw Name?        string
      |     +--rw Enable?      boolean
      |     +--ro Status?      enumeration
      |     +--rw Port?        uint32
      |     +--rw Interface?   string
      |     +--rw Username?    string
      |     +--rw Password?    string
      |     +--rw Bridge* [Name]
      |     |  +--rw Name                        string
      |     |  +--rw Enable?                     boolean
      |     |  +--ro Status?                     enumeration
      |     |  +--rw ClientID?                   string
      |     |  +--rw Username?                   string
      |     |  +--rw Password?                   string
      |     |  +--rw CleanSession?               boolean
      |     |  +--rw TransportProtocol?          string
      |     |  +--rw ProtocolVersion?            string
      |     |  +--rw ServerSelectionAlgorithm?   enumeration
      |     |  +--ro ServerConnection?           string
      |     |  +--rw Server* [Address Port]
      |     |  |  +--rw Enable?     boolean
      |     |  |  +--rw Priority?   uint32
      |     |  |  +--rw Weight?     int64
      |     |  |  +--rw Address     string
      |     |  |  +--rw Port        uint32
      |     |  +--rw Subscription* [Alias]
      |     |     +--rw Topic?          string
      |     |     +--rw Direction?      enumeration
      |     |     +--rw Enable?         boolean
      |     |     +--rw QoS?            uint32
      |     |     +--rw LocalPrefix?    string
      |     |     +--rw RemotePrefix?   string
      |     +--ro Stats
      |        +--ro TotalNumberOfClients?      types:StatsCounter64
      |        +--ro NumberOfActiveClients?     types:StatsCounter64
      |        +--ro NumberOfInActiveClients?   types:StatsCounter64
      |        +--ro PublishSent?               types:StatsCounter64
      |        +--ro PublishReceived?           types:StatsCounter64
      |        +--ro SubscribeSent?             types:StatsCounter64
      |        +--ro UnSubscribeSent?           types:StatsCounter64
      |        +--ro MQTTMessagesSent?          types:StatsCounter64
      |        +--ro MQTTMessagesReceived?      types:StatsCounter64
      |        +--ro ConnectionErrors?          types:StatsCounter64
      |        +--ro PublishErrors?             types:StatsCounter64
      +--rw DynamicDNS
         +--ro SupportedServices?   string
         +--rw Client* [Server Username]
         |  +--rw Enable?      boolean
         |  +--ro Status?      enumeration
         |  +--ro LastError?   enumeration
         |  +--rw Interface?   string
         |  +--rw Server       string
         |  +--rw Username     string
         |  +--rw Password?    string
         |  +--rw Hostname* [Name]
         |     +--rw Enable?       boolean
         |     +--ro Status?       enumeration
         |     +--rw Name          string
         |     +--ro LastUpdate?   yang:date-and-time
         +--rw Server* [Name]
            +--rw Enable?               string
            +--rw Name                  string
            +--rw ServiceName?          string
            +--rw ServerAddress?        string
            +--rw ServerPort?           uint32
            +--ro SupportedProtocols?   enumeration
            +--rw Protocol?             string
            +--rw CheckInterval?        uint32
            +--rw RetryInterval?        uint32
            +--rw MaxRetries?           int32
