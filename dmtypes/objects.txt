@startuml

' this is valid PlantUML class diagram syntax
' plantumlparser.py understands only a subset

'!define MY_SWITCH

' XXX which primitive types can be assumed?

hide empty fields
hide empty methods

' aggregation: whole   o--  part (part poss shared; poss diff lifetimes)
' composition: whole   *--  part (part owned; same lifetimes)
' extension:   derived --|> base (or right to left)

' number of hyphens controls arrow length
' dots rather than hyphens create dotted arrows
' can also add < or > to agg/comp arrows to indicate navigability

' including the role in the cardinality is a local convention; PlantUML doesn't
' support association roles (and luckily doesn't parse cardinality)

class bistate {
  +state: Boolean
  +on()
  +off()
  +toggle()
}

class intensity {
  +level: Int
  +ratio: Int
  +fading: Boolean {readOnly}
  +step_up()
  +step_down()
  +fade_auto()
  +fade_up()
  +fade_down()
  +fade_stop()
  +max()
  +min()
}

class energy {
  +consumption: Decimal {readOnly}
  +since: Int {readOnly}
  +instantaneous: Int {readOnly}
}

class switch
switch "1" *-- "1\nbs" bistate

class dimmer
dimmer "1" *-- "1\nbs" bistate
dimmer "1" *-- "int\n1" intensity
dimmer "1" *-- "en\n0..1" energy

class ceiling_fan
ceiling_fan "1" *-- "sw\n1" switch
ceiling_fan "1" *-- "dim\n1" dimmer

!ifdef MY_SWITCH
my_switch --|> switch
class my_switch {
  +my_swp: Boolean
}
!endif

@enduml
